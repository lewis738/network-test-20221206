{"version":3,"file":"js/794.006f3f37.js","mappings":"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","sources":["webpack://network_demo/./node_modules/@yomguithereal/helpers/extend.js","webpack://network_demo/./node_modules/events/events.js","webpack://network_demo/./node_modules/graphology-utils/is-graph.js","webpack://network_demo/../src/utils.js","webpack://network_demo/../../../node_modules/events/events.js","webpack://network_demo/../../../node_modules/obliterator/iterator.js","webpack://network_demo/../../../node_modules/obliterator/support.js","webpack://network_demo/../../../node_modules/obliterator/iter.js","webpack://network_demo/../../../node_modules/obliterator/take.js","webpack://network_demo/../src/errors.js","webpack://network_demo/../src/data.js","webpack://network_demo/../src/attributes/nodes.js","webpack://network_demo/../src/attributes/edges.js","webpack://network_demo/../../../node_modules/obliterator/chain.js","webpack://network_demo/../src/iteration/edges.js","webpack://network_demo/../src/iteration/neighbors.js","webpack://network_demo/../src/iteration/adjacency.js","webpack://network_demo/../src/serialization.js","webpack://network_demo/../src/graph.js","webpack://network_demo/../src/classes.js","webpack://network_demo/./node_modules/sigma/core/camera.js","webpack://network_demo/./node_modules/sigma/core/captors/captor.js","webpack://network_demo/./node_modules/sigma/core/captors/mouse.js","webpack://network_demo/./node_modules/sigma/core/captors/touch.js","webpack://network_demo/./node_modules/sigma/core/labels.js","webpack://network_demo/./node_modules/sigma/core/quadtree.js","webpack://network_demo/./node_modules/sigma/index.js","webpack://network_demo/./node_modules/sigma/rendering/canvas/edge-label.js","webpack://network_demo/./node_modules/sigma/rendering/canvas/hover.js","webpack://network_demo/./node_modules/sigma/rendering/canvas/label.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/common/edge.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/common/node.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/common/program.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/edge.arrow.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/edge.arrowHead.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/edge.clamped.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/edge.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/programs/node.fast.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.frag.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/edge.arrowHead.vert.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/edge.clamped.vert.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/edge.frag.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/edge.vert.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/node.fast.frag.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/node.fast.vert.glsl.js","webpack://network_demo/./node_modules/sigma/rendering/webgl/shaders/utils.js","webpack://network_demo/./node_modules/sigma/settings.js","webpack://network_demo/./node_modules/sigma/sigma.js","webpack://network_demo/./node_modules/sigma/types.js","webpack://network_demo/./node_modules/sigma/utils/animate.js","webpack://network_demo/./node_modules/sigma/utils/data.js","webpack://network_demo/./node_modules/sigma/utils/easings.js","webpack://network_demo/./node_modules/sigma/utils/edge-collisions.js","webpack://network_demo/./node_modules/sigma/utils/index.js","webpack://network_demo/./node_modules/sigma/utils/matrices.js"],"sourcesContent":["/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n\n  if (l2 === 0)\n    return;\n\n  var l1 = array.length;\n\n  array.length += l2;\n\n  for (var i = 0; i < l2; i++)\n    array[l1 + i] = values[i];\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology Utilities\n * =====================\n *\n * Collection of helpful functions used by the implementation.\n */\n\n/**\n * Object.assign-like polyfill.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignPolyfill() {\n  const target = arguments[0];\n\n  for (let i = 1, l = arguments.length; i < l; i++) {\n    if (!arguments[i]) continue;\n\n    for (const k in arguments[i]) target[k] = arguments[i][k];\n  }\n\n  return target;\n}\n\nlet assign = assignPolyfill;\n\nif (typeof Object.assign === 'function') assign = Object.assign;\n\nexport {assign};\n\n/**\n * Function returning the first matching edge for given path.\n * Note: this function does not check the existence of source & target. This\n * must be performed by the caller.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @param  {any}    target - Target node.\n * @param  {string} type   - Type of the edge (mixed, directed or undirected).\n * @return {string|null}\n */\nexport function getMatchingEdge(graph, source, target, type) {\n  const sourceData = graph._nodes.get(source);\n\n  let edge = null;\n\n  if (!sourceData) return edge;\n\n  if (type === 'mixed') {\n    edge =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]);\n  } else if (type === 'directed') {\n    edge = sourceData.out && sourceData.out[target];\n  } else {\n    edge = sourceData.undirected && sourceData.undirected[target];\n  }\n\n  return edge;\n}\n\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\nexport function isPlainObject(value) {\n  return (\n    typeof value === 'object' && value !== null && value.constructor === Object\n  );\n}\n\n/**\n * Checks whether the given object is empty.\n *\n * @param  {object}  o - Target Object.\n * @return {boolean}\n */\nexport function isEmpty(o) {\n  let k;\n\n  for (k in o) return false;\n\n  return true;\n}\n\n/**\n * Creates a \"private\" property for the given member name by concealing it\n * using the `enumerable` option.\n *\n * @param {object} target - Target object.\n * @param {string} name   - Member name.\n */\nexport function privateProperty(target, name, value) {\n  Object.defineProperty(target, name, {\n    enumerable: false,\n    configurable: false,\n    writable: true,\n    value\n  });\n}\n\n/**\n * Creates a read-only property for the given member name & the given getter.\n *\n * @param {object}   target - Target object.\n * @param {string}   name   - Member name.\n * @param {mixed}    value  - The attached getter or fixed value.\n */\nexport function readOnlyProperty(target, name, value) {\n  const descriptor = {\n    enumerable: true,\n    configurable: true\n  };\n\n  if (typeof value === 'function') {\n    descriptor.get = value;\n  } else {\n    descriptor.value = value;\n    descriptor.writable = false;\n  }\n\n  Object.defineProperty(target, name, descriptor);\n}\n\n/**\n * Returns whether the given object constitute valid hints.\n *\n * @param {object} hints - Target object.\n */\nexport function validateHints(hints) {\n  if (!isPlainObject(hints)) return false;\n\n  if (hints.attributes && !Array.isArray(hints.attributes)) return false;\n\n  return true;\n}\n\n/**\n * Creates a function generating incremental ids for edges.\n *\n * @return {function}\n */\nexport function incrementalIdStartingFromRandomByte() {\n  let i = Math.floor(Math.random() * 256) & 0xff;\n\n  return () => {\n    return i++;\n  };\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n","/**\n * Obliterator Iter Function\n * ==========================\n *\n * Function coercing values to an iterator. It can be quite useful when needing\n * to handle iterables and iterators the same way.\n */\nvar Iterator = require('./iterator.js');\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\nfunction iterOrNull(target) {\n  // Indexed sequence\n  if (\n    typeof target === 'string' ||\n    Array.isArray(target) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(target))\n  )\n    return Iterator.fromSequence(target);\n\n  // Invalid value\n  if (typeof target !== 'object' || target === null) return null;\n\n  // Iterable\n  if (SYMBOL_SUPPORT && typeof target[Symbol.iterator] === 'function')\n    return target[Symbol.iterator]();\n\n  // Iterator duck-typing\n  if (typeof target.next === 'function') return target;\n\n  // Invalid object\n  return null;\n}\n\nmodule.exports = function iter(target) {\n  var iterator = iterOrNull(target);\n\n  if (!iterator)\n    throw new Error(\n      'obliterator: target is not iterable nor a valid iterator.'\n    );\n\n  return iterator;\n};\n","/* eslint no-constant-condition: 0 */\n/**\n * Obliterator Take Function\n * ==========================\n *\n * Function taking n or every value of the given iterator and returns them\n * into an array.\n */\nvar iter = require('./iter.js');\n\n/**\n * Take.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {number}   [n]      - Optional number of items to take.\n * @return {array}\n */\nmodule.exports = function take(iterable, n) {\n  var l = arguments.length > 1 ? n : Infinity,\n    array = l !== Infinity ? new Array(l) : [],\n    step,\n    i = 0;\n\n  var iterator = iter(iterable);\n\n  while (true) {\n    if (i === l) return array;\n\n    step = iterator.next();\n\n    if (step.done) {\n      if (i !== n) array.length = i;\n\n      return array;\n    }\n\n    array[i++] = step.value;\n  }\n};\n","/**\n * Graphology Custom Errors\n * =========================\n *\n * Defining custom errors for ease of use & easy unit tests across\n * implementations (normalized typology rather than relying on error\n * messages to check whether the correct error was found).\n */\nexport class GraphError extends Error {\n  constructor(message) {\n    super();\n    this.name = 'GraphError';\n    this.message = message;\n  }\n}\n\nexport class InvalidArgumentsGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'InvalidArgumentsGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(\n        this,\n        InvalidArgumentsGraphError.prototype.constructor\n      );\n  }\n}\n\nexport class NotFoundGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'NotFoundGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, NotFoundGraphError.prototype.constructor);\n  }\n}\n\nexport class UsageGraphError extends GraphError {\n  constructor(message) {\n    super(message);\n    this.name = 'UsageGraphError';\n\n    // This is V8 specific to enhance stack readability\n    if (typeof Error.captureStackTrace === 'function')\n      Error.captureStackTrace(this, UsageGraphError.prototype.constructor);\n  }\n}\n","/**\n * Graphology Internal Data Classes\n * =================================\n *\n * Internal classes hopefully reduced to structs by engines & storing\n * necessary information for nodes & edges.\n *\n * Note that those classes don't rely on the `class` keyword to avoid some\n * cruft introduced by most of ES2015 transpilers.\n */\n\n/**\n * MixedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function MixedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nMixedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n  this.undirected = {};\n};\n\n/**\n * DirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function DirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nDirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.inDegree = 0;\n  this.outDegree = 0;\n  this.directedLoops = 0;\n\n  // Indices\n  this.in = {};\n  this.out = {};\n};\n\n/**\n * UndirectedNodeData class.\n *\n * @constructor\n * @param {string} string     - The node's key.\n * @param {object} attributes - Node's attributes.\n */\nexport function UndirectedNodeData(key, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n\n  this.clear();\n}\n\nUndirectedNodeData.prototype.clear = function () {\n  // Degrees\n  this.undirectedDegree = 0;\n  this.undirectedLoops = 0;\n\n  // Indices\n  this.undirected = {};\n};\n\n/**\n * EdgeData class.\n *\n * @constructor\n * @param {boolean} undirected   - Whether the edge is undirected.\n * @param {string}  string       - The edge's key.\n * @param {string}  source       - Source of the edge.\n * @param {string}  target       - Target of the edge.\n * @param {object}  attributes   - Edge's attributes.\n */\nexport function EdgeData(undirected, key, source, target, attributes) {\n  // Attributes\n  this.key = key;\n  this.attributes = attributes;\n  this.undirected = undirected;\n\n  // Extremities\n  this.source = source;\n  this.target = target;\n}\n\nEdgeData.prototype.attach = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  // Handling source\n  this.source[outKey][target] = this;\n\n  if (this.undirected && source === target) return;\n\n  // Handling target\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.attachMulti = function () {\n  let outKey = 'out';\n  let inKey = 'in';\n\n  const source = this.source.key;\n  const target = this.target.key;\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Handling source\n  const adj = this.source[outKey];\n  const head = adj[target];\n\n  if (typeof head === 'undefined') {\n    adj[target] = this;\n\n    // Self-loop optimization\n    if (!(this.undirected && source === target)) {\n      // Handling target\n      this.target[inKey][source] = this;\n    }\n\n    return;\n  }\n\n  // Prepending to doubly-linked list\n  head.previous = this;\n  this.next = head;\n\n  // Pointing to new head\n  // NOTE: use mutating swap later to avoid lookup?\n  adj[target] = this;\n  this.target[inKey][source] = this;\n};\n\nEdgeData.prototype.detach = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  delete this.source[outKey][target];\n\n  // No-op delete in case of undirected self-loop\n  delete this.target[inKey][source];\n};\n\nEdgeData.prototype.detachMulti = function () {\n  const source = this.source.key;\n  const target = this.target.key;\n\n  let outKey = 'out';\n  let inKey = 'in';\n\n  if (this.undirected) outKey = inKey = 'undirected';\n\n  // Deleting from doubly-linked list\n  if (this.previous === undefined) {\n    // We are dealing with the head\n\n    // Should we delete the adjacency entry because it is now empty?\n    if (this.next === undefined) {\n      delete this.source[outKey][target];\n\n      // No-op delete in case of undirected self-loop\n      delete this.target[inKey][source];\n    } else {\n      // Detaching\n      this.next.previous = undefined;\n\n      // NOTE: could avoid the lookups by creating a #.become mutating method\n      this.source[outKey][target] = this.next;\n\n      // No-op delete in case of undirected self-loop\n      this.target[inKey][source] = this.next;\n    }\n  } else {\n    // We are dealing with another list node\n    this.previous.next = this.next;\n\n    // If not last\n    if (this.next !== undefined) {\n      this.next.previous = this.previous;\n    }\n  }\n};\n","/**\n * Graphology Node Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject} from '../utils';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\nconst NODE = 0;\nconst SOURCE = 1;\nconst TARGET = 2;\nconst OPPOSITE = 3;\n\nfunction findRelevantNodeData(\n  graph,\n  method,\n  mode,\n  nodeOrEdge,\n  nameOrEdge,\n  add1,\n  add2\n) {\n  let nodeData, edgeData, arg1, arg2;\n\n  nodeOrEdge = '' + nodeOrEdge;\n\n  if (mode === NODE) {\n    nodeData = graph._nodes.get(nodeOrEdge);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" node in the graph.`\n      );\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  } else if (mode === OPPOSITE) {\n    nameOrEdge = '' + nameOrEdge;\n\n    edgeData = graph._edges.get(nameOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nameOrEdge}\" edge in the graph.`\n      );\n\n    const source = edgeData.source.key;\n    const target = edgeData.target.key;\n\n    if (nodeOrEdge === source) {\n      nodeData = edgeData.target;\n    } else if (nodeOrEdge === target) {\n      nodeData = edgeData.source;\n    } else {\n      throw new NotFoundGraphError(\n        `Graph.${method}: the \"${nodeOrEdge}\" node is not attached to the \"${nameOrEdge}\" edge (${source}, ${target}).`\n      );\n    }\n\n    arg1 = add1;\n    arg2 = add2;\n  } else {\n    edgeData = graph._edges.get(nodeOrEdge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.${method}: could not find the \"${nodeOrEdge}\" edge in the graph.`\n      );\n\n    if (mode === SOURCE) {\n      nodeData = edgeData.source;\n    } else {\n      nodeData = edgeData.target;\n    }\n\n    arg1 = nameOrEdge;\n    arg2 = add1;\n  }\n\n  return [nodeData, arg1, arg2];\n}\n\nfunction attachNodeAttributeGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes[name];\n  };\n}\n\nfunction attachNodeAttributesGetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge) {\n    const [data] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge\n    );\n\n    return data.attributes;\n  };\n}\n\nfunction attachNodeAttributeChecker(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\nfunction attachNodeAttributeSetter(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, value] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1, add2) {\n    const [data, name, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1,\n      add2\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    const attributes = data.attributes;\n    const value = updater(attributes[name]);\n\n    attributes[name] = value;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributeRemover(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, name] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesReplacer(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesMerger(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, attributes] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\nfunction attachNodeAttributesUpdater(Class, method, mode) {\n  Class.prototype[method] = function (nodeOrEdge, nameOrEdge, add1) {\n    const [data, updater] = findRelevantNodeData(\n      this,\n      method,\n      mode,\n      nodeOrEdge,\n      nameOrEdge,\n      add1\n    );\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('nodeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst NODE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachNodeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachNodeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachNodeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachNodeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachNodeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachNodeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachNodeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachNodeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachNodeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachNodeAttributesMethods(Graph) {\n  NODE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For nodes\n    attacher(Graph, name('Node'), NODE);\n\n    // For sources\n    attacher(Graph, name('Source'), SOURCE);\n\n    // For targets\n    attacher(Graph, name('Target'), TARGET);\n\n    // For opposites\n    attacher(Graph, name('Opposite'), OPPOSITE);\n  });\n}\n","/**\n * Graphology Edge Attributes methods\n * ===================================\n */\nimport {assign, isPlainObject, getMatchingEdge} from '../utils';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from '../errors';\n\n/**\n * Attach an attribute getter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeGetter(Class, method, type) {\n  /**\n   * Get the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {mixed}          - The attribute's value.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes[name];\n  };\n}\n\n/**\n * Attach an attributes getter method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributesGetter(Class, method, type) {\n  /**\n   * Retrieves all the target element's attributes.\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   *\n   * @return {object}          - The element's attributes.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 1) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + arguments[1];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes;\n  };\n}\n\n/**\n * Attach an attribute checker method onto the provided class.\n *\n * @param {function} Class       - Target class.\n * @param {string}   method      - Method name.\n * @param {string}   type        - Type of the edge to find.\n */\nfunction attachEdgeAttributeChecker(Class, method, type) {\n  /**\n   * Checks whether the desired attribute is set for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    return data.attributes.hasOwnProperty(name);\n  };\n}\n\n/**\n * Attach an attribute setter method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeSetter(Class, method, type) {\n  /**\n   * Set the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   * @param  {mixed}  value   - New attribute value.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, value) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      value = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    data.attributes[name] = value;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeUpdater(Class, method, type) {\n  /**\n   * Update the desired attribute for the given element (node or edge) using\n   * the provided function.\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {string}   name    - Attribute's name.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 3) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n      updater = arguments[3];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: updater should be a function.`\n      );\n\n    data.attributes[name] = updater(data.attributes[name]);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'set',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute remover method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributeRemover(Class, method, type) {\n  /**\n   * Remove the desired attribute for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element - Target element.\n   * @param  {string} name    - Attribute's name.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source - Source element.\n   * @param  {any}     target - Target element.\n   * @param  {string}  name   - Attribute's name.\n   *\n   * @return {Graph}          - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, name) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element;\n      const target = '' + name;\n\n      name = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    delete data.attributes[name];\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'remove',\n      attributes: data.attributes,\n      name\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute replacer method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesReplacer(Class, method, type) {\n  /**\n   * Replace the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - New attributes.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - New attributes.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    data.attributes = attributes;\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'replace',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute merger method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesMerger(Class, method, type) {\n  /**\n   * Merge the attributes for the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}    element    - Target element.\n   * @param  {object} attributes - Attributes to merge.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}     source     - Source element.\n   * @param  {any}     target     - Target element.\n   * @param  {object}  attributes - Attributes to merge.\n   *\n   * @return {Graph}              - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, attributes) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + attributes;\n\n      attributes = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided attributes are not a plain object.`\n      );\n\n    assign(data.attributes, attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'merge',\n      attributes: data.attributes,\n      data: attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * Attach an attribute updater method onto the provided class.\n *\n * @param {function} Class         - Target class.\n * @param {string}   method        - Method name.\n * @param {string}   type          - Type of the edge to find.\n */\nfunction attachEdgeAttributesUpdater(Class, method, type) {\n  /**\n   * Update the attributes of the given element (node or edge).\n   *\n   * Arity 2:\n   * @param  {any}      element - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * Arity 3 (only for edges):\n   * @param  {any}      source  - Source element.\n   * @param  {any}      target  - Target element.\n   * @param  {function} updater - Updater function.\n   *\n   * @return {Graph}            - Returns itself for chaining.\n   *\n   * @throws {Error} - Will throw if too many arguments are provided.\n   * @throws {Error} - Will throw if any of the elements is not found.\n   */\n  Class.prototype[method] = function (element, updater) {\n    let data;\n\n    if (this.type !== 'mixed' && type !== 'mixed' && type !== this.type)\n      throw new UsageGraphError(\n        `Graph.${method}: cannot find this type of edges in your ${this.type} graph.`\n      );\n\n    if (arguments.length > 2) {\n      if (this.multi)\n        throw new UsageGraphError(\n          `Graph.${method}: cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.`\n        );\n\n      const source = '' + element,\n        target = '' + updater;\n\n      updater = arguments[2];\n\n      data = getMatchingEdge(this, source, target, type);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find an edge for the given path (\"${source}\" - \"${target}\").`\n        );\n    } else {\n      if (type !== 'mixed')\n        throw new UsageGraphError(\n          `Graph.${method}: calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.`\n        );\n\n      element = '' + element;\n      data = this._edges.get(element);\n\n      if (!data)\n        throw new NotFoundGraphError(\n          `Graph.${method}: could not find the \"${element}\" edge in the graph.`\n        );\n    }\n\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.${method}: provided updater is not a function.`\n      );\n\n    data.attributes = updater(data.attributes);\n\n    // Emitting\n    this.emit('edgeAttributesUpdated', {\n      key: data.key,\n      type: 'update',\n      attributes: data.attributes\n    });\n\n    return this;\n  };\n}\n\n/**\n * List of methods to attach.\n */\nconst EDGE_ATTRIBUTES_METHODS = [\n  {\n    name: element => `get${element}Attribute`,\n    attacher: attachEdgeAttributeGetter\n  },\n  {\n    name: element => `get${element}Attributes`,\n    attacher: attachEdgeAttributesGetter\n  },\n  {\n    name: element => `has${element}Attribute`,\n    attacher: attachEdgeAttributeChecker\n  },\n  {\n    name: element => `set${element}Attribute`,\n    attacher: attachEdgeAttributeSetter\n  },\n  {\n    name: element => `update${element}Attribute`,\n    attacher: attachEdgeAttributeUpdater\n  },\n  {\n    name: element => `remove${element}Attribute`,\n    attacher: attachEdgeAttributeRemover\n  },\n  {\n    name: element => `replace${element}Attributes`,\n    attacher: attachEdgeAttributesReplacer\n  },\n  {\n    name: element => `merge${element}Attributes`,\n    attacher: attachEdgeAttributesMerger\n  },\n  {\n    name: element => `update${element}Attributes`,\n    attacher: attachEdgeAttributesUpdater\n  }\n];\n\n/**\n * Attach every attributes-related methods to a Graph class.\n *\n * @param {function} Graph - Target class.\n */\nexport default function attachEdgeAttributesMethods(Graph) {\n  EDGE_ATTRIBUTES_METHODS.forEach(function ({name, attacher}) {\n    // For edges\n    attacher(Graph, name('Edge'), 'mixed');\n\n    // For directed edges\n    attacher(Graph, name('DirectedEdge'), 'directed');\n\n    // For undirected edges\n    attacher(Graph, name('UndirectedEdge'), 'undirected');\n  });\n}\n","/**\n * Obliterator Chain Function\n * ===========================\n *\n * Variadic function combining the given iterables.\n */\nvar Iterator = require('./iterator.js');\nvar iter = require('./iter.js');\n\n/**\n * Chain.\n *\n * @param  {...Iterator} iterables - Target iterables.\n * @return {Iterator}\n */\nmodule.exports = function chain() {\n  var iterables = arguments;\n  var current = null;\n  var i = -1;\n\n  /* eslint-disable no-constant-condition */\n  return new Iterator(function next() {\n    var step = null;\n\n    do {\n      if (current === null) {\n        i++;\n\n        if (i >= iterables.length) return {done: true};\n\n        current = iter(iterables[i]);\n      }\n\n      step = current.next();\n\n      if (step.done === true) {\n        current = null;\n        continue;\n      }\n\n      break;\n    } while (true);\n\n    return step;\n  });\n};\n","/**\n * Graphology Edge Iteration\n * ==========================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's edges.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\nimport take from 'obliterator/take';\n\nimport {InvalidArgumentsGraphError, NotFoundGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst EDGES_ITERATION = [\n  {\n    name: 'edges',\n    type: 'mixed'\n  },\n  {\n    name: 'inEdges',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outEdges',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundEdges',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundEdges',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedEdges',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedEdges',\n    type: 'undirected'\n  }\n];\n\n/**\n * Function iterating over edges from the given object to match one of them.\n *\n * @param {object}   object   - Target object.\n * @param {function} callback - Function to call.\n */\nfunction forEachSimple(breakable, object, callback, avoid) {\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    const edgeData = object[k];\n\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n  }\n\n  return;\n}\n\nfunction forEachMulti(breakable, object, callback, avoid) {\n  let edgeData, source, target;\n\n  let shouldBreak = false;\n\n  for (const k in object) {\n    if (k === avoid) continue;\n\n    edgeData = object[k];\n\n    do {\n      source = edgeData.source;\n      target = edgeData.target;\n\n      shouldBreak = callback(\n        edgeData.key,\n        edgeData.attributes,\n        source.key,\n        target.key,\n        source.attributes,\n        target.attributes,\n        edgeData.undirected\n      );\n\n      if (breakable && shouldBreak) return edgeData.key;\n\n      edgeData = edgeData.next;\n    } while (edgeData !== undefined);\n  }\n\n  return;\n}\n\n/**\n * Function returning an iterator over edges from the given object.\n *\n * @param  {object}   object - Target object.\n * @return {Iterator}\n */\nfunction createIterator(object, avoid) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let edgeData;\n  let i = 0;\n\n  return new Iterator(function next() {\n    do {\n      if (!edgeData) {\n        if (i >= l) return {done: true};\n\n        const k = keys[i++];\n\n        if (k === avoid) {\n          edgeData = undefined;\n          continue;\n        }\n\n        edgeData = object[k];\n      } else {\n        edgeData = edgeData.next;\n      }\n    } while (!edgeData);\n\n    return {\n      done: false,\n      value: {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      }\n    };\n  });\n}\n\n/**\n * Function iterating over the egdes from the object at given key to match\n * one of them.\n *\n * @param {object}   object   - Target object.\n * @param {mixed}    k        - Neighbor key.\n * @param {function} callback - Callback to use.\n */\nfunction forEachForKeySimple(breakable, object, k, callback) {\n  const edgeData = object[k];\n\n  if (!edgeData) return;\n\n  const sourceData = edgeData.source;\n  const targetData = edgeData.target;\n\n  if (\n    callback(\n      edgeData.key,\n      edgeData.attributes,\n      sourceData.key,\n      targetData.key,\n      sourceData.attributes,\n      targetData.attributes,\n      edgeData.undirected\n    ) &&\n    breakable\n  )\n    return edgeData.key;\n}\n\nfunction forEachForKeyMulti(breakable, object, k, callback) {\n  let edgeData = object[k];\n\n  if (!edgeData) return;\n\n  let shouldBreak = false;\n\n  do {\n    shouldBreak = callback(\n      edgeData.key,\n      edgeData.attributes,\n      edgeData.source.key,\n      edgeData.target.key,\n      edgeData.source.attributes,\n      edgeData.target.attributes,\n      edgeData.undirected\n    );\n\n    if (breakable && shouldBreak) return edgeData.key;\n\n    edgeData = edgeData.next;\n  } while (edgeData !== undefined);\n\n  return;\n}\n\n/**\n * Function returning an iterator over the egdes from the object at given key.\n *\n * @param  {object}   object   - Target object.\n * @param  {mixed}    k        - Neighbor key.\n * @return {Iterator}\n */\nfunction createIteratorForKey(object, k) {\n  let edgeData = object[k];\n\n  if (edgeData.next !== undefined) {\n    return new Iterator(function () {\n      if (!edgeData) return {done: true};\n\n      const value = {\n        edge: edgeData.key,\n        attributes: edgeData.attributes,\n        source: edgeData.source.key,\n        target: edgeData.target.key,\n        sourceAttributes: edgeData.source.attributes,\n        targetAttributes: edgeData.target.attributes,\n        undirected: edgeData.undirected\n      };\n\n      edgeData = edgeData.next;\n\n      return {\n        done: false,\n        value\n      };\n    });\n  }\n\n  return Iterator.of({\n    edge: edgeData.key,\n    attributes: edgeData.attributes,\n    source: edgeData.source.key,\n    target: edgeData.target.key,\n    sourceAttributes: edgeData.source.attributes,\n    targetAttributes: edgeData.target.attributes,\n    undirected: edgeData.undirected\n  });\n}\n\n/**\n * Function creating an array of edges for the given type.\n *\n * @param  {Graph}   graph - Target Graph instance.\n * @param  {string}  type  - Type of edges to retrieve.\n * @return {array}         - Array of edges.\n */\nfunction createEdgeArray(graph, type) {\n  if (graph.size === 0) return [];\n\n  if (type === 'mixed' || type === graph.type) {\n    if (typeof Array.from === 'function')\n      return Array.from(graph._edges.keys());\n\n    return take(graph._edges.keys(), graph._edges.size);\n  }\n\n  const size =\n    type === 'undirected' ? graph.undirectedSize : graph.directedSize;\n\n  const list = new Array(size),\n    mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  let i = 0;\n  let step, data;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (data.undirected === mask) list[i++] = data.key;\n  }\n\n  return list;\n}\n\n/**\n * Function iterating over a graph's edges using a callback to match one of\n * them.\n *\n * @param  {Graph}    graph    - Target Graph instance.\n * @param  {string}   type     - Type of edges to retrieve.\n * @param  {function} callback - Function to call.\n */\nfunction forEachEdge(breakable, graph, type, callback) {\n  if (graph.size === 0) return;\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  let step, data;\n  let shouldBreak = false;\n  const iterator = graph._edges.values();\n\n  while (((step = iterator.next()), step.done !== true)) {\n    data = step.value;\n\n    if (shouldFilter && data.undirected !== mask) continue;\n\n    const {key, attributes, source, target} = data;\n\n    shouldBreak = callback(\n      key,\n      attributes,\n      source.key,\n      target.key,\n      source.attributes,\n      target.attributes,\n      data.undirected\n    );\n\n    if (breakable && shouldBreak) return key;\n  }\n\n  return;\n}\n\n/**\n * Function creating an iterator of edges for the given type.\n *\n * @param  {Graph}    graph - Target Graph instance.\n * @param  {string}   type  - Type of edges to retrieve.\n * @return {Iterator}\n */\nfunction createEdgeIterator(graph, type) {\n  if (graph.size === 0) return Iterator.empty();\n\n  const shouldFilter = type !== 'mixed' && type !== graph.type;\n  const mask = type === 'undirected';\n\n  const iterator = graph._edges.values();\n\n  return new Iterator(function next() {\n    let step, data;\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      step = iterator.next();\n\n      if (step.done) return step;\n\n      data = step.value;\n\n      if (shouldFilter && data.undirected !== mask) continue;\n\n      break;\n    }\n\n    const value = {\n      edge: data.key,\n      attributes: data.attributes,\n      source: data.source.key,\n      target: data.target.key,\n      sourceAttributes: data.source.attributes,\n      targetAttributes: data.target.attributes,\n      undirected: data.undirected\n    };\n\n    return {value, done: false};\n  });\n}\n\n/**\n * Function iterating over a node's edges using a callback to match one of them.\n *\n * @param  {boolean}  multi     - Whether the graph is multi or not.\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Function to call.\n */\nfunction forEachEdgeForNode(\n  breakable,\n  multi,\n  type,\n  direction,\n  nodeData,\n  callback\n) {\n  const fn = multi ? forEachMulti : forEachSimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = fn(breakable, nodeData.in, callback);\n\n      if (breakable && found) return found;\n    }\n    if (direction !== 'in') {\n      found = fn(\n        breakable,\n        nodeData.out,\n        callback,\n        !direction ? nodeData.key : undefined\n      );\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    found = fn(breakable, nodeData.undirected, callback);\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given type & the given node.\n *\n * @param  {boolean} multi     - Whether the graph is multi or not.\n * @param  {string}  type      - Type of edges to retrieve.\n * @param  {string}  direction - In or out?\n * @param  {any}     nodeData  - Target node's data.\n * @return {array}             - Array of edges.\n */\nfunction createEdgeArrayForNode(multi, type, direction, nodeData) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForNode(false, multi, type, direction, nodeData, function (key) {\n    edges.push(key);\n  });\n\n  return edges;\n}\n\n/**\n * Function iterating over a node's edges using a callback.\n *\n * @param  {string}   type      - Type of edges to retrieve.\n * @param  {string}   direction - In or out?\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createEdgeIteratorForNode(type, direction, nodeData) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out' && typeof nodeData.in !== 'undefined')\n      iterator = chain(iterator, createIterator(nodeData.in));\n    if (direction !== 'in' && typeof nodeData.out !== 'undefined')\n      iterator = chain(\n        iterator,\n        createIterator(nodeData.out, !direction ? nodeData.key : undefined)\n      );\n  }\n\n  if (type !== 'directed' && typeof nodeData.undirected !== 'undefined') {\n    iterator = chain(iterator, createIterator(nodeData.undirected));\n  }\n\n  return iterator;\n}\n\n/**\n * Function iterating over edges for the given path using a callback to match\n * one of them.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction forEachEdgeForPath(\n  breakable,\n  type,\n  multi,\n  direction,\n  sourceData,\n  target,\n  callback\n) {\n  const fn = multi ? forEachForKeyMulti : forEachForKeySimple;\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (typeof sourceData.in !== 'undefined' && direction !== 'out') {\n      found = fn(breakable, sourceData.in, target, callback);\n\n      if (breakable && found) return found;\n    }\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      (direction || sourceData.key !== target)\n    ) {\n      found = fn(breakable, sourceData.out, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  if (type !== 'directed') {\n    if (typeof sourceData.undirected !== 'undefined') {\n      found = fn(breakable, sourceData.undirected, target, callback);\n\n      if (breakable && found) return found;\n    }\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {boolean}  multi      - Whether the graph is multi.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {any}      target     - Target node.\n * @return {array}               - Array of edges.\n */\nfunction createEdgeArrayForPath(type, multi, direction, sourceData, target) {\n  const edges = []; // TODO: possibility to know size beforehand or factorize with map\n\n  forEachEdgeForPath(\n    false,\n    type,\n    multi,\n    direction,\n    sourceData,\n    target,\n    function (key) {\n      edges.push(key);\n    }\n  );\n\n  return edges;\n}\n\n/**\n * Function returning an iterator over edges for the given path.\n *\n * @param  {string}   type       - Type of edges to retrieve.\n * @param  {string}   direction  - In or out?\n * @param  {NodeData} sourceData - Source node's data.\n * @param  {string}   target     - Target node.\n * @param  {function} callback   - Function to call.\n */\nfunction createEdgeIteratorForPath(type, direction, sourceData, target) {\n  let iterator = Iterator.empty();\n\n  if (type !== 'undirected') {\n    if (\n      typeof sourceData.in !== 'undefined' &&\n      direction !== 'out' &&\n      target in sourceData.in\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.in, target));\n\n    if (\n      typeof sourceData.out !== 'undefined' &&\n      direction !== 'in' &&\n      target in sourceData.out &&\n      (direction || sourceData.key !== target)\n    )\n      iterator = chain(iterator, createIteratorForKey(sourceData.out, target));\n  }\n\n  if (type !== 'directed') {\n    if (\n      typeof sourceData.undirected !== 'undefined' &&\n      target in sourceData.undirected\n    )\n      iterator = chain(\n        iterator,\n        createIteratorForKey(sourceData.undirected, target)\n      );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching an edge array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain edges.\n   *\n   * Arity 0: Return all the relevant edges.\n   *\n   * Arity 1: Return all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Return the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    if (!arguments.length) return createEdgeArray(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeArrayForNode(\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData\n      );\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeArrayForPath(\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching a edge callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(false, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        false,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${forEachName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        false,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${forEachName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function mapping the graph's relevant edges by applying the given\n   * callback.\n   *\n   * Arity 1: Map all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Map all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Map the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    let result;\n\n    // We know the result length beforehand\n    if (args.length === 0) {\n      let length = 0;\n\n      if (type !== 'directed') length += this.undirectedSize;\n      if (type !== 'undirected') length += this.directedSize;\n\n      result = new Array(length);\n\n      let i = 0;\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result[i++] = callback(e, ea, s, t, sa, ta, u);\n      });\n    }\n\n    // We don't know the result length beforehand\n    // TODO: we can in some instances of simple graphs, knowing degree\n    else {\n      result = [];\n\n      args.push((e, ea, s, t, sa, ta, u) => {\n        result.push(callback(e, ea, s, t, sa, ta, u));\n      });\n    }\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function filtering the graph's relevant edges using the provided predicate\n   * function.\n   *\n   * Arity 1: Filter all the relevant edges.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 2: Filter all of a node's relevant edges.\n   * @param  {any}      node      - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * Arity 3: Filter the relevant edges across the given path.\n   * @param  {any}      source    - Source node.\n   * @param  {any}      target    - Target node.\n   * @param  {function} predicate - Predicate to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    const result = [];\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      if (callback(e, ea, s, t, sa, ta, u)) result.push(e);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return result;\n  };\n\n  /**\n   * Function reducing the graph's relevant edges using the provided accumulator\n   * function.\n   *\n   * Arity 1: Reduce all the relevant edges.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 2: Reduce all of a node's relevant edges.\n   * @param  {any}      node         - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * Arity 3: Reduce the relevant edges across the given path.\n   * @param  {any}      source       - Source node.\n   * @param  {any}      target       - Target node.\n   * @param  {function} accumulator  - Accumulator to use.\n   * @param  {any}      initialValue - Initial value.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function () {\n    let args = Array.prototype.slice.call(arguments);\n\n    if (args.length < 2 || args.length > 4) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: invalid number of arguments (expecting 2, 3 or 4 and got ${args.length}).`\n      );\n    }\n\n    if (\n      typeof args[args.length - 1] === 'function' &&\n      typeof args[args.length - 2] !== 'function'\n    ) {\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n    }\n\n    let callback;\n    let initialValue;\n\n    if (args.length === 2) {\n      callback = args[0];\n      initialValue = args[1];\n      args = [];\n    } else if (args.length === 3) {\n      callback = args[1];\n      initialValue = args[2];\n      args = [args[0]];\n    } else if (args.length === 4) {\n      callback = args[2];\n      initialValue = args[3];\n      args = [args[0], args[1]];\n    }\n\n    let accumulator = initialValue;\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      accumulator = callback(accumulator, e, ea, s, t, sa, ta, u);\n    });\n\n    this[forEachName].apply(this, args);\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable edge callback iterator method to the Graph\n * prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindEdge(Class, description) {\n  const {name, type, direction} = description;\n\n  const findEdgeName = 'find' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over the graph's relevant edges in order to match\n   * one of them using the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findEdgeName] = function (source, target, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return false;\n\n    if (arguments.length === 1) {\n      callback = source;\n      return forEachEdge(true, this, type, callback);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      callback = target;\n\n      const nodeData = this._nodes.get(source);\n\n      if (typeof nodeData === 'undefined')\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      // TODO: maybe attach the sub method to the instance dynamically?\n      return forEachEdgeForNode(\n        true,\n        this.multi,\n        type === 'mixed' ? this.type : type,\n        direction,\n        nodeData,\n        callback\n      );\n    }\n\n    if (arguments.length === 3) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${findEdgeName}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return forEachEdgeForPath(\n        true,\n        type,\n        this.multi,\n        direction,\n        sourceData,\n        target,\n        callback\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${findEdgeName}: too many arguments (expecting 1, 2 or 3 and got ${arguments.length}).`\n    );\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether any one of them matches the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[someName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over the graph's relevant edges in order to assert\n   * whether all of them matche the provided predicate function.\n   *\n   * Arity 1: Iterate over all the relevant edges.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 2: Iterate over all of a node's relevant edges.\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * Arity 3: Iterate over the relevant edges across the given path.\n   * @param  {any}      source   - Source node.\n   * @param  {any}      target   - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + name[0].toUpperCase() + name.slice(1, -1);\n\n  Class.prototype[everyName] = function () {\n    const args = Array.prototype.slice.call(arguments);\n    const callback = args.pop();\n\n    args.push((e, ea, s, t, sa, ta, u) => {\n      return !callback(e, ea, s, t, sa, ta, u);\n    });\n\n    const found = this[findEdgeName].apply(this, args);\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching an edge iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachEdgeIteratorCreator(Class, description) {\n  const {name: originalName, type, direction} = description;\n\n  const name = originalName.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over the graph's edges.\n   *\n   * Arity 0: Iterate over all the relevant edges.\n   *\n   * Arity 1: Iterate over all of a node's relevant edges.\n   * @param  {any}   node   - Target node.\n   *\n   * Arity 2: Iterate over the relevant edges across the given path.\n   * @param  {any}   source - Source node.\n   * @param  {any}   target - Target node.\n   *\n   * @return {array|number} - The edges or the number of edges.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[name] = function (source, target) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    if (!arguments.length) return createEdgeIterator(this, type);\n\n    if (arguments.length === 1) {\n      source = '' + source;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}: could not find the \"${source}\" node in the graph.`\n        );\n\n      // Iterating over a node's edges\n      return createEdgeIteratorForNode(type, direction, sourceData);\n    }\n\n    if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      const sourceData = this._nodes.get(source);\n\n      if (!sourceData)\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${source}\" source node in the graph.`\n        );\n\n      if (!this._nodes.has(target))\n        throw new NotFoundGraphError(\n          `Graph.${name}:  could not find the \"${target}\" target node in the graph.`\n        );\n\n      // Iterating over the edges between source & target\n      return createEdgeIteratorForPath(type, direction, sourceData, target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: too many arguments (expecting 0, 1 or 2 and got ${arguments.length}).`\n    );\n  };\n}\n\n/**\n * Function attaching every edge iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachEdgeIterationMethods(Graph) {\n  EDGES_ITERATION.forEach(description => {\n    attachEdgeArrayCreator(Graph, description);\n    attachForEachEdge(Graph, description);\n    attachFindEdge(Graph, description);\n    attachEdgeIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Neighbor Iteration\n * ==============================\n *\n * Attaching some methods to the Graph class to be able to iterate over\n * neighbors.\n */\nimport Iterator from 'obliterator/iterator';\nimport chain from 'obliterator/chain';\n\nimport {NotFoundGraphError, InvalidArgumentsGraphError} from '../errors';\n\n/**\n * Definitions.\n */\nconst NEIGHBORS_ITERATION = [\n  {\n    name: 'neighbors',\n    type: 'mixed'\n  },\n  {\n    name: 'inNeighbors',\n    type: 'directed',\n    direction: 'in'\n  },\n  {\n    name: 'outNeighbors',\n    type: 'directed',\n    direction: 'out'\n  },\n  {\n    name: 'inboundNeighbors',\n    type: 'mixed',\n    direction: 'in'\n  },\n  {\n    name: 'outboundNeighbors',\n    type: 'mixed',\n    direction: 'out'\n  },\n  {\n    name: 'directedNeighbors',\n    type: 'directed'\n  },\n  {\n    name: 'undirectedNeighbors',\n    type: 'undirected'\n  }\n];\n\n/**\n * Helpers.\n */\nfunction CompositeSetWrapper() {\n  this.A = null;\n  this.B = null;\n}\n\nCompositeSetWrapper.prototype.wrap = function (set) {\n  if (this.A === null) this.A = set;\n  else if (this.B === null) this.B = set;\n};\n\nCompositeSetWrapper.prototype.has = function (key) {\n  if (this.A !== null && key in this.A) return true;\n  if (this.B !== null && key in this.B) return true;\n  return false;\n};\n\n/**\n * Function iterating over the given node's relevant neighbors to match\n * one of them using a predicated function.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @param  {function} callback  - Callback to use.\n */\nfunction forEachInObjectOnce(breakable, visited, nodeData, object, callback) {\n  for (const k in object) {\n    const edgeData = object[k];\n\n    const sourceData = edgeData.source;\n    const targetData = edgeData.target;\n\n    const neighborData = sourceData === nodeData ? targetData : sourceData;\n\n    if (visited && visited.has(neighborData.key)) continue;\n\n    const shouldBreak = callback(neighborData.key, neighborData.attributes);\n\n    if (breakable && shouldBreak) return neighborData.key;\n  }\n\n  return;\n}\n\nfunction forEachNeighbor(breakable, type, direction, nodeData, callback) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.undirected,\n        callback\n      );\n\n    if (typeof direction === 'string')\n      return forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData[direction],\n        callback\n      );\n  }\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  let found;\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      found = forEachInObjectOnce(\n        breakable,\n        null,\n        nodeData,\n        nodeData.in,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.in);\n    }\n    if (direction !== 'in') {\n      found = forEachInObjectOnce(\n        breakable,\n        visited,\n        nodeData,\n        nodeData.out,\n        callback\n      );\n\n      if (breakable && found) return found;\n\n      visited.wrap(nodeData.out);\n    }\n  }\n\n  if (type !== 'directed') {\n    found = forEachInObjectOnce(\n      breakable,\n      visited,\n      nodeData,\n      nodeData.undirected,\n      callback\n    );\n\n    if (breakable && found) return found;\n  }\n\n  return;\n}\n\n/**\n * Function creating an array of relevant neighbors for the given node.\n *\n * @param  {string}       type      - Type of neighbors.\n * @param  {string}       direction - Direction.\n * @param  {any}          nodeData  - Target node's data.\n * @return {Array}                  - The list of neighbors.\n */\nfunction createNeighborArrayForNode(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected') return Object.keys(nodeData.undirected);\n\n    if (typeof direction === 'string') return Object.keys(nodeData[direction]);\n  }\n\n  const neighbors = [];\n\n  forEachNeighbor(false, type, direction, nodeData, function (key) {\n    neighbors.push(key);\n  });\n\n  return neighbors;\n}\n\n/**\n * Function returning an iterator over the given node's relevant neighbors.\n *\n * @param  {string}   type      - Type of neighbors.\n * @param  {string}   direction - Direction.\n * @param  {any}      nodeData  - Target node's data.\n * @return {Iterator}\n */\nfunction createDedupedObjectIterator(visited, nodeData, object) {\n  const keys = Object.keys(object);\n  const l = keys.length;\n\n  let i = 0;\n\n  return new Iterator(function next() {\n    let neighborData = null;\n\n    do {\n      if (i >= l) {\n        if (visited) visited.wrap(object);\n        return {done: true};\n      }\n\n      const edgeData = object[keys[i++]];\n\n      const sourceData = edgeData.source;\n      const targetData = edgeData.target;\n\n      neighborData = sourceData === nodeData ? targetData : sourceData;\n\n      if (visited && visited.has(neighborData.key)) {\n        neighborData = null;\n        continue;\n      }\n    } while (neighborData === null);\n\n    return {\n      done: false,\n      value: {neighbor: neighborData.key, attributes: neighborData.attributes}\n    };\n  });\n}\n\nfunction createNeighborIterator(type, direction, nodeData) {\n  // If we want only undirected or in or out, we can roll some optimizations\n  if (type !== 'mixed') {\n    if (type === 'undirected')\n      return createDedupedObjectIterator(null, nodeData, nodeData.undirected);\n\n    if (typeof direction === 'string')\n      return createDedupedObjectIterator(null, nodeData, nodeData[direction]);\n  }\n\n  let iterator = Iterator.empty();\n\n  // Else we need to keep a set of neighbors not to return duplicates\n  // We cheat by querying the other adjacencies\n  const visited = new CompositeSetWrapper();\n\n  if (type !== 'undirected') {\n    if (direction !== 'out') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.in)\n      );\n    }\n    if (direction !== 'in') {\n      iterator = chain(\n        iterator,\n        createDedupedObjectIterator(visited, nodeData, nodeData.out)\n      );\n    }\n  }\n\n  if (type !== 'directed') {\n    iterator = chain(\n      iterator,\n      createDedupedObjectIterator(visited, nodeData, nodeData.undirected)\n    );\n  }\n\n  return iterator;\n}\n\n/**\n * Function attaching a neighbors array creator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborArrayCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  /**\n   * Function returning an array of certain neighbors.\n   *\n   * @param  {any}   node   - Target node.\n   * @return {array} - The neighbors of neighbors.\n   *\n   * @throws {Error} - Will throw if node is not found in the graph.\n   */\n  Class.prototype[name] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return [];\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${name}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborArrayForNode(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachForEachNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const forEachName = 'forEach' + name[0].toUpperCase() + name.slice(1, -1);\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[forEachName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${forEachName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    forEachNeighbor(\n      false,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function mapping the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const mapName = 'map' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[mapName] = function (node, callback) {\n    // TODO: optimize when size is known beforehand\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      result.push(callback(n, a));\n    });\n\n    return result;\n  };\n\n  /**\n   * Function filtering the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const filterName = 'filter' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[filterName] = function (node, callback) {\n    const result = [];\n\n    this[forEachName](node, (n, a) => {\n      if (callback(n, a)) result.push(n);\n    });\n\n    return result;\n  };\n\n  /**\n   * Function reducing the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const reduceName = 'reduce' + name[0].toUpperCase() + name.slice(1);\n\n  Class.prototype[reduceName] = function (node, callback, initialValue) {\n    if (arguments.length < 3)\n      throw new InvalidArgumentsGraphError(\n        `Graph.${reduceName}: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.`\n      );\n\n    let accumulator = initialValue;\n\n    this[forEachName](node, (n, a) => {\n      accumulator = callback(accumulator, n, a);\n    });\n\n    return accumulator;\n  };\n}\n\n/**\n * Function attaching a breakable neighbors callback iterator method to the\n * Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachFindNeighbor(Class, description) {\n  const {name, type, direction} = description;\n\n  const capitalizedSingular = name[0].toUpperCase() + name.slice(1, -1);\n\n  const findName = 'find' + capitalizedSingular;\n\n  /**\n   * Function iterating over all the relevant neighbors using a callback.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {undefined}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[findName] = function (node, callback) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type) return;\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${findName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return forEachNeighbor(\n      true,\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData,\n      callback\n    );\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if any of them\n   * matches the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const someName = 'some' + capitalizedSingular;\n\n  Class.prototype[someName] = function (node, callback) {\n    const found = this[findName](node, callback);\n\n    if (found) return true;\n\n    return false;\n  };\n\n  /**\n   * Function iterating over all the relevant neighbors to find if all of them\n   * matche the given predicate.\n   *\n   * @param  {any}      node     - Target node.\n   * @param  {function} callback - Callback to use.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  const everyName = 'every' + capitalizedSingular;\n\n  Class.prototype[everyName] = function (node, callback) {\n    const found = this[findName](node, (n, a) => {\n      return !callback(n, a);\n    });\n\n    if (found) return false;\n\n    return true;\n  };\n}\n\n/**\n * Function attaching a neighbors callback iterator method to the Graph prototype.\n *\n * @param {function} Class       - Target class.\n * @param {object}   description - Method description.\n */\nfunction attachNeighborIteratorCreator(Class, description) {\n  const {name, type, direction} = description;\n\n  const iteratorName = name.slice(0, -1) + 'Entries';\n\n  /**\n   * Function returning an iterator over all the relevant neighbors.\n   *\n   * @param  {any}      node     - Target node.\n   * @return {Iterator}\n   *\n   * @throws {Error} - Will throw if there are too many arguments.\n   */\n  Class.prototype[iteratorName] = function (node) {\n    // Early termination\n    if (type !== 'mixed' && this.type !== 'mixed' && type !== this.type)\n      return Iterator.empty();\n\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (typeof nodeData === 'undefined')\n      throw new NotFoundGraphError(\n        `Graph.${iteratorName}: could not find the \"${node}\" node in the graph.`\n      );\n\n    // Here, we want to iterate over a node's relevant neighbors\n    return createNeighborIterator(\n      type === 'mixed' ? this.type : type,\n      direction,\n      nodeData\n    );\n  };\n}\n\n/**\n * Function attaching every neighbor iteration method to the Graph class.\n *\n * @param {function} Graph - Graph class.\n */\nexport default function attachNeighborIterationMethods(Graph) {\n  NEIGHBORS_ITERATION.forEach(description => {\n    attachNeighborArrayCreator(Graph, description);\n    attachForEachNeighbor(Graph, description);\n    attachFindNeighbor(Graph, description);\n    attachNeighborIteratorCreator(Graph, description);\n  });\n}\n","/**\n * Graphology Adjacency Iteration\n * ===============================\n *\n * Attaching some methods to the Graph class to be able to iterate over a\n * graph's adjacency.\n */\n\n/**\n * Function iterating over a simple graph's adjacency using a callback.\n *\n * @param {boolean}  breakable         - Can we break?\n * @param {boolean}  assymetric        - Whether to emit undirected edges only once.\n * @param {boolean}  disconnectedNodes - Whether to emit disconnected nodes.\n * @param {Graph}    graph             - Target Graph instance.\n * @param {callback} function          - Iteration callback.\n */\nexport function forEachAdjacency(\n  breakable,\n  assymetric,\n  disconnectedNodes,\n  graph,\n  callback\n) {\n  const iterator = graph._nodes.values();\n\n  const type = graph.type;\n\n  let step, sourceData, neighbor, adj, edgeData, targetData, shouldBreak;\n\n  while (((step = iterator.next()), step.done !== true)) {\n    let hasEdges = false;\n\n    sourceData = step.value;\n\n    if (type !== 'undirected') {\n      adj = sourceData.out;\n\n      for (neighbor in adj) {\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (type !== 'directed') {\n      adj = sourceData.undirected;\n\n      for (neighbor in adj) {\n        if (assymetric && sourceData.key > neighbor) continue;\n\n        edgeData = adj[neighbor];\n\n        do {\n          targetData = edgeData.target;\n\n          if (targetData.key !== neighbor) targetData = edgeData.source;\n\n          hasEdges = true;\n          shouldBreak = callback(\n            sourceData.key,\n            targetData.key,\n            sourceData.attributes,\n            targetData.attributes,\n            edgeData.key,\n            edgeData.attributes,\n            edgeData.undirected\n          );\n\n          if (breakable && shouldBreak) return edgeData;\n\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (disconnectedNodes && !hasEdges) {\n      shouldBreak = callback(\n        sourceData.key,\n        null,\n        sourceData.attributes,\n        null,\n        null,\n        null,\n        null\n      );\n\n      if (breakable && shouldBreak) return null;\n    }\n  }\n\n  return;\n}\n","/**\n * Graphology Serialization Utilities\n * ===================================\n *\n * Collection of functions used by the graph serialization schemes.\n */\nimport {InvalidArgumentsGraphError} from './errors';\nimport {assign, isPlainObject, isEmpty} from './utils';\n\n/**\n * Formats internal node data into a serialized node.\n *\n * @param  {any}    key  - The node's key.\n * @param  {object} data - Internal node's data.\n * @return {array}       - The serialized node.\n */\nexport function serializeNode(key, data) {\n  const serialized = {key};\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  return serialized;\n}\n\n/**\n * Formats internal edge data into a serialized edge.\n *\n * @param  {string} type - The graph's type.\n * @param  {any}    key  - The edge's key.\n * @param  {object} data - Internal edge's data.\n * @return {array}       - The serialized edge.\n */\nexport function serializeEdge(type, key, data) {\n  const serialized = {\n    key,\n    source: data.source.key,\n    target: data.target.key\n  };\n\n  if (!isEmpty(data.attributes))\n    serialized.attributes = assign({}, data.attributes);\n\n  if (type === 'mixed' && data.undirected) serialized.undirected = true;\n\n  return serialized;\n}\n\n/**\n * Checks whether the given value is a serialized node.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedNode(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.'\n    );\n\n  if (!('key' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized node is missing its key.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n}\n\n/**\n * Checks whether the given value is a serialized edge.\n *\n * @param  {mixed} value - Target value.\n * @return {string|null}\n */\nexport function validateSerializedEdge(value) {\n  if (!isPlainObject(value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.'\n    );\n\n  if (!('source' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its source.'\n    );\n\n  if (!('target' in value))\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: serialized edge is missing its target.'\n    );\n\n  if (\n    'attributes' in value &&\n    (!isPlainObject(value.attributes) || value.attributes === null)\n  )\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.'\n    );\n\n  if ('undirected' in value && typeof value.undirected !== 'boolean')\n    throw new InvalidArgumentsGraphError(\n      'Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.'\n    );\n}\n","/* eslint no-nested-ternary: 0 */\n/**\n * Graphology Reference Implementation\n * ====================================\n *\n * Reference implementation of the graphology specs.\n */\nimport {EventEmitter} from 'events';\nimport Iterator from 'obliterator/iterator';\nimport take from 'obliterator/take';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\nimport {\n  MixedNodeData,\n  DirectedNodeData,\n  UndirectedNodeData,\n  EdgeData\n} from './data';\n\nimport attachNodeAttributesMethods from './attributes/nodes';\nimport attachEdgeAttributesMethods from './attributes/edges';\nimport attachEdgeIterationMethods from './iteration/edges';\nimport attachNeighborIterationMethods from './iteration/neighbors';\nimport {forEachAdjacency} from './iteration/adjacency';\n\nimport {\n  serializeNode,\n  serializeEdge,\n  validateSerializedNode,\n  validateSerializedEdge\n} from './serialization';\n\nimport {\n  assign,\n  getMatchingEdge,\n  isPlainObject,\n  privateProperty,\n  readOnlyProperty,\n  incrementalIdStartingFromRandomByte,\n  validateHints\n} from './utils';\n\n/**\n * Constants.\n */\nconst INSTANCE_ID = incrementalIdStartingFromRandomByte();\n\n/**\n * Enums.\n */\nconst TYPES = new Set(['directed', 'undirected', 'mixed']);\n\nconst EMITTER_PROPS = new Set([\n  'domain',\n  '_events',\n  '_eventsCount',\n  '_maxListeners'\n]);\n\nconst EDGE_ADD_METHODS = [\n  {\n    name: verb => `${verb}Edge`,\n    generateKey: true\n  },\n  {\n    name: verb => `${verb}DirectedEdge`,\n    generateKey: true,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdge`,\n    generateKey: true,\n    type: 'undirected'\n  },\n  {\n    name: verb => `${verb}EdgeWithKey`\n  },\n  {\n    name: verb => `${verb}DirectedEdgeWithKey`,\n    type: 'directed'\n  },\n  {\n    name: verb => `${verb}UndirectedEdgeWithKey`,\n    type: 'undirected'\n  }\n];\n\n/**\n * Default options.\n */\nconst DEFAULTS = {\n  allowSelfLoops: true,\n  multi: false,\n  type: 'mixed'\n};\n\n/**\n * Abstract functions used by the Graph class for various methods.\n */\n\n/**\n * Internal method used to add a node to the given graph\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {any}     node            - The node's key.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {NodeData}                - Created node data.\n */\nfunction addNode(graph, node, attributes) {\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.addNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // String coercion\n  node = '' + node;\n  attributes = attributes || {};\n\n  if (graph._nodes.has(node))\n    throw new UsageGraphError(\n      `Graph.addNode: the \"${node}\" node already exist in the graph.`\n    );\n\n  const data = new graph.NodeDataClass(node, attributes);\n\n  // Adding the node to internal register\n  graph._nodes.set(node, data);\n\n  // Emitting\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Same as the above but without sanity checks because we call this in contexts\n * where necessary checks were already done.\n */\nfunction unsafeAddNode(graph, node, attributes) {\n  const data = new graph.NodeDataClass(node, attributes);\n\n  graph._nodes.set(node, data);\n\n  graph.emit('nodeAdded', {\n    key: node,\n    attributes\n  });\n\n  return data;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction addEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes && !isPlainObject(attributes))\n    throw new InvalidArgumentsGraphError(\n      `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n    );\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n  attributes = attributes || {};\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  const sourceData = graph._nodes.get(source),\n    targetData = graph._nodes.get(target);\n\n  if (!sourceData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: source node \"${source}\" not found.`\n    );\n\n  if (!targetData)\n    throw new NotFoundGraphError(\n      `Graph.${name}: target node \"${target}\" not found.`\n    );\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  // Here, we might have a source / target collision\n  if (\n    !graph.multi &&\n    (undirected\n      ? typeof sourceData.undirected[target] !== 'undefined'\n      : typeof sourceData.out[target] !== 'undefined')\n  ) {\n    throw new UsageGraphError(\n      `Graph.${name}: an edge linking \"${source}\" to \"${target}\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.`\n    );\n  }\n\n  // Storing some data\n  const edgeData = new EdgeData(\n    undirected,\n    edge,\n    sourceData,\n    targetData,\n    attributes\n  );\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return edge;\n}\n\n/**\n * Internal method used to add an arbitrary edge to the given graph.\n *\n * @param  {Graph}   graph           - Target graph.\n * @param  {string}  name            - Name of the child method for errors.\n * @param  {boolean} mustGenerateKey - Should the graph generate an id?\n * @param  {boolean} undirected      - Whether the edge is undirected.\n * @param  {any}     edge            - The edge's key.\n * @param  {any}     source          - The source node.\n * @param  {any}     target          - The target node.\n * @param  {object}  [attributes]    - Optional attributes.\n * @param  {boolean} [asUpdater]       - Are we updating or merging?\n * @return {any}                     - The edge.\n *\n * @throws {Error} - Will throw if the graph is of the wrong type.\n * @throws {Error} - Will throw if the given attributes are not an object.\n * @throws {Error} - Will throw if source or target doesn't exist.\n * @throws {Error} - Will throw if the edge already exist.\n */\nfunction mergeEdge(\n  graph,\n  name,\n  mustGenerateKey,\n  undirected,\n  edge,\n  source,\n  target,\n  attributes,\n  asUpdater\n) {\n  // Checking validity of operation\n  if (!undirected && graph.type === 'undirected')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.`\n    );\n\n  if (undirected && graph.type === 'directed')\n    throw new UsageGraphError(\n      `Graph.${name}: you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.`\n    );\n\n  if (attributes) {\n    if (asUpdater) {\n      if (typeof attributes !== 'function')\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid updater function. Expecting a function but got \"${attributes}\"`\n        );\n    } else {\n      if (!isPlainObject(attributes))\n        throw new InvalidArgumentsGraphError(\n          `Graph.${name}: invalid attributes. Expecting an object but got \"${attributes}\"`\n        );\n    }\n  }\n\n  // Coercion of source & target:\n  source = '' + source;\n  target = '' + target;\n\n  let updater;\n\n  if (asUpdater) {\n    updater = attributes;\n    attributes = undefined;\n  }\n\n  if (!graph.allowSelfLoops && source === target)\n    throw new UsageGraphError(\n      `Graph.${name}: source & target are the same (\"${source}\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.`\n    );\n\n  let sourceData = graph._nodes.get(source);\n  let targetData = graph._nodes.get(target);\n  let edgeData;\n\n  // Do we need to handle duplicate?\n  let alreadyExistingEdgeData;\n\n  if (!mustGenerateKey) {\n    edgeData = graph._edges.get(edge);\n\n    if (edgeData) {\n      // Here, we need to ensure, if the user gave a key, that source & target\n      // are consistent\n      if (edgeData.source.key !== source || edgeData.target.key !== target) {\n        // If source or target inconsistent\n        if (\n          !undirected ||\n          edgeData.source.key !== target ||\n          edgeData.target.key !== source\n        ) {\n          // If directed, or source/target aren't flipped\n          throw new UsageGraphError(\n            `Graph.${name}: inconsistency detected when attempting to merge the \"${edge}\" edge with \"${source}\" source & \"${target}\" target vs. (\"${edgeData.source.key}\", \"${edgeData.target.key}\").`\n          );\n        }\n      }\n\n      alreadyExistingEdgeData = edgeData;\n    }\n  }\n\n  // Here, we might have a source / target collision\n  if (!alreadyExistingEdgeData && !graph.multi && sourceData) {\n    alreadyExistingEdgeData = undirected\n      ? sourceData.undirected[target]\n      : sourceData.out[target];\n  }\n\n  // Handling duplicates\n  if (alreadyExistingEdgeData) {\n    const info = [alreadyExistingEdgeData.key, false, false, false];\n\n    // We can skip the attribute merging part if the user did not provide them\n    if (asUpdater ? !updater : !attributes) return info;\n\n    // Updating the attributes\n    if (asUpdater) {\n      const oldAttributes = alreadyExistingEdgeData.attributes;\n      alreadyExistingEdgeData.attributes = updater(oldAttributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'replace',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes\n      });\n    }\n\n    // Merging the attributes\n    else {\n      assign(alreadyExistingEdgeData.attributes, attributes);\n\n      graph.emit('edgeAttributesUpdated', {\n        type: 'merge',\n        key: alreadyExistingEdgeData.key,\n        attributes: alreadyExistingEdgeData.attributes,\n        data: attributes\n      });\n    }\n\n    return info;\n  }\n\n  attributes = attributes || {};\n\n  if (asUpdater && updater) attributes = updater(attributes);\n\n  // Must the graph generate an id for this edge?\n  const eventData = {\n    key: null,\n    undirected,\n    source,\n    target,\n    attributes\n  };\n\n  if (mustGenerateKey) {\n    // NOTE: in this case we can guarantee that the key does not already\n    // exist and is already correctly casted as a string\n    edge = graph._edgeKeyGenerator();\n  } else {\n    // Coercion of edge key\n    edge = '' + edge;\n\n    // Here, we have a key collision\n    if (graph._edges.has(edge))\n      throw new UsageGraphError(\n        `Graph.${name}: the \"${edge}\" edge already exists in the graph.`\n      );\n  }\n\n  let sourceWasAdded = false;\n  let targetWasAdded = false;\n\n  if (!sourceData) {\n    sourceData = unsafeAddNode(graph, source, {});\n    sourceWasAdded = true;\n\n    if (source === target) {\n      targetData = sourceData;\n      targetWasAdded = true;\n    }\n  }\n  if (!targetData) {\n    targetData = unsafeAddNode(graph, target, {});\n    targetWasAdded = true;\n  }\n\n  // Storing some data\n  edgeData = new EdgeData(undirected, edge, sourceData, targetData, attributes);\n\n  // Adding the edge to the internal register\n  graph._edges.set(edge, edgeData);\n\n  // Incrementing node degree counters\n  const isSelfLoop = source === target;\n\n  if (undirected) {\n    sourceData.undirectedDegree++;\n    targetData.undirectedDegree++;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops++;\n      graph._undirectedSelfLoopCount++;\n    }\n  } else {\n    sourceData.outDegree++;\n    targetData.inDegree++;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops++;\n      graph._directedSelfLoopCount++;\n    }\n  }\n\n  // Updating relevant index\n  if (graph.multi) edgeData.attachMulti();\n  else edgeData.attach();\n\n  if (undirected) graph._undirectedSize++;\n  else graph._directedSize++;\n\n  // Emitting\n  eventData.key = edge;\n\n  graph.emit('edgeAdded', eventData);\n\n  return [edge, true, sourceWasAdded, targetWasAdded];\n}\n\n/**\n * Internal method used to drop an edge.\n *\n * @param  {Graph}    graph    - Target graph.\n * @param  {EdgeData} edgeData - Data of the edge to drop.\n */\nfunction dropEdgeFromData(graph, edgeData) {\n  // Dropping the edge from the register\n  graph._edges.delete(edgeData.key);\n\n  // Updating related degrees\n  const {source: sourceData, target: targetData, attributes} = edgeData;\n\n  const undirected = edgeData.undirected;\n\n  const isSelfLoop = sourceData === targetData;\n\n  if (undirected) {\n    sourceData.undirectedDegree--;\n    targetData.undirectedDegree--;\n\n    if (isSelfLoop) {\n      sourceData.undirectedLoops--;\n      graph._undirectedSelfLoopCount--;\n    }\n  } else {\n    sourceData.outDegree--;\n    targetData.inDegree--;\n\n    if (isSelfLoop) {\n      sourceData.directedLoops--;\n      graph._directedSelfLoopCount--;\n    }\n  }\n\n  // Clearing index\n  if (graph.multi) edgeData.detachMulti();\n  else edgeData.detach();\n\n  if (undirected) graph._undirectedSize--;\n  else graph._directedSize--;\n\n  // Emitting\n  graph.emit('edgeDropped', {\n    key: edgeData.key,\n    attributes,\n    source: sourceData.key,\n    target: targetData.key,\n    undirected\n  });\n}\n\n/**\n * Graph class\n *\n * @constructor\n * @param  {object}  [options] - Options:\n * @param  {boolean}   [allowSelfLoops] - Allow self loops?\n * @param  {string}    [type]           - Type of the graph.\n * @param  {boolean}   [map]            - Allow references as keys?\n * @param  {boolean}   [multi]          - Allow parallel edges?\n *\n * @throws {Error} - Will throw if the arguments are not valid.\n */\nexport default class Graph extends EventEmitter {\n  constructor(options) {\n    super();\n\n    //-- Solving options\n    options = assign({}, DEFAULTS, options);\n\n    // Enforcing options validity\n    if (typeof options.multi !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'multi' option. Expecting a boolean but got \"${options.multi}\".`\n      );\n\n    if (!TYPES.has(options.type))\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'type' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"${options.type}\".`\n      );\n\n    if (typeof options.allowSelfLoops !== 'boolean')\n      throw new InvalidArgumentsGraphError(\n        `Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \"${options.allowSelfLoops}\".`\n      );\n\n    //-- Private properties\n\n    // Utilities\n    const NodeDataClass =\n      options.type === 'mixed'\n        ? MixedNodeData\n        : options.type === 'directed'\n        ? DirectedNodeData\n        : UndirectedNodeData;\n\n    privateProperty(this, 'NodeDataClass', NodeDataClass);\n\n    // Internal edge key generator\n\n    // NOTE: this internal generator produce keys that are strings\n    // composed of a weird prefix, an incremental instance id starting from\n    // a random byte and finally an internal instance incremental id.\n    // All this to avoid intra-frame and cross-frame adversarial inputs\n    // that can force a single #.addEdge call to degenerate into a O(n)\n    // available key search loop.\n\n    // It also ensures that automatically generated edge keys are unlikely\n    // to produce collisions with arbitrary keys given by users.\n    const instancePrefix = 'geid_' + INSTANCE_ID() + '_';\n    let edgeId = 0;\n\n    const edgeKeyGenerator = () => {\n      let availableEdgeKey;\n\n      do {\n        availableEdgeKey = instancePrefix + edgeId++;\n      } while (this._edges.has(availableEdgeKey));\n\n      return availableEdgeKey;\n    };\n\n    // Indexes\n    privateProperty(this, '_attributes', {});\n    privateProperty(this, '_nodes', new Map());\n    privateProperty(this, '_edges', new Map());\n    privateProperty(this, '_directedSize', 0);\n    privateProperty(this, '_undirectedSize', 0);\n    privateProperty(this, '_directedSelfLoopCount', 0);\n    privateProperty(this, '_undirectedSelfLoopCount', 0);\n    privateProperty(this, '_edgeKeyGenerator', edgeKeyGenerator);\n\n    // Options\n    privateProperty(this, '_options', options);\n\n    // Emitter properties\n    EMITTER_PROPS.forEach(prop => privateProperty(this, prop, this[prop]));\n\n    //-- Properties readers\n    readOnlyProperty(this, 'order', () => this._nodes.size);\n    readOnlyProperty(this, 'size', () => this._edges.size);\n    readOnlyProperty(this, 'directedSize', () => this._directedSize);\n    readOnlyProperty(this, 'undirectedSize', () => this._undirectedSize);\n    readOnlyProperty(\n      this,\n      'selfLoopCount',\n      () => this._directedSelfLoopCount + this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'directedSelfLoopCount',\n      () => this._directedSelfLoopCount\n    );\n    readOnlyProperty(\n      this,\n      'undirectedSelfLoopCount',\n      () => this._undirectedSelfLoopCount\n    );\n    readOnlyProperty(this, 'multi', this._options.multi);\n    readOnlyProperty(this, 'type', this._options.type);\n    readOnlyProperty(this, 'allowSelfLoops', this._options.allowSelfLoops);\n    readOnlyProperty(this, 'implementation', () => 'graphology');\n  }\n\n  _resetInstanceCounters() {\n    this._directedSize = 0;\n    this._undirectedSize = 0;\n    this._directedSelfLoopCount = 0;\n    this._undirectedSelfLoopCount = 0;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Read\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning whether the given node is found in the graph.\n   *\n   * @param  {any}     node - The node.\n   * @return {boolean}\n   */\n  hasNode(node) {\n    return this._nodes.has('' + node);\n  }\n\n  /**\n   * Method returning whether the given directed edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasDirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'undirected') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && !edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.out.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given undirected edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasUndirectedEdge(source, target) {\n    // Early termination\n    if (this.type === 'directed') return false;\n\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      const edgeData = this._edges.get(edge);\n\n      return !!edgeData && edgeData.undirected;\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return nodeData.undirected.hasOwnProperty(target);\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasDirectedEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning whether the given edge is found in the graph.\n   *\n   * Arity 1:\n   * @param  {any}     edge - The edge's key.\n   *\n   * Arity 2:\n   * @param  {any}     source - The edge's source.\n   * @param  {any}     target - The edge's target.\n   *\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the arguments are invalid.\n   */\n  hasEdge(source, target) {\n    if (arguments.length === 1) {\n      const edge = '' + source;\n\n      return this._edges.has(edge);\n    } else if (arguments.length === 2) {\n      source = '' + source;\n      target = '' + target;\n\n      // If the node source or the target is not in the graph we break\n      const nodeData = this._nodes.get(source);\n\n      if (!nodeData) return false;\n\n      // Is there a directed edge pointing toward target?\n      return (\n        (typeof nodeData.out !== 'undefined' &&\n          nodeData.out.hasOwnProperty(target)) ||\n        (typeof nodeData.undirected !== 'undefined' &&\n          nodeData.undirected.hasOwnProperty(target))\n      );\n    }\n\n    throw new InvalidArgumentsGraphError(\n      `Graph.hasEdge: invalid arity (${arguments.length}, instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.`\n    );\n  }\n\n  /**\n   * Method returning the edge matching source & target in a directed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  directedEdge(source, target) {\n    if (this.type === 'undirected') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.directedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData = (sourceData.out && sourceData.out[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a undirected fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  undirectedEdge(source, target) {\n    if (this.type === 'directed') return;\n\n    source = '' + source;\n    target = '' + target;\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.'\n      );\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.undirectedEdge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.undirected && sourceData.undirected[target]) || undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning the edge matching source & target in a mixed fashion.\n   *\n   * @param  {any} source - The edge's source.\n   * @param  {any} target - The edge's target.\n   *\n   * @return {any|undefined}\n   *\n   * @throws {Error} - Will throw if the graph is multi.\n   * @throws {Error} - Will throw if source or target doesn't exist.\n   */\n  edge(source, target) {\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const sourceData = this._nodes.get(source);\n\n    if (!sourceData)\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${source}\" source node in the graph.`\n      );\n\n    if (!this._nodes.has(target))\n      throw new NotFoundGraphError(\n        `Graph.edge: could not find the \"${target}\" target node in the graph.`\n      );\n\n    const edgeData =\n      (sourceData.out && sourceData.out[target]) ||\n      (sourceData.undirected && sourceData.undirected[target]) ||\n      undefined;\n\n    if (edgeData) return edgeData.key;\n  }\n\n  /**\n   * Method returning whether two nodes are directed neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areDirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areDirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in || neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are out neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.out;\n  }\n\n  /**\n   * Method returning whether two nodes are in neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return false;\n\n    return neighbor in nodeData.in;\n  }\n\n  /**\n   * Method returning whether two nodes are undirected neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areUndirectedNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areUndirectedNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return false;\n\n    return neighbor in nodeData.undirected;\n  }\n\n  /**\n   * Method returning whether two nodes are neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in || neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are inbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areInboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areInboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.in) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether two nodes are outbound neighbors.\n   *\n   * @param  {any}     node     - The node's key.\n   * @param  {any}     neighbor - The neighbor's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  areOutboundNeighbors(node, neighbor) {\n    node = '' + node;\n    neighbor = '' + neighbor;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.areOutboundNeighbors: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type !== 'undirected') {\n      if (neighbor in nodeData.out) return true;\n    }\n\n    if (this.type !== 'directed') {\n      if (neighbor in nodeData.undirected) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning the given node's in degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree;\n  }\n\n  /**\n   * Method returning the given node's out degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree;\n  }\n\n  /**\n   * Method returning the given node's undirected degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree;\n  }\n\n  /**\n   * Method returning the given node's inbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's outbound degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's directed degree.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degree(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degree: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n    }\n\n    return degree;\n  }\n\n  /**\n   * Method returning the given node's in degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's out degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.outDegree - nodeData.directedLoops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  directedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.directedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'undirected') return 0;\n\n    return nodeData.inDegree + nodeData.outDegree - nodeData.directedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's undirected degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's in degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  undirectedDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.undirectedDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    if (this.type === 'directed') return 0;\n\n    return nodeData.undirectedDegree - nodeData.undirectedLoops * 2;\n  }\n\n  /**\n   * Method returning the given node's inbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's inbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  inboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.inboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's outbound degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's outbound degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  outboundDegreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.outboundDegreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.outDegree;\n      loops += nodeData.directedLoops;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given node's directed degree without considering self loops.\n   *\n   * @param  {any}     node - The node's key.\n   * @return {number}       - The node's degree.\n   *\n   * @throws {Error} - Will throw if the node isn't in the graph.\n   */\n  degreeWithoutSelfLoops(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.degreeWithoutSelfLoops: could not find the \"${node}\" node in the graph.`\n      );\n\n    let degree = 0;\n    let loops = 0;\n\n    if (this.type !== 'directed') {\n      degree += nodeData.undirectedDegree;\n      loops += nodeData.undirectedLoops * 2;\n    }\n\n    if (this.type !== 'undirected') {\n      degree += nodeData.inDegree + nodeData.outDegree;\n      loops += nodeData.directedLoops * 2;\n    }\n\n    return degree - loops;\n  }\n\n  /**\n   * Method returning the given edge's source.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's source.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  source(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.source: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key;\n  }\n\n  /**\n   * Method returning the given edge's target.\n   *\n   * @param  {any} edge - The edge's key.\n   * @return {any}      - The edge's target.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  target(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.target: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.target.key;\n  }\n\n  /**\n   * Method returning the given edge's extremities.\n   *\n   * @param  {any}   edge - The edge's key.\n   * @return {array}      - The edge's extremities.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  extremities(edge) {\n    edge = '' + edge;\n\n    const edgeData = this._edges.get(edge);\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.extremities: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return [edgeData.source.key, edgeData.target.key];\n  }\n\n  /**\n   * Given a node & an edge, returns the other extremity of the edge.\n   *\n   * @param  {any}   node - The node's key.\n   * @param  {any}   edge - The edge's key.\n   * @return {any}        - The related node.\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph or if the\n   *                   edge & node are not related.\n   */\n  opposite(node, edge) {\n    node = '' + node;\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.opposite: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    const source = data.source.key;\n    const target = data.target.key;\n\n    if (node === source) return target;\n    if (node === target) return source;\n\n    throw new NotFoundGraphError(\n      `Graph.opposite: the \"${node}\" node is not attached to the \"${edge}\" edge (${source}, ${target}).`\n    );\n  }\n\n  /**\n   * Returns whether the given edge has the given node as extremity.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @param  {any}     node - The node's key.\n   * @return {boolean}      - The related node.\n   *\n   * @throws {Error} - Will throw if either the node or the edge isn't in the graph.\n   */\n  hasExtremity(edge, node) {\n    edge = '' + edge;\n    node = '' + node;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.hasExtremity: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source.key === node || data.target.key === node;\n  }\n\n  /**\n   * Method returning whether the given edge is undirected.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isUndirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isUndirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is directed.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isDirected(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isDirected: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return !data.undirected;\n  }\n\n  /**\n   * Method returning whether the given edge is a self loop.\n   *\n   * @param  {any}     edge - The edge's key.\n   * @return {boolean}\n   *\n   * @throws {Error} - Will throw if the edge isn't in the graph.\n   */\n  isSelfLoop(edge) {\n    edge = '' + edge;\n\n    const data = this._edges.get(edge);\n\n    if (!data)\n      throw new NotFoundGraphError(\n        `Graph.isSelfLoop: could not find the \"${edge}\" edge in the graph.`\n      );\n\n    return data.source === data.target;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Mutation\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to add a node to the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   *\n   * @throws {Error} - Will throw if the given node already exist.\n   * @throws {Error} - Will throw if the given attributes are not an object.\n   */\n  addNode(node, attributes) {\n    const nodeData = addNode(this, node, attributes);\n\n    return nodeData.key;\n  }\n\n  /**\n   * Method used to merge a node into the graph.\n   *\n   * @param  {any}    node         - The node.\n   * @param  {object} [attributes] - Optional attributes.\n   * @return {any}                 - The node.\n   */\n  mergeNode(node, attributes) {\n    if (attributes && !isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        `Graph.mergeNode: invalid attributes. Expecting an object but got \"${attributes}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n    attributes = attributes || {};\n\n    // If the node already exists, we merge the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (attributes) {\n        assign(data.attributes, attributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'merge',\n          key: node,\n          attributes: data.attributes,\n          data: attributes\n        });\n      }\n      return [node, false];\n    }\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to add a node if it does not exist in the graph or else to\n   * update its attributes using a function.\n   *\n   * @param  {any}      node      - The node.\n   * @param  {function} [updater] - Optional updater function.\n   * @return {any}                - The node.\n   */\n  updateNode(node, updater) {\n    if (updater && typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        `Graph.updateNode: invalid updater function. Expecting a function but got \"${updater}\"`\n      );\n\n    // String coercion\n    node = '' + node;\n\n    // If the node already exists, we update the attributes\n    let data = this._nodes.get(node);\n\n    if (data) {\n      if (updater) {\n        const oldAttributes = data.attributes;\n        data.attributes = updater(oldAttributes);\n\n        this.emit('nodeAttributesUpdated', {\n          type: 'replace',\n          key: node,\n          attributes: data.attributes\n        });\n      }\n      return [node, false];\n    }\n\n    const attributes = updater ? updater({}) : {};\n\n    data = new this.NodeDataClass(node, attributes);\n\n    // Adding the node to internal register\n    this._nodes.set(node, data);\n\n    // Emitting\n    this.emit('nodeAdded', {\n      key: node,\n      attributes\n    });\n\n    return [node, true];\n  }\n\n  /**\n   * Method used to drop a single node & all its attached edges from the graph.\n   *\n   * @param  {any}    node - The node.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the node doesn't exist.\n   */\n  dropNode(node) {\n    node = '' + node;\n\n    const nodeData = this._nodes.get(node);\n\n    if (!nodeData)\n      throw new NotFoundGraphError(\n        `Graph.dropNode: could not find the \"${node}\" node in the graph.`\n      );\n\n    let edgeData;\n\n    // Removing attached edges\n    // NOTE: we could be faster here, but this is such a pain to maintain\n    if (this.type !== 'undirected') {\n      for (const neighbor in nodeData.out) {\n        edgeData = nodeData.out[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n\n      for (const neighbor in nodeData.in) {\n        edgeData = nodeData.in[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    if (this.type !== 'directed') {\n      for (const neighbor in nodeData.undirected) {\n        edgeData = nodeData.undirected[neighbor];\n\n        do {\n          dropEdgeFromData(this, edgeData);\n          edgeData = edgeData.next;\n        } while (edgeData);\n      }\n    }\n\n    // Dropping the node from the register\n    this._nodes.delete(node);\n\n    // Emitting\n    this.emit('nodeDropped', {\n      key: node,\n      attributes: nodeData.attributes\n    });\n  }\n\n  /**\n   * Method used to drop a single edge from the graph.\n   *\n   * Arity 1:\n   * @param  {any}    edge - The edge.\n   *\n   * Arity 2:\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropEdge(edge) {\n    let edgeData;\n\n    if (arguments.length > 1) {\n      const source = '' + arguments[0];\n      const target = '' + arguments[1];\n\n      edgeData = getMatchingEdge(this, source, target, this.type);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${source}\" -> \"${target}\" edge in the graph.`\n        );\n    } else {\n      edge = '' + edge;\n\n      edgeData = this._edges.get(edge);\n\n      if (!edgeData)\n        throw new NotFoundGraphError(\n          `Graph.dropEdge: could not find the \"${edge}\" edge in the graph.`\n        );\n    }\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single directed edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropDirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    source = '' + source;\n    target = '' + target;\n\n    const edgeData = getMatchingEdge(this, source, target, 'directed');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropDirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to drop a single undirected edge from the graph.\n   *\n   * @param  {any}    source - Source node.\n   * @param  {any}    target - Target node.\n   *\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if the edge doesn't exist.\n   */\n  dropUndirectedEdge(source, target) {\n    if (arguments.length < 2)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.'\n      );\n\n    if (this.multi)\n      throw new UsageGraphError(\n        'Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.'\n      );\n\n    const edgeData = getMatchingEdge(this, source, target, 'undirected');\n\n    if (!edgeData)\n      throw new NotFoundGraphError(\n        `Graph.dropUndirectedEdge: could not find a \"${source}\" -> \"${target}\" edge in the graph.`\n      );\n\n    dropEdgeFromData(this, edgeData);\n\n    return this;\n  }\n\n  /**\n   * Method used to remove every edge & every node from the graph.\n   *\n   * @return {Graph}\n   */\n  clear() {\n    // Clearing edges\n    this._edges.clear();\n\n    // Clearing nodes\n    this._nodes.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('cleared');\n  }\n\n  /**\n   * Method used to remove every edge from the graph.\n   *\n   * @return {Graph}\n   */\n  clearEdges() {\n    // Clearing structure index\n    const iterator = this._nodes.values();\n\n    let step;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      step.value.clear();\n    }\n\n    // Clearing edges\n    this._edges.clear();\n\n    // Reset counters\n    this._resetInstanceCounters();\n\n    // Emitting\n    this.emit('edgesCleared');\n  }\n\n  /**---------------------------------------------------------------------------\n   * Attributes-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning the desired graph's attribute.\n   *\n   * @param  {string} name - Name of the attribute.\n   * @return {any}\n   */\n  getAttribute(name) {\n    return this._attributes[name];\n  }\n\n  /**\n   * Method returning the graph's attributes.\n   *\n   * @return {object}\n   */\n  getAttributes() {\n    return this._attributes;\n  }\n\n  /**\n   * Method returning whether the graph has the desired attribute.\n   *\n   * @param  {string}  name - Name of the attribute.\n   * @return {boolean}\n   */\n  hasAttribute(name) {\n    return this._attributes.hasOwnProperty(name);\n  }\n\n  /**\n   * Method setting a value for the desired graph's attribute.\n   *\n   * @param  {string}  name  - Name of the attribute.\n   * @param  {any}     value - Value for the attribute.\n   * @return {Graph}\n   */\n  setAttribute(name, value) {\n    this._attributes[name] = value;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method using a function to update the desired graph's attribute's value.\n   *\n   * @param  {string}   name    - Name of the attribute.\n   * @param  {function} updater - Function use to update the attribute's value.\n   * @return {Graph}\n   */\n  updateAttribute(name, updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttribute: updater should be a function.'\n      );\n\n    const value = this._attributes[name];\n\n    this._attributes[name] = updater(value);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'set',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method removing the desired graph's attribute.\n   *\n   * @param  {string} name  - Name of the attribute.\n   * @return {Graph}\n   */\n  removeAttribute(name) {\n    delete this._attributes[name];\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'remove',\n      attributes: this._attributes,\n      name\n    });\n\n    return this;\n  }\n\n  /**\n   * Method replacing the graph's attributes.\n   *\n   * @param  {object} attributes - New attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  replaceAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.replaceAttributes: provided attributes are not a plain object.'\n      );\n\n    this._attributes = attributes;\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'replace',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method merging the graph's attributes.\n   *\n   * @param  {object} attributes - Attributes to merge.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given attributes are not a plain object.\n   */\n  mergeAttributes(attributes) {\n    if (!isPlainObject(attributes))\n      throw new InvalidArgumentsGraphError(\n        'Graph.mergeAttributes: provided attributes are not a plain object.'\n      );\n\n    assign(this._attributes, attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'merge',\n      attributes: this._attributes,\n      data: attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method updating the graph's attributes.\n   *\n   * @param  {function} updater - Function used to update the attributes.\n   * @return {Graph}\n   *\n   * @throws {Error} - Will throw if given updater is not a function.\n   */\n  updateAttributes(updater) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateAttributes: provided updater is not a function.'\n      );\n\n    this._attributes = updater(this._attributes);\n\n    // Emitting\n    this.emit('attributesUpdated', {\n      type: 'update',\n      attributes: this._attributes\n    });\n\n    return this;\n  }\n\n  /**\n   * Method used to update each node's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachNodeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      nodeData.attributes = updater(nodeData.key, nodeData.attributes);\n    }\n\n    this.emit('eachNodeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**\n   * Method used to update each edge's attributes using the given function.\n   *\n   * @param {function}  updater - Updater function to use.\n   * @param {object}    [hints] - Optional hints.\n   */\n  updateEachEdgeAttributes(updater, hints) {\n    if (typeof updater !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: expecting an updater function.'\n      );\n\n    if (hints && !validateHints(hints))\n      throw new InvalidArgumentsGraphError(\n        'Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}'\n      );\n\n    const iterator = this._edges.values();\n\n    let step, edgeData, sourceData, targetData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n      sourceData = edgeData.source;\n      targetData = edgeData.target;\n\n      edgeData.attributes = updater(\n        edgeData.key,\n        edgeData.attributes,\n        sourceData.key,\n        targetData.key,\n        sourceData.attributes,\n        targetData.attributes,\n        edgeData.undirected\n      );\n    }\n\n    this.emit('eachEdgeAttributesUpdated', {\n      hints: hints ? hints : null\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Iteration-related methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method iterating over the graph's adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, false, this, callback);\n  }\n  forEachAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, false, true, this, callback);\n  }\n\n  /**\n   * Method iterating over the graph's assymetric adjacency using the given callback.\n   *\n   * @param  {function}  callback - Callback to use.\n   */\n  forEachAssymetricAdjacencyEntry(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntry: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, false, this, callback);\n  }\n  forEachAssymetricAdjacencyEntryWithOrphans(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.'\n      );\n\n    forEachAdjacency(false, true, true, this, callback);\n  }\n\n  /**\n   * Method returning the list of the graph's nodes.\n   *\n   * @return {array} - The nodes.\n   */\n  nodes() {\n    if (typeof Array.from === 'function') return Array.from(this._nodes.keys());\n\n    return take(this._nodes.keys(), this._nodes.size);\n  }\n\n  /**\n   * Method iterating over the graph's nodes using the given callback.\n   *\n   * @param  {function}  callback - Callback (key, attributes, index).\n   */\n  forEachNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.forEachNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      callback(nodeData.key, nodeData.attributes);\n    }\n  }\n\n  /**\n   * Method iterating attempting to find a node matching the given predicate\n   * function.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  findNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.findNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return nodeData.key;\n    }\n\n    return;\n  }\n\n  /**\n   * Method mapping nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  mapNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.mapNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = new Array(this.order);\n    let i = 0;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      result[i++] = callback(nodeData.key, nodeData.attributes);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method returning whether some node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  someNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.someNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes)) return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Method returning whether all node verify the given predicate.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  everyNode(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.everyNode: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (!callback(nodeData.key, nodeData.attributes)) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Method filtering nodes.\n   *\n   * @param  {function}  callback - Callback (key, attributes).\n   */\n  filterNodes(callback) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.filterNodes: expecting a callback.'\n      );\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    const result = [];\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n\n      if (callback(nodeData.key, nodeData.attributes))\n        result.push(nodeData.key);\n    }\n\n    return result;\n  }\n\n  /**\n   * Method reducing nodes.\n   *\n   * @param  {function}  callback - Callback (accumulator, key, attributes).\n   */\n  reduceNodes(callback, initialValue) {\n    if (typeof callback !== 'function')\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: expecting a callback.'\n      );\n\n    if (arguments.length < 2)\n      throw new InvalidArgumentsGraphError(\n        'Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.'\n      );\n\n    let accumulator = initialValue;\n\n    const iterator = this._nodes.values();\n\n    let step, nodeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      nodeData = step.value;\n      accumulator = callback(accumulator, nodeData.key, nodeData.attributes);\n    }\n\n    return accumulator;\n  }\n\n  /**\n   * Method returning an iterator over the graph's node entries.\n   *\n   * @return {Iterator}\n   */\n  nodeEntries() {\n    const iterator = this._nodes.values();\n\n    return new Iterator(() => {\n      const step = iterator.next();\n\n      if (step.done) return step;\n\n      const data = step.value;\n\n      return {\n        value: {node: data.key, attributes: data.attributes},\n        done: false\n      };\n    });\n  }\n\n  /**---------------------------------------------------------------------------\n   * Serialization\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used to export the whole graph.\n   *\n   * @return {object} - The serialized graph.\n   */\n  export() {\n    const nodes = new Array(this._nodes.size);\n\n    let i = 0;\n\n    this._nodes.forEach((data, key) => {\n      nodes[i++] = serializeNode(key, data);\n    });\n\n    const edges = new Array(this._edges.size);\n\n    i = 0;\n\n    this._edges.forEach((data, key) => {\n      edges[i++] = serializeEdge(this.type, key, data);\n    });\n\n    return {\n      options: {\n        type: this.type,\n        multi: this.multi,\n        allowSelfLoops: this.allowSelfLoops\n      },\n      attributes: this.getAttributes(),\n      nodes,\n      edges\n    };\n  }\n\n  /**\n   * Method used to import a serialized graph.\n   *\n   * @param  {object|Graph} data  - The serialized graph.\n   * @param  {boolean}      merge - Whether to merge data.\n   * @return {Graph}              - Returns itself for chaining.\n   */\n  import(data, merge = false) {\n    // Importing a Graph instance directly\n    if (data instanceof Graph) {\n      // Nodes\n      data.forEachNode((n, a) => {\n        if (merge) this.mergeNode(n, a);\n        else this.addNode(n, a);\n      });\n\n      // Edges\n      data.forEachEdge((e, a, s, t, _sa, _ta, u) => {\n        if (merge) {\n          if (u) this.mergeUndirectedEdgeWithKey(e, s, t, a);\n          else this.mergeDirectedEdgeWithKey(e, s, t, a);\n        } else {\n          if (u) this.addUndirectedEdgeWithKey(e, s, t, a);\n          else this.addDirectedEdgeWithKey(e, s, t, a);\n        }\n      });\n\n      return this;\n    }\n\n    // Importing a serialized graph\n    if (!isPlainObject(data))\n      throw new InvalidArgumentsGraphError(\n        'Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.'\n      );\n\n    if (data.attributes) {\n      if (!isPlainObject(data.attributes))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid attributes. Expecting a plain object.'\n        );\n\n      if (merge) this.mergeAttributes(data.attributes);\n      else this.replaceAttributes(data.attributes);\n    }\n\n    let i, l, list, node, edge;\n\n    if (data.nodes) {\n      list = data.nodes;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid nodes. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        node = list[i];\n\n        // Validating\n        validateSerializedNode(node);\n\n        // Adding the node\n        const {key, attributes} = node;\n\n        if (merge) this.mergeNode(key, attributes);\n        else this.addNode(key, attributes);\n      }\n    }\n\n    if (data.edges) {\n      let undirectedByDefault = false;\n\n      if (this.type === 'undirected') {\n        undirectedByDefault = true;\n      }\n\n      list = data.edges;\n\n      if (!Array.isArray(list))\n        throw new InvalidArgumentsGraphError(\n          'Graph.import: invalid edges. Expecting an array.'\n        );\n\n      for (i = 0, l = list.length; i < l; i++) {\n        edge = list[i];\n\n        // Validating\n        validateSerializedEdge(edge);\n\n        // Adding the edge\n        const {\n          source,\n          target,\n          attributes,\n          undirected = undirectedByDefault\n        } = edge;\n\n        let method;\n\n        if ('key' in edge) {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdgeWithKey\n              : this.mergeDirectedEdgeWithKey\n            : undirected\n            ? this.addUndirectedEdgeWithKey\n            : this.addDirectedEdgeWithKey;\n\n          method.call(this, edge.key, source, target, attributes);\n        } else {\n          method = merge\n            ? undirected\n              ? this.mergeUndirectedEdge\n              : this.mergeDirectedEdge\n            : undirected\n            ? this.addUndirectedEdge\n            : this.addDirectedEdge;\n\n          method.call(this, source, target, attributes);\n        }\n      }\n    }\n\n    return this;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Utils\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method returning a null copy of the graph, i.e. a graph without nodes\n   * & edges but with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The null copy.\n   */\n  nullCopy(options) {\n    const graph = new Graph(assign({}, this._options, options));\n    graph.replaceAttributes(assign({}, this.getAttributes()));\n    return graph;\n  }\n\n  /**\n   * Method returning an empty copy of the graph, i.e. a graph without edges but\n   * with the exact same options.\n   *\n   * @param  {object} options - Options to merge with the current ones.\n   * @return {Graph}          - The empty copy.\n   */\n  emptyCopy(options) {\n    const graph = this.nullCopy(options);\n\n    this._nodes.forEach((nodeData, key) => {\n      const attributes = assign({}, nodeData.attributes);\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      nodeData = new graph.NodeDataClass(key, attributes);\n      graph._nodes.set(key, nodeData);\n    });\n\n    return graph;\n  }\n\n  /**\n   * Method returning an exact copy of the graph.\n   *\n   * @param  {object} options - Upgrade options.\n   * @return {Graph}          - The copy.\n   */\n  copy(options) {\n    options = options || {};\n\n    if (\n      typeof options.type === 'string' &&\n      options.type !== this.type &&\n      options.type !== 'mixed'\n    )\n      throw new UsageGraphError(\n        `Graph.copy: cannot create an incompatible copy from \"${this.type}\" type to \"${options.type}\" because this would mean losing information about the current graph.`\n      );\n\n    if (\n      typeof options.multi === 'boolean' &&\n      options.multi !== this.multi &&\n      options.multi !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.'\n      );\n\n    if (\n      typeof options.allowSelfLoops === 'boolean' &&\n      options.allowSelfLoops !== this.allowSelfLoops &&\n      options.allowSelfLoops !== true\n    )\n      throw new UsageGraphError(\n        'Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.'\n      );\n\n    const graph = this.emptyCopy(options);\n\n    const iterator = this._edges.values();\n\n    let step, edgeData;\n\n    while (((step = iterator.next()), step.done !== true)) {\n      edgeData = step.value;\n\n      // NOTE: no need to emit events since user cannot access the instance yet\n      addEdge(\n        graph,\n        'copy',\n        false,\n        edgeData.undirected,\n        edgeData.key,\n        edgeData.source.key,\n        edgeData.target.key,\n        assign({}, edgeData.attributes)\n      );\n    }\n\n    return graph;\n  }\n\n  /**---------------------------------------------------------------------------\n   * Known methods\n   **---------------------------------------------------------------------------\n   */\n\n  /**\n   * Method used by JavaScript to perform JSON serialization.\n   *\n   * @return {object} - The serialized graph.\n   */\n  toJSON() {\n    return this.export();\n  }\n\n  /**\n   * Method returning [object Graph].\n   */\n  toString() {\n    return '[object Graph]';\n  }\n\n  /**\n   * Method used internally by node's console to display a custom object.\n   *\n   * @return {object} - Formatted object representation of the graph.\n   */\n  inspect() {\n    const nodes = {};\n    this._nodes.forEach((data, key) => {\n      nodes[key] = data.attributes;\n    });\n\n    const edges = {},\n      multiIndex = {};\n\n    this._edges.forEach((data, key) => {\n      const direction = data.undirected ? '--' : '->';\n\n      let label = '';\n\n      let source = data.source.key;\n      let target = data.target.key;\n      let tmp;\n\n      if (data.undirected && source > target) {\n        tmp = source;\n        source = target;\n        target = tmp;\n      }\n\n      const desc = `(${source})${direction}(${target})`;\n\n      if (!key.startsWith('geid_')) {\n        label += `[${key}]: `;\n      } else if (this.multi) {\n        if (typeof multiIndex[desc] === 'undefined') {\n          multiIndex[desc] = 0;\n        } else {\n          multiIndex[desc]++;\n        }\n\n        label += `${multiIndex[desc]}. `;\n      }\n\n      label += desc;\n\n      edges[label] = data.attributes;\n    });\n\n    const dummy = {};\n\n    for (const k in this) {\n      if (\n        this.hasOwnProperty(k) &&\n        !EMITTER_PROPS.has(k) &&\n        typeof this[k] !== 'function' &&\n        typeof k !== 'symbol'\n      )\n        dummy[k] = this[k];\n    }\n\n    dummy.attributes = this._attributes;\n    dummy.nodes = nodes;\n    dummy.edges = edges;\n\n    privateProperty(dummy, 'constructor', this.constructor);\n\n    return dummy;\n  }\n}\n\n/**\n * Attaching methods to the prototype.\n *\n * Here, we are attaching a wide variety of methods to the Graph class'\n * prototype when those are very numerous and when their creation is\n * abstracted.\n */\n\n/**\n * Attaching custom inspect method for node >= 10.\n */\nif (typeof Symbol !== 'undefined')\n  Graph.prototype[Symbol.for('nodejs.util.inspect.custom')] =\n    Graph.prototype.inspect;\n\n/**\n * Related to edge addition.\n */\nEDGE_ADD_METHODS.forEach(method => {\n  ['add', 'merge', 'update'].forEach(verb => {\n    const name = method.name(verb);\n    const fn = verb === 'add' ? addEdge : mergeEdge;\n\n    if (method.generateKey) {\n      Graph.prototype[name] = function (source, target, attributes) {\n        return fn(\n          this,\n          name,\n          true,\n          (method.type || this.type) === 'undirected',\n          null,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    } else {\n      Graph.prototype[name] = function (edge, source, target, attributes) {\n        return fn(\n          this,\n          name,\n          false,\n          (method.type || this.type) === 'undirected',\n          edge,\n          source,\n          target,\n          attributes,\n          verb === 'update'\n        );\n      };\n    }\n  });\n});\n\n/**\n * Attributes-related.\n */\nattachNodeAttributesMethods(Graph);\nattachEdgeAttributesMethods(Graph);\n\n/**\n * Edge iteration-related.\n */\nattachEdgeIterationMethods(Graph);\n\n/**\n * Neighbor iteration-related.\n */\nattachNeighborIterationMethods(Graph);\n","/**\n * Graphology Helper Classes\n * ==========================\n *\n * Building some higher-order classes instantiating the graph with\n * predefinite options.\n */\nimport {assign} from './utils';\nimport Graph from './graph';\n\nimport {\n  InvalidArgumentsGraphError,\n  NotFoundGraphError,\n  UsageGraphError\n} from './errors';\n\n/**\n * Alternative constructors.\n */\nclass DirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'DirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass UndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected'}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== false)\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'UndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiDirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'directed', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'directed')\n      throw new InvalidArgumentsGraphError(\n        'MultiDirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\nclass MultiUndirectedGraph extends Graph {\n  constructor(options) {\n    const finalOptions = assign({type: 'undirected', multi: true}, options);\n\n    if ('multi' in finalOptions && finalOptions.multi !== true)\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!'\n      );\n\n    if (finalOptions.type !== 'undirected')\n      throw new InvalidArgumentsGraphError(\n        'MultiUndirectedGraph.from: inconsistent \"' +\n          finalOptions.type +\n          '\" type in given options!'\n      );\n\n    super(finalOptions);\n  }\n}\n\n/**\n * Attaching static #.from method to each of the constructors.\n */\nfunction attachStaticFromMethod(Class) {\n  /**\n   * Builds a graph from serialized data or another graph's data.\n   *\n   * @param  {Graph|SerializedGraph} data      - Hydratation data.\n   * @param  {object}                [options] - Options.\n   * @return {Class}\n   */\n  Class.from = function (data, options) {\n    // Merging given options with serialized ones\n    const finalOptions = assign({}, data.options, options);\n\n    const instance = new Class(finalOptions);\n    instance.import(data);\n\n    return instance;\n  };\n}\n\nattachStaticFromMethod(Graph);\nattachStaticFromMethod(DirectedGraph);\nattachStaticFromMethod(UndirectedGraph);\nattachStaticFromMethod(MultiGraph);\nattachStaticFromMethod(MultiDirectedGraph);\nattachStaticFromMethod(MultiUndirectedGraph);\n\nGraph.Graph = Graph;\nGraph.DirectedGraph = DirectedGraph;\nGraph.UndirectedGraph = UndirectedGraph;\nGraph.MultiGraph = MultiGraph;\nGraph.MultiDirectedGraph = MultiDirectedGraph;\nGraph.MultiUndirectedGraph = MultiUndirectedGraph;\n\nGraph.InvalidArgumentsGraphError = InvalidArgumentsGraphError;\nGraph.NotFoundGraphError = NotFoundGraphError;\nGraph.UsageGraphError = UsageGraphError;\n\nexport {\n  Graph,\n  DirectedGraph,\n  UndirectedGraph,\n  MultiGraph,\n  MultiDirectedGraph,\n  MultiUndirectedGraph\n};\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js Camera Class\n * ======================\n *\n * Class designed to store camera information & used to update it.\n * @module\n */\nvar animate_1 = require(\"../utils/animate\");\nvar easings_1 = __importDefault(require(\"../utils/easings\"));\nvar utils_1 = require(\"../utils\");\nvar types_1 = require(\"../types\");\n/**\n * Defaults.\n */\nvar DEFAULT_ZOOMING_RATIO = 1.5;\n/**\n * Camera class\n *\n * @constructor\n */\nvar Camera = /** @class */ (function (_super) {\n    __extends(Camera, _super);\n    function Camera() {\n        var _this = _super.call(this) || this;\n        _this.x = 0.5;\n        _this.y = 0.5;\n        _this.angle = 0;\n        _this.ratio = 1;\n        _this.minRatio = null;\n        _this.maxRatio = null;\n        _this.nextFrame = null;\n        _this.previousState = null;\n        _this.enabled = true;\n        // State\n        _this.previousState = _this.getState();\n        return _this;\n    }\n    /**\n     * Static method used to create a Camera object with a given state.\n     *\n     * @param state\n     * @return {Camera}\n     */\n    Camera.from = function (state) {\n        var camera = new Camera();\n        return camera.setState(state);\n    };\n    /**\n     * Method used to enable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.enable = function () {\n        this.enabled = true;\n        return this;\n    };\n    /**\n     * Method used to disable the camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.disable = function () {\n        this.enabled = false;\n        return this;\n    };\n    /**\n     * Method used to retrieve the camera's current state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getState = function () {\n        return {\n            x: this.x,\n            y: this.y,\n            angle: this.angle,\n            ratio: this.ratio,\n        };\n    };\n    /**\n     * Method used to check whether the camera has the given state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.hasState = function (state) {\n        return this.x === state.x && this.y === state.y && this.ratio === state.ratio && this.angle === state.angle;\n    };\n    /**\n     * Method used to retrieve the camera's previous state.\n     *\n     * @return {object}\n     */\n    Camera.prototype.getPreviousState = function () {\n        var state = this.previousState;\n        if (!state)\n            return null;\n        return {\n            x: state.x,\n            y: state.y,\n            angle: state.angle,\n            ratio: state.ratio,\n        };\n    };\n    /**\n     * Method used to check minRatio and maxRatio values.\n     *\n     * @param ratio\n     * @return {number}\n     */\n    Camera.prototype.getBoundedRatio = function (ratio) {\n        var r = ratio;\n        if (typeof this.minRatio === \"number\")\n            r = Math.max(r, this.minRatio);\n        if (typeof this.maxRatio === \"number\")\n            r = Math.min(r, this.maxRatio);\n        return r;\n    };\n    /**\n     * Method used to check various things to return a legit state candidate.\n     *\n     * @param state\n     * @return {object}\n     */\n    Camera.prototype.validateState = function (state) {\n        var validatedState = {};\n        if (typeof state.x === \"number\")\n            validatedState.x = state.x;\n        if (typeof state.y === \"number\")\n            validatedState.y = state.y;\n        if (typeof state.angle === \"number\")\n            validatedState.angle = state.angle;\n        if (typeof state.ratio === \"number\")\n            validatedState.ratio = this.getBoundedRatio(state.ratio);\n        return validatedState;\n    };\n    /**\n     * Method used to check whether the camera is currently being animated.\n     *\n     * @return {boolean}\n     */\n    Camera.prototype.isAnimated = function () {\n        return !!this.nextFrame;\n    };\n    /**\n     * Method used to set the camera's state.\n     *\n     * @param  {object} state - New state.\n     * @return {Camera}\n     */\n    Camera.prototype.setState = function (state) {\n        if (!this.enabled)\n            return this;\n        // TODO: update by function\n        // Keeping track of last state\n        this.previousState = this.getState();\n        var validState = this.validateState(state);\n        if (typeof validState.x === \"number\")\n            this.x = validState.x;\n        if (typeof validState.y === \"number\")\n            this.y = validState.y;\n        if (typeof validState.angle === \"number\")\n            this.angle = validState.angle;\n        if (typeof validState.ratio === \"number\")\n            this.ratio = validState.ratio;\n        // Emitting\n        if (!this.hasState(this.previousState))\n            this.emit(\"updated\", this.getState());\n        return this;\n    };\n    /**\n     * Method used to update the camera's state using a function.\n     *\n     * @param  {function} updater - Updated function taking current state and\n     *                              returning next state.\n     * @return {Camera}\n     */\n    Camera.prototype.updateState = function (updater) {\n        this.setState(updater(this.getState()));\n        return this;\n    };\n    /**\n     * Method used to animate the camera.\n     *\n     * @param  {object}                    state      - State to reach eventually.\n     * @param  {object}                    opts       - Options:\n     * @param  {number}                      duration - Duration of the animation.\n     * @param  {string | number => number}   easing   - Easing function or name of an existing one\n     * @param  {function}                  callback   - Callback\n     */\n    Camera.prototype.animate = function (state, opts, callback) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var options = Object.assign({}, animate_1.ANIMATE_DEFAULTS, opts);\n        var validState = this.validateState(state);\n        var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n        // State\n        var start = Date.now(), initialState = this.getState();\n        // Function performing the animation\n        var fn = function () {\n            var t = (Date.now() - start) / options.duration;\n            // The animation is over:\n            if (t >= 1) {\n                _this.nextFrame = null;\n                _this.setState(validState);\n                if (_this.animationCallback) {\n                    _this.animationCallback.call(null);\n                    _this.animationCallback = undefined;\n                }\n                return;\n            }\n            var coefficient = easing(t);\n            var newState = {};\n            if (typeof validState.x === \"number\")\n                newState.x = initialState.x + (validState.x - initialState.x) * coefficient;\n            if (typeof validState.y === \"number\")\n                newState.y = initialState.y + (validState.y - initialState.y) * coefficient;\n            if (typeof validState.angle === \"number\")\n                newState.angle = initialState.angle + (validState.angle - initialState.angle) * coefficient;\n            if (typeof validState.ratio === \"number\")\n                newState.ratio = initialState.ratio + (validState.ratio - initialState.ratio) * coefficient;\n            _this.setState(newState);\n            _this.nextFrame = (0, utils_1.requestFrame)(fn);\n        };\n        if (this.nextFrame) {\n            (0, utils_1.cancelFrame)(this.nextFrame);\n            if (this.animationCallback)\n                this.animationCallback.call(null);\n            this.nextFrame = (0, utils_1.requestFrame)(fn);\n        }\n        else {\n            fn();\n        }\n        this.animationCallback = callback;\n    };\n    /**\n     * Method used to zoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     * @return {function}\n     */\n    Camera.prototype.animatedZoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio / DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio / factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio / (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to unzoom the camera.\n     *\n     * @param  {number|object} factorOrOptions - Factor or options.\n     */\n    Camera.prototype.animatedUnzoom = function (factorOrOptions) {\n        if (!factorOrOptions) {\n            this.animate({ ratio: this.ratio * DEFAULT_ZOOMING_RATIO });\n        }\n        else {\n            if (typeof factorOrOptions === \"number\")\n                return this.animate({ ratio: this.ratio * factorOrOptions });\n            else\n                this.animate({\n                    ratio: this.ratio * (factorOrOptions.factor || DEFAULT_ZOOMING_RATIO),\n                }, factorOrOptions);\n        }\n    };\n    /**\n     * Method used to reset the camera.\n     *\n     * @param  {object} options - Options.\n     */\n    Camera.prototype.animatedReset = function (options) {\n        this.animate({\n            x: 0.5,\n            y: 0.5,\n            ratio: 1,\n            angle: 0,\n        }, options);\n    };\n    /**\n     * Returns a new Camera instance, with the same state as the current camera.\n     *\n     * @return {Camera}\n     */\n    Camera.prototype.copy = function () {\n        return Camera.from(this.getState());\n    };\n    return Camera;\n}(types_1.TypedEventEmitter));\nexports.default = Camera;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getWheelDelta = exports.getTouchCoords = exports.getTouchesArray = exports.getWheelCoords = exports.getMouseCoords = exports.getPosition = void 0;\n/**\n * Sigma.js Captor Class\n * ======================\n * @module\n */\nvar types_1 = require(\"../../types\");\n/**\n * Captor utils functions\n * ======================\n */\n/**\n * Extract the local X and Y coordinates from a mouse event or touch object. If\n * a DOM element is given, it uses this element's offset to compute the position\n * (this allows using events that are not bound to the container itself and\n * still have a proper position).\n *\n * @param  {event}       e - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {number}      The local Y value of the mouse.\n */\nfunction getPosition(e, dom) {\n    var bbox = dom.getBoundingClientRect();\n    return {\n        x: e.clientX - bbox.left,\n        y: e.clientY - bbox.top,\n    };\n}\nexports.getPosition = getPosition;\n/**\n * Convert mouse coords to sigma coords.\n *\n * @param  {event}       e   - A mouse event or touch object.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getMouseCoords(e, dom) {\n    var res = __assign(__assign({}, getPosition(e, dom)), { sigmaDefaultPrevented: false, preventSigmaDefault: function () {\n            res.sigmaDefaultPrevented = true;\n        }, original: e });\n    return res;\n}\nexports.getMouseCoords = getMouseCoords;\n/**\n * Convert mouse wheel event coords to sigma coords.\n *\n * @param  {event}       e   - A wheel mouse event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getWheelCoords(e, dom) {\n    return __assign(__assign({}, getMouseCoords(e, dom)), { delta: getWheelDelta(e) });\n}\nexports.getWheelCoords = getWheelCoords;\nvar MAX_TOUCHES = 2;\nfunction getTouchesArray(touches) {\n    var arr = [];\n    for (var i = 0, l = Math.min(touches.length, MAX_TOUCHES); i < l; i++)\n        arr.push(touches[i]);\n    return arr;\n}\nexports.getTouchesArray = getTouchesArray;\n/**\n * Convert touch coords to sigma coords.\n *\n * @param  {event}       e   - A touch event.\n * @param  {HTMLElement} dom - A DOM element to compute offset relatively to.\n * @return {object}\n */\nfunction getTouchCoords(e, dom) {\n    return {\n        touches: getTouchesArray(e.touches).map(function (touch) { return getPosition(touch, dom); }),\n        original: e,\n    };\n}\nexports.getTouchCoords = getTouchCoords;\n/**\n * Extract the wheel delta from a mouse event or touch object.\n *\n * @param  {event}  e - A mouse event or touch object.\n * @return {number}     The wheel delta of the mouse.\n */\nfunction getWheelDelta(e) {\n    // TODO: check those ratios again to ensure a clean Chrome/Firefox compat\n    if (typeof e.deltaY !== \"undefined\")\n        return (e.deltaY * -3) / 360;\n    if (typeof e.detail !== \"undefined\")\n        return e.detail / -9;\n    throw new Error(\"Captor: could not extract delta from event.\");\n}\nexports.getWheelDelta = getWheelDelta;\n/**\n * Abstract class representing a captor like the user's mouse or touch controls.\n */\nvar Captor = /** @class */ (function (_super) {\n    __extends(Captor, _super);\n    function Captor(container, renderer) {\n        var _this = _super.call(this) || this;\n        // Properties\n        _this.container = container;\n        _this.renderer = renderer;\n        return _this;\n    }\n    return Captor;\n}(types_1.TypedEventEmitter));\nexports.default = Captor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\n/**\n * Constants.\n */\nvar DRAG_TIMEOUT = 100;\nvar DRAGGED_EVENTS_TOLERANCE = 3;\nvar MOUSE_INERTIA_DURATION = 200;\nvar MOUSE_INERTIA_RATIO = 3;\nvar MOUSE_ZOOM_DURATION = 250;\nvar ZOOMING_RATIO = 1.7;\nvar DOUBLE_CLICK_TIMEOUT = 300;\nvar DOUBLE_CLICK_ZOOMING_RATIO = 2.2;\nvar DOUBLE_CLICK_ZOOMING_DURATION = 200;\n/**\n * Mouse captor class.\n *\n * @constructor\n */\nvar MouseCaptor = /** @class */ (function (_super) {\n    __extends(MouseCaptor, _super);\n    function MouseCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        // State\n        _this.enabled = true;\n        _this.draggedEvents = 0;\n        _this.downStartTime = null;\n        _this.lastMouseX = null;\n        _this.lastMouseY = null;\n        _this.isMouseDown = false;\n        _this.isMoving = false;\n        _this.movingTimeout = null;\n        _this.startCameraState = null;\n        _this.clicks = 0;\n        _this.doubleClickTimeout = null;\n        _this.currentWheelDirection = 0;\n        // Binding methods\n        _this.handleClick = _this.handleClick.bind(_this);\n        _this.handleRightClick = _this.handleRightClick.bind(_this);\n        _this.handleDown = _this.handleDown.bind(_this);\n        _this.handleUp = _this.handleUp.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        _this.handleWheel = _this.handleWheel.bind(_this);\n        _this.handleOut = _this.handleOut.bind(_this);\n        // Binding events\n        container.addEventListener(\"click\", _this.handleClick, false);\n        container.addEventListener(\"contextmenu\", _this.handleRightClick, false);\n        container.addEventListener(\"mousedown\", _this.handleDown, false);\n        container.addEventListener(\"wheel\", _this.handleWheel, false);\n        container.addEventListener(\"mouseout\", _this.handleOut, false);\n        document.addEventListener(\"mousemove\", _this.handleMove, false);\n        document.addEventListener(\"mouseup\", _this.handleUp, false);\n        return _this;\n    }\n    MouseCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"click\", this.handleClick);\n        container.removeEventListener(\"contextmenu\", this.handleRightClick);\n        container.removeEventListener(\"mousedown\", this.handleDown);\n        container.removeEventListener(\"wheel\", this.handleWheel);\n        container.removeEventListener(\"mouseout\", this.handleOut);\n        document.removeEventListener(\"mousemove\", this.handleMove);\n        document.removeEventListener(\"mouseup\", this.handleUp);\n    };\n    MouseCaptor.prototype.handleClick = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        this.clicks++;\n        if (this.clicks === 2) {\n            this.clicks = 0;\n            if (typeof this.doubleClickTimeout === \"number\") {\n                clearTimeout(this.doubleClickTimeout);\n                this.doubleClickTimeout = null;\n            }\n            return this.handleDoubleClick(e);\n        }\n        setTimeout(function () {\n            _this.clicks = 0;\n            _this.doubleClickTimeout = null;\n        }, DOUBLE_CLICK_TIMEOUT);\n        // NOTE: this is here to prevent click events on drag\n        if (this.draggedEvents < DRAGGED_EVENTS_TOLERANCE)\n            this.emit(\"click\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleRightClick = function (e) {\n        if (!this.enabled)\n            return;\n        this.emit(\"rightClick\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleDoubleClick = function (e) {\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        this.emit(\"doubleClick\", mouseCoords);\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // default behavior\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio / DOUBLE_CLICK_ZOOMING_RATIO);\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticInOut\",\n            duration: DOUBLE_CLICK_ZOOMING_DURATION,\n        });\n    };\n    MouseCaptor.prototype.handleDown = function (e) {\n        if (!this.enabled)\n            return;\n        // We only start dragging on left button\n        if (e.button === 0) {\n            this.startCameraState = this.renderer.getCamera().getState();\n            var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n            this.lastMouseX = x;\n            this.lastMouseY = y;\n            this.draggedEvents = 0;\n            this.downStartTime = Date.now();\n            this.isMouseDown = true;\n        }\n        this.emit(\"mousedown\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleUp = function (e) {\n        var _this = this;\n        if (!this.enabled || !this.isMouseDown)\n            return;\n        var camera = this.renderer.getCamera();\n        this.isMouseDown = false;\n        if (typeof this.movingTimeout === \"number\") {\n            clearTimeout(this.movingTimeout);\n            this.movingTimeout = null;\n        }\n        var _a = (0, captor_1.getPosition)(e, this.container), x = _a.x, y = _a.y;\n        var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n        if (this.isMoving) {\n            camera.animate({\n                x: cameraState.x + MOUSE_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                y: cameraState.y + MOUSE_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n            }, {\n                duration: MOUSE_INERTIA_DURATION,\n                easing: \"quadraticOut\",\n            });\n        }\n        else if (this.lastMouseX !== x || this.lastMouseY !== y) {\n            camera.setState({\n                x: cameraState.x,\n                y: cameraState.y,\n            });\n        }\n        this.isMoving = false;\n        setTimeout(function () {\n            _this.draggedEvents = 0;\n            // NOTE: this refresh is here to make sure `hideEdgesOnMove` can work\n            // when someone releases camera pan drag after having stopped moving.\n            // See commit: https://github.com/jacomyal/sigma.js/commit/cfd9197f70319109db6b675dd7c82be493ca95a2\n            // See also issue: https://github.com/jacomyal/sigma.js/issues/1290\n            // It could be possible to render instead of scheduling a refresh but for\n            // now it seems good enough.\n            _this.renderer.refresh();\n        }, 0);\n        this.emit(\"mouseup\", (0, captor_1.getMouseCoords)(e, this.container));\n    };\n    MouseCaptor.prototype.handleMove = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        var mouseCoords = (0, captor_1.getMouseCoords)(e, this.container);\n        // Always trigger a \"mousemovebody\" event, so that it is possible to develop\n        // a drag-and-drop effect that works even when the mouse is out of the\n        // container:\n        this.emit(\"mousemovebody\", mouseCoords);\n        // Only trigger the \"mousemove\" event when the mouse is actually hovering\n        // the container, to avoid weirdly hovering nodes and/or edges when the\n        // mouse is not hover the container:\n        if (e.target === this.container) {\n            this.emit(\"mousemove\", mouseCoords);\n        }\n        if (mouseCoords.sigmaDefaultPrevented)\n            return;\n        // Handle the case when \"isMouseDown\" all the time, to allow dragging the\n        // stage while the mouse is not hover the container:\n        if (this.isMouseDown) {\n            this.isMoving = true;\n            this.draggedEvents++;\n            if (typeof this.movingTimeout === \"number\") {\n                clearTimeout(this.movingTimeout);\n            }\n            this.movingTimeout = window.setTimeout(function () {\n                _this.movingTimeout = null;\n                _this.isMoving = false;\n            }, DRAG_TIMEOUT);\n            var camera = this.renderer.getCamera();\n            var _a = (0, captor_1.getPosition)(e, this.container), eX = _a.x, eY = _a.y;\n            var lastMouse = this.renderer.viewportToFramedGraph({\n                x: this.lastMouseX,\n                y: this.lastMouseY,\n            });\n            var mouse = this.renderer.viewportToFramedGraph({ x: eX, y: eY });\n            var offsetX = lastMouse.x - mouse.x, offsetY = lastMouse.y - mouse.y;\n            var cameraState = camera.getState();\n            var x = cameraState.x + offsetX, y = cameraState.y + offsetY;\n            camera.setState({ x: x, y: y });\n            this.lastMouseX = eX;\n            this.lastMouseY = eY;\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    };\n    MouseCaptor.prototype.handleWheel = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        e.preventDefault();\n        e.stopPropagation();\n        var delta = (0, captor_1.getWheelDelta)(e);\n        if (!delta)\n            return;\n        var wheelCoords = (0, captor_1.getWheelCoords)(e, this.container);\n        this.emit(\"wheel\", wheelCoords);\n        if (wheelCoords.sigmaDefaultPrevented)\n            return;\n        // Default behavior\n        var ratioDiff = delta > 0 ? 1 / ZOOMING_RATIO : ZOOMING_RATIO;\n        var camera = this.renderer.getCamera();\n        var newRatio = camera.getBoundedRatio(camera.getState().ratio * ratioDiff);\n        var wheelDirection = delta > 0 ? 1 : -1;\n        var now = Date.now();\n        // Cancel events that are too close too each other and in the same direction:\n        if (this.currentWheelDirection === wheelDirection &&\n            this.lastWheelTriggerTime &&\n            now - this.lastWheelTriggerTime < MOUSE_ZOOM_DURATION / 5) {\n            return;\n        }\n        camera.animate(this.renderer.getViewportZoomedState((0, captor_1.getPosition)(e, this.container), newRatio), {\n            easing: \"quadraticOut\",\n            duration: MOUSE_ZOOM_DURATION,\n        }, function () {\n            _this.currentWheelDirection = 0;\n        });\n        this.currentWheelDirection = wheelDirection;\n        this.lastWheelTriggerTime = now;\n    };\n    MouseCaptor.prototype.handleOut = function () {\n        // TODO: dispatch event\n    };\n    return MouseCaptor;\n}(captor_1.default));\nexports.default = MouseCaptor;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar captor_1 = __importStar(require(\"./captor\"));\nvar DRAG_TIMEOUT = 200;\nvar TOUCH_INERTIA_RATIO = 3;\nvar TOUCH_INERTIA_DURATION = 200;\n/**\n * Touch captor class.\n *\n * @constructor\n */\nvar TouchCaptor = /** @class */ (function (_super) {\n    __extends(TouchCaptor, _super);\n    function TouchCaptor(container, renderer) {\n        var _this = _super.call(this, container, renderer) || this;\n        _this.enabled = true;\n        _this.isMoving = false;\n        _this.hasMoved = false;\n        _this.touchMode = 0; // number of touches down\n        _this.startTouchesPositions = [];\n        // Binding methods:\n        _this.handleStart = _this.handleStart.bind(_this);\n        _this.handleLeave = _this.handleLeave.bind(_this);\n        _this.handleMove = _this.handleMove.bind(_this);\n        // Binding events\n        container.addEventListener(\"touchstart\", _this.handleStart, false);\n        container.addEventListener(\"touchend\", _this.handleLeave, false);\n        container.addEventListener(\"touchcancel\", _this.handleLeave, false);\n        container.addEventListener(\"touchmove\", _this.handleMove, false);\n        return _this;\n    }\n    TouchCaptor.prototype.kill = function () {\n        var container = this.container;\n        container.removeEventListener(\"touchstart\", this.handleStart);\n        container.removeEventListener(\"touchend\", this.handleLeave);\n        container.removeEventListener(\"touchcancel\", this.handleLeave);\n        container.removeEventListener(\"touchmove\", this.handleMove);\n    };\n    TouchCaptor.prototype.getDimensions = function () {\n        return {\n            width: this.container.offsetWidth,\n            height: this.container.offsetHeight,\n        };\n    };\n    TouchCaptor.prototype.dispatchRelatedMouseEvent = function (type, e, touch, emitter) {\n        var mousePosition = touch || e.touches[0];\n        var mouseEvent = new MouseEvent(type, {\n            clientX: mousePosition.clientX,\n            clientY: mousePosition.clientY,\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n        });\n        mouseEvent.isFakeSigmaMouseEvent = true;\n        (emitter || this.container).dispatchEvent(mouseEvent);\n    };\n    TouchCaptor.prototype.handleStart = function (e) {\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousedown\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        this.touchMode = touches.length;\n        this.startCameraState = this.renderer.getCamera().getState();\n        this.startTouchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = this.startTouchesPositions;\n        // When there are two touches down, let's record distance and angle as well:\n        if (this.touchMode === 2) {\n            var _a = __read(this.startTouchesPositions, 2), _b = _a[0], x0 = _b.x, y0 = _b.y, _c = _a[1], x1 = _c.x, y1 = _c.y;\n            this.startTouchesAngle = Math.atan2(y1 - y0, x1 - x0);\n            this.startTouchesDistance = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n        }\n        this.emit(\"touchdown\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleLeave = function (e) {\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 0 && this.lastTouches && this.lastTouches.length) {\n            this.dispatchRelatedMouseEvent(\"mouseup\", e, this.lastTouches[0], document);\n            // ... and only click if no move was made\n            if (!this.hasMoved) {\n                this.dispatchRelatedMouseEvent(\"click\", e, this.lastTouches[0]);\n            }\n        }\n        if (this.movingTimeout) {\n            this.isMoving = false;\n            clearTimeout(this.movingTimeout);\n        }\n        switch (this.touchMode) {\n            case 2:\n                if (e.touches.length === 1) {\n                    this.handleStart(e);\n                    e.preventDefault();\n                    break;\n                }\n            /* falls through */\n            case 1:\n                // TODO\n                // Dispatch event\n                if (this.isMoving) {\n                    var camera = this.renderer.getCamera();\n                    var cameraState = camera.getState(), previousCameraState = camera.getPreviousState() || { x: 0, y: 0 };\n                    camera.animate({\n                        x: cameraState.x + TOUCH_INERTIA_RATIO * (cameraState.x - previousCameraState.x),\n                        y: cameraState.y + TOUCH_INERTIA_RATIO * (cameraState.y - previousCameraState.y),\n                    }, {\n                        duration: TOUCH_INERTIA_DURATION,\n                        easing: \"quadraticOut\",\n                    });\n                }\n                this.hasMoved = false;\n                this.isMoving = false;\n                this.touchMode = 0;\n                break;\n        }\n        this.emit(\"touchup\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    TouchCaptor.prototype.handleMove = function (e) {\n        var _a;\n        var _this = this;\n        if (!this.enabled)\n            return;\n        // Prevent default to avoid default browser behaviors...\n        e.preventDefault();\n        // ...but simulate mouse behavior anyway, to get the MouseCaptor working as well:\n        if (e.touches.length === 1)\n            this.dispatchRelatedMouseEvent(\"mousemove\", e);\n        var touches = (0, captor_1.getTouchesArray)(e.touches);\n        var touchesPositions = touches.map(function (touch) { return (0, captor_1.getPosition)(touch, _this.container); });\n        this.lastTouches = touches;\n        this.lastTouchesPositions = touchesPositions;\n        // If a move was initiated at some point and we get back to startpoint,\n        // we should still consider that we did move (which also happens after a\n        // multiple touch when only one touch remains in which case handleStart\n        // is recalled within handleLeave).\n        // Now, some mobile browsers report zero-distance moves so we also check that\n        // one of the touches did actually move from the origin position.\n        this.hasMoved || (this.hasMoved = touchesPositions.some(function (position, idx) {\n            var startPosition = _this.startTouchesPositions[idx];\n            return position.x !== startPosition.x || position.y !== startPosition.y;\n        }));\n        // If there was no move, do not trigger touch moves behavior\n        if (!this.hasMoved) {\n            return;\n        }\n        this.isMoving = true;\n        if (this.movingTimeout)\n            clearTimeout(this.movingTimeout);\n        this.movingTimeout = window.setTimeout(function () {\n            _this.isMoving = false;\n        }, DRAG_TIMEOUT);\n        var camera = this.renderer.getCamera();\n        var startCameraState = this.startCameraState;\n        switch (this.touchMode) {\n            case 1: {\n                var _b = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0]), xStart = _b.x, yStart = _b.y;\n                var _c = this.renderer.viewportToFramedGraph(touchesPositions[0]), x = _c.x, y = _c.y;\n                camera.setState({\n                    x: startCameraState.x + xStart - x,\n                    y: startCameraState.y + yStart - y,\n                });\n                break;\n            }\n            case 2: {\n                /**\n                 * Here is the thinking here:\n                 *\n                 * 1. We can find the new angle and ratio, by comparing the vector from \"touch one\" to \"touch two\" at the start\n                 *    of the d'n'd and now\n                 *\n                 * 2. We can use `Camera#viewportToGraph` inside formula to retrieve the new camera position, using the graph\n                 *    position of a touch at the beginning of the d'n'd (using `startCamera.viewportToGraph`) and the viewport\n                 *    position of this same touch now\n                 */\n                var newCameraState = {};\n                var _d = touchesPositions[0], x0 = _d.x, y0 = _d.y;\n                var _e = touchesPositions[1], x1 = _e.x, y1 = _e.y;\n                var angleDiff = Math.atan2(y1 - y0, x1 - x0) - this.startTouchesAngle;\n                var ratioDiff = Math.hypot(y1 - y0, x1 - x0) / this.startTouchesDistance;\n                // 1.\n                var newRatio = camera.getBoundedRatio(startCameraState.ratio / ratioDiff);\n                newCameraState.ratio = newRatio;\n                newCameraState.angle = startCameraState.angle + angleDiff;\n                // 2.\n                var dimensions = this.getDimensions();\n                var touchGraphPosition = this.renderer.viewportToFramedGraph((this.startTouchesPositions || [])[0], { cameraState: startCameraState });\n                var smallestDimension = Math.min(dimensions.width, dimensions.height);\n                var dx = smallestDimension / dimensions.width;\n                var dy = smallestDimension / dimensions.height;\n                var ratio = newRatio / smallestDimension;\n                // Align with center of the graph:\n                var x = x0 - smallestDimension / 2 / dx;\n                var y = y0 - smallestDimension / 2 / dy;\n                // Rotate:\n                _a = __read([\n                    x * Math.cos(-newCameraState.angle) - y * Math.sin(-newCameraState.angle),\n                    y * Math.cos(-newCameraState.angle) + x * Math.sin(-newCameraState.angle),\n                ], 2), x = _a[0], y = _a[1];\n                newCameraState.x = touchGraphPosition.x - x * ratio;\n                newCameraState.y = touchGraphPosition.y + y * ratio;\n                camera.setState(newCameraState);\n                break;\n            }\n        }\n        this.emit(\"touchmove\", (0, captor_1.getTouchCoords)(e, this.container));\n    };\n    return TouchCaptor;\n}(captor_1.default));\nexports.default = TouchCaptor;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.edgeLabelsToDisplayFromNodes = exports.LabelGrid = void 0;\n/**\n * Class representing a single candidate for the label grid selection.\n *\n * It also describes a deterministic way to compare two candidates to assess\n * which one is better.\n */\nvar LabelCandidate = /** @class */ (function () {\n    function LabelCandidate(key, size) {\n        this.key = key;\n        this.size = size;\n    }\n    LabelCandidate.compare = function (first, second) {\n        // First we compare by size\n        if (first.size > second.size)\n            return -1;\n        if (first.size < second.size)\n            return 1;\n        // Then since no two nodes can have the same key, we use it to\n        // deterministically tie-break by key\n        if (first.key > second.key)\n            return 1;\n        // NOTE: this comparator cannot return 0\n        return -1;\n    };\n    return LabelCandidate;\n}());\n/**\n * Class representing a 2D spatial grid divided into constant-size cells.\n */\nvar LabelGrid = /** @class */ (function () {\n    function LabelGrid() {\n        this.width = 0;\n        this.height = 0;\n        this.cellSize = 0;\n        this.columns = 0;\n        this.rows = 0;\n        this.cells = {};\n    }\n    LabelGrid.prototype.resizeAndClear = function (dimensions, cellSize) {\n        this.width = dimensions.width;\n        this.height = dimensions.height;\n        this.cellSize = cellSize;\n        this.columns = Math.ceil(dimensions.width / cellSize);\n        this.rows = Math.ceil(dimensions.height / cellSize);\n        this.cells = {};\n    };\n    LabelGrid.prototype.getIndex = function (pos) {\n        var xIndex = Math.floor(pos.x / this.cellSize);\n        var yIndex = Math.floor(pos.y / this.cellSize);\n        return yIndex * this.columns + xIndex;\n    };\n    LabelGrid.prototype.add = function (key, size, pos) {\n        var candidate = new LabelCandidate(key, size);\n        var index = this.getIndex(pos);\n        var cell = this.cells[index];\n        if (!cell) {\n            cell = [];\n            this.cells[index] = cell;\n        }\n        cell.push(candidate);\n    };\n    LabelGrid.prototype.organize = function () {\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            cell.sort(LabelCandidate.compare);\n        }\n    };\n    LabelGrid.prototype.getLabelsToDisplay = function (ratio, density) {\n        // TODO: work on visible nodes to optimize? ^ -> threshold outside so that memoization works?\n        // TODO: adjust threshold lower, but increase cells a bit?\n        // TODO: hunt for geom issue in disguise\n        // TODO: memoize while ratio does not move. method to force recompute\n        var cellArea = this.cellSize * this.cellSize;\n        var scaledCellArea = cellArea / ratio / ratio;\n        var scaledDensity = (scaledCellArea * density) / cellArea;\n        var labelsToDisplayPerCell = Math.ceil(scaledDensity);\n        var labels = [];\n        for (var k in this.cells) {\n            var cell = this.cells[k];\n            for (var i = 0; i < Math.min(labelsToDisplayPerCell, cell.length); i++) {\n                labels.push(cell[i].key);\n            }\n        }\n        return labels;\n    };\n    return LabelGrid;\n}());\nexports.LabelGrid = LabelGrid;\n/**\n * Label heuristic selecting edge labels to display, based on displayed node\n * labels\n *\n * @param  {object} params                 - Parameters:\n * @param  {Set}      displayedNodeLabels  - Currently displayed node labels.\n * @param  {Set}      highlightedNodes     - Highlighted nodes.\n * @param  {Graph}    graph                - The rendered graph.\n * @param  {string}   hoveredNode          - Hovered node (optional)\n * @return {Array}                         - The selected labels.\n */\nfunction edgeLabelsToDisplayFromNodes(params) {\n    var graph = params.graph, hoveredNode = params.hoveredNode, highlightedNodes = params.highlightedNodes, displayedNodeLabels = params.displayedNodeLabels;\n    var worthyEdges = [];\n    // TODO: the code below can be optimized using #.forEach and batching the code per adj\n    // We should display an edge's label if:\n    //   - Any of its extremities is highlighted or hovered\n    //   - Both of its extremities has its label shown\n    graph.forEachEdge(function (edge, _, source, target) {\n        if (source === hoveredNode ||\n            target === hoveredNode ||\n            highlightedNodes.has(source) ||\n            highlightedNodes.has(target) ||\n            (displayedNodeLabels.has(source) && displayedNodeLabels.has(target))) {\n            worthyEdges.push(edge);\n        }\n    });\n    return worthyEdges;\n}\nexports.edgeLabelsToDisplayFromNodes = edgeLabelsToDisplayFromNodes;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rectangleCollidesWithQuad = exports.squareCollidesWithQuad = exports.getCircumscribedAlignedRectangle = exports.isRectangleAligned = void 0;\n/**\n * Sigma.js Quad Tree Class\n * =========================\n *\n * Class implementing the quad tree data structure used to solve hovers and\n * determine which elements are currently in the scope of the camera so that\n * we don't waste time rendering things the user cannot see anyway.\n * @module\n */\n/* eslint no-nested-ternary: 0 */\n/* eslint no-constant-condition: 0 */\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\n/**\n * Notes:\n *\n *   - a square can be represented as topleft + width, saying for the quad blocks,\n *     to reduce overall memory usage (which is already pretty low).\n *   - this implementation of a quadtree is often called a MX-CIF quadtree.\n *   - we could explore spatial hashing (hilbert quadtrees, notably).\n */\n/**\n * Constants.\n *\n * Note that since we are representing a static 4-ary tree, the indices of the\n * quadrants are the following:\n *   - TOP_LEFT:     4i + b\n *   - TOP_RIGHT:    4i + 2b\n *   - BOTTOM_LEFT:  4i + 3b\n *   - BOTTOM_RIGHT: 4i + 4b\n */\nvar BLOCKS = 4;\nvar MAX_LEVEL = 5;\n// Outside block is max block index + 1, i.e.:\n// BLOCKS * ((4 * (4 ** MAX_LEVEL) - 1) / 3)\nvar OUTSIDE_BLOCK = 5460;\nvar X_OFFSET = 0;\nvar Y_OFFSET = 1;\nvar WIDTH_OFFSET = 2;\nvar HEIGHT_OFFSET = 3;\nvar TOP_LEFT = 1;\nvar TOP_RIGHT = 2;\nvar BOTTOM_LEFT = 3;\nvar BOTTOM_RIGHT = 4;\nvar hasWarnedTooMuchOutside = false;\n/**\n * Geometry helpers.\n */\n/**\n * Function returning whether the given rectangle is axis-aligned.\n *\n * @param  {Rectangle} rect\n * @return {boolean}\n */\nfunction isRectangleAligned(rect) {\n    return rect.x1 === rect.x2 || rect.y1 === rect.y2;\n}\nexports.isRectangleAligned = isRectangleAligned;\n/**\n * Function returning the smallest rectangle that contains the given rectangle, and that is aligned with the axis.\n *\n * @param {Rectangle} rect\n * @return {Rectangle}\n */\nfunction getCircumscribedAlignedRectangle(rect) {\n    var width = Math.sqrt(Math.pow(rect.x2 - rect.x1, 2) + Math.pow(rect.y2 - rect.y1, 2));\n    var heightVector = {\n        x: ((rect.y1 - rect.y2) * rect.height) / width,\n        y: ((rect.x2 - rect.x1) * rect.height) / width,\n    };\n    // Compute all corners:\n    var tl = { x: rect.x1, y: rect.y1 };\n    var tr = { x: rect.x2, y: rect.y2 };\n    var bl = {\n        x: rect.x1 + heightVector.x,\n        y: rect.y1 + heightVector.y,\n    };\n    var br = {\n        x: rect.x2 + heightVector.x,\n        y: rect.y2 + heightVector.y,\n    };\n    var xL = Math.min(tl.x, tr.x, bl.x, br.x);\n    var xR = Math.max(tl.x, tr.x, bl.x, br.x);\n    var yT = Math.min(tl.y, tr.y, bl.y, br.y);\n    var yB = Math.max(tl.y, tr.y, bl.y, br.y);\n    return {\n        x1: xL,\n        y1: yT,\n        x2: xR,\n        y2: yT,\n        height: yB - yT,\n    };\n}\nexports.getCircumscribedAlignedRectangle = getCircumscribedAlignedRectangle;\n/**\n *\n * @param x1\n * @param y1\n * @param w\n * @param qx\n * @param qy\n * @param qw\n * @param qh\n */\nfunction squareCollidesWithQuad(x1, y1, w, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + w > qy;\n}\nexports.squareCollidesWithQuad = squareCollidesWithQuad;\nfunction rectangleCollidesWithQuad(x1, y1, w, h, qx, qy, qw, qh) {\n    return x1 < qx + qw && x1 + w > qx && y1 < qy + qh && y1 + h > qy;\n}\nexports.rectangleCollidesWithQuad = rectangleCollidesWithQuad;\nfunction pointIsInQuad(x, y, qx, qy, qw, qh) {\n    var xmp = qx + qw / 2, ymp = qy + qh / 2, top = y < ymp, left = x < xmp;\n    return top ? (left ? TOP_LEFT : TOP_RIGHT) : left ? BOTTOM_LEFT : BOTTOM_RIGHT;\n}\n/**\n * Helper functions that are not bound to the class so an external user\n * cannot mess with them.\n */\nfunction buildQuadrants(maxLevel, data) {\n    // [block, level]\n    var stack = [0, 0];\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var x = data[block + X_OFFSET], y = data[block + Y_OFFSET], width = data[block + WIDTH_OFFSET], height = data[block + HEIGHT_OFFSET], hw = width / 2, hh = height / 2;\n        data[topLeftBlock + X_OFFSET] = x;\n        data[topLeftBlock + Y_OFFSET] = y;\n        data[topLeftBlock + WIDTH_OFFSET] = hw;\n        data[topLeftBlock + HEIGHT_OFFSET] = hh;\n        data[topRightBlock + X_OFFSET] = x + hw;\n        data[topRightBlock + Y_OFFSET] = y;\n        data[topRightBlock + WIDTH_OFFSET] = hw;\n        data[topRightBlock + HEIGHT_OFFSET] = hh;\n        data[bottomLeftBlock + X_OFFSET] = x;\n        data[bottomLeftBlock + Y_OFFSET] = y + hh;\n        data[bottomLeftBlock + WIDTH_OFFSET] = hw;\n        data[bottomLeftBlock + HEIGHT_OFFSET] = hh;\n        data[bottomRightBlock + X_OFFSET] = x + hw;\n        data[bottomRightBlock + Y_OFFSET] = y + hh;\n        data[bottomRightBlock + WIDTH_OFFSET] = hw;\n        data[bottomRightBlock + HEIGHT_OFFSET] = hh;\n        if (level < maxLevel - 1) {\n            stack.push(bottomRightBlock, level + 1);\n            stack.push(bottomLeftBlock, level + 1);\n            stack.push(topRightBlock, level + 1);\n            stack.push(topLeftBlock, level + 1);\n        }\n    }\n}\nfunction insertNode(maxLevel, data, containers, key, x, y, size) {\n    var x1 = x - size, y1 = y - size, w = size * 2;\n    var level = 0, block = 0;\n    while (true) {\n        // If we reached max level\n        if (level >= maxLevel) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = squareCollidesWithQuad(x1, y1, w, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = squareCollidesWithQuad(x1, y1, w, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = squareCollidesWithQuad(x1, y1, w, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = squareCollidesWithQuad(x1, y1, w, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        var collisions = [\n            collidingWithTopLeft,\n            collidingWithTopRight,\n            collidingWithBottomLeft,\n            collidingWithBottomRight,\n        ].reduce(function (acc, current) {\n            if (current)\n                return acc + 1;\n            else\n                return acc;\n        }, 0);\n        // If we have no collision at root level, inject node in the outside block\n        if (collisions === 0 && level === 0) {\n            containers[OUTSIDE_BLOCK].push(key);\n            if (!hasWarnedTooMuchOutside && containers[OUTSIDE_BLOCK].length >= 5) {\n                hasWarnedTooMuchOutside = true;\n                console.warn(\"sigma/quadtree.insertNode: At least 5 nodes are outside the global quadtree zone. \" +\n                    \"You might have a problem with the normalization function or the custom bounding box.\");\n            }\n            return;\n        }\n        // If we don't have at least a collision but deeper, there is an issue\n        if (collisions === 0)\n            throw new Error(\"sigma/quadtree.insertNode: no collision (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have 3 collisions, we have a geometry problem obviously\n        if (collisions === 3)\n            throw new Error(\"sigma/quadtree.insertNode: 3 impossible collisions (level: \".concat(level, \", key: \").concat(key, \", x: \").concat(x, \", y: \").concat(y, \", size: \").concat(size, \").\"));\n        // If we have more that one collision, we stop here and store the node\n        // in the relevant containers\n        if (collisions > 1) {\n            containers[block] = containers[block] || [];\n            containers[block].push(key);\n            return;\n        }\n        else {\n            level++;\n        }\n        // Else we recurse into the correct quads\n        if (collidingWithTopLeft)\n            block = topLeftBlock;\n        if (collidingWithTopRight)\n            block = topRightBlock;\n        if (collidingWithBottomLeft)\n            block = bottomLeftBlock;\n        if (collidingWithBottomRight)\n            block = bottomRightBlock;\n    }\n}\nfunction getNodesInAxisAlignedRectangleArea(maxLevel, data, containers, x1, y1, w, h) {\n    // [block, level]\n    var stack = [0, 0];\n    var collectedNodes = [];\n    var container;\n    while (stack.length) {\n        var level = stack.pop(), block = stack.pop();\n        // Collecting nodes\n        container = containers[block];\n        if (container)\n            (0, extend_1.default)(collectedNodes, container);\n        // If we reached max level\n        if (level >= maxLevel)\n            continue;\n        var topLeftBlock = 4 * block + BLOCKS, topRightBlock = 4 * block + 2 * BLOCKS, bottomLeftBlock = 4 * block + 3 * BLOCKS, bottomRightBlock = 4 * block + 4 * BLOCKS;\n        var collidingWithTopLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[topLeftBlock + X_OFFSET], data[topLeftBlock + Y_OFFSET], data[topLeftBlock + WIDTH_OFFSET], data[topLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithTopRight = rectangleCollidesWithQuad(x1, y1, w, h, data[topRightBlock + X_OFFSET], data[topRightBlock + Y_OFFSET], data[topRightBlock + WIDTH_OFFSET], data[topRightBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomLeft = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomLeftBlock + X_OFFSET], data[bottomLeftBlock + Y_OFFSET], data[bottomLeftBlock + WIDTH_OFFSET], data[bottomLeftBlock + HEIGHT_OFFSET]);\n        var collidingWithBottomRight = rectangleCollidesWithQuad(x1, y1, w, h, data[bottomRightBlock + X_OFFSET], data[bottomRightBlock + Y_OFFSET], data[bottomRightBlock + WIDTH_OFFSET], data[bottomRightBlock + HEIGHT_OFFSET]);\n        if (collidingWithTopLeft)\n            stack.push(topLeftBlock, level + 1);\n        if (collidingWithTopRight)\n            stack.push(topRightBlock, level + 1);\n        if (collidingWithBottomLeft)\n            stack.push(bottomLeftBlock, level + 1);\n        if (collidingWithBottomRight)\n            stack.push(bottomRightBlock, level + 1);\n    }\n    return collectedNodes;\n}\n/**\n * QuadTree class.\n *\n * @constructor\n * @param {object} boundaries - The graph boundaries.\n */\nvar QuadTree = /** @class */ (function () {\n    function QuadTree(params) {\n        var _a;\n        if (params === void 0) { params = {}; }\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        this.cache = null;\n        this.lastRectangle = null;\n        // Allocating the underlying byte array\n        var L = Math.pow(4, MAX_LEVEL);\n        this.data = new Float32Array(BLOCKS * ((4 * L - 1) / 3));\n        if (params.boundaries)\n            this.resize(params.boundaries);\n        else\n            this.resize({\n                x: 0,\n                y: 0,\n                width: 1,\n                height: 1,\n            });\n    }\n    QuadTree.prototype.add = function (key, x, y, size) {\n        insertNode(MAX_LEVEL, this.data, this.containers, key, x, y, size);\n        return this;\n    };\n    QuadTree.prototype.resize = function (boundaries) {\n        this.clear();\n        // Building the quadrants\n        this.data[X_OFFSET] = boundaries.x;\n        this.data[Y_OFFSET] = boundaries.y;\n        this.data[WIDTH_OFFSET] = boundaries.width;\n        this.data[HEIGHT_OFFSET] = boundaries.height;\n        buildQuadrants(MAX_LEVEL, this.data);\n    };\n    QuadTree.prototype.clear = function () {\n        var _a;\n        this.containers = (_a = {}, _a[OUTSIDE_BLOCK] = [], _a);\n        return this;\n    };\n    QuadTree.prototype.point = function (x, y) {\n        var nodes = this.containers[OUTSIDE_BLOCK].slice();\n        var block = 0, level = 0;\n        do {\n            if (this.containers[block])\n                (0, extend_1.default)(nodes, this.containers[block]);\n            var quad = pointIsInQuad(x, y, this.data[block + X_OFFSET], this.data[block + Y_OFFSET], this.data[block + WIDTH_OFFSET], this.data[block + HEIGHT_OFFSET]);\n            block = 4 * block + quad * BLOCKS;\n            level++;\n        } while (level <= MAX_LEVEL);\n        return nodes;\n    };\n    QuadTree.prototype.rectangle = function (x1, y1, x2, y2, height) {\n        var lr = this.lastRectangle;\n        if (lr && x1 === lr.x1 && x2 === lr.x2 && y1 === lr.y1 && y2 === lr.y2 && height === lr.height) {\n            return this.cache;\n        }\n        this.lastRectangle = {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2,\n            height: height,\n        };\n        // If the rectangle is shifted, we use the smallest aligned rectangle that contains the shifted one:\n        if (!isRectangleAligned(this.lastRectangle))\n            this.lastRectangle = getCircumscribedAlignedRectangle(this.lastRectangle);\n        this.cache = getNodesInAxisAlignedRectangleArea(MAX_LEVEL, this.data, this.containers, x1, y1, Math.abs(x1 - x2) || Math.abs(y1 - y2), height);\n        // Add all the nodes in the outside block, since they might be relevant, and since they should be very few:\n        (0, extend_1.default)(this.cache, this.containers[OUTSIDE_BLOCK]);\n        return this.cache;\n    };\n    return QuadTree;\n}());\nexports.default = QuadTree;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Sigma = exports.MouseCaptor = exports.QuadTree = exports.Camera = void 0;\n/**\n * Sigma.js Library Endpoint\n * =========================\n *\n * The library endpoint.\n * @module\n */\nvar sigma_1 = __importDefault(require(\"./sigma\"));\nexports.Sigma = sigma_1.default;\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nexports.Camera = camera_1.default;\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nexports.QuadTree = quadtree_1.default;\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nexports.MouseCaptor = mouse_1.default;\nexports.default = sigma_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawEdgeLabel(context, edgeData, sourceData, targetData, settings) {\n    var size = settings.edgeLabelSize, font = settings.edgeLabelFont, weight = settings.edgeLabelWeight, color = settings.edgeLabelColor.attribute\n        ? edgeData[settings.edgeLabelColor.attribute] || settings.edgeLabelColor.color || \"#000\"\n        : settings.edgeLabelColor.color;\n    var label = edgeData.label;\n    if (!label)\n        return;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Computing positions without considering nodes sizes:\n    var sSize = sourceData.size;\n    var tSize = targetData.size;\n    var sx = sourceData.x;\n    var sy = sourceData.y;\n    var tx = targetData.x;\n    var ty = targetData.y;\n    var cx = (sx + tx) / 2;\n    var cy = (sy + ty) / 2;\n    var dx = tx - sx;\n    var dy = ty - sy;\n    var d = Math.sqrt(dx * dx + dy * dy);\n    if (d < sSize + tSize)\n        return;\n    // Adding nodes sizes:\n    sx += (dx * sSize) / d;\n    sy += (dy * sSize) / d;\n    tx -= (dx * tSize) / d;\n    ty -= (dy * tSize) / d;\n    cx = (sx + tx) / 2;\n    cy = (sy + ty) / 2;\n    dx = tx - sx;\n    dy = ty - sy;\n    d = Math.sqrt(dx * dx + dy * dy);\n    // Handling ellipsis\n    var textLength = context.measureText(label).width;\n    if (textLength > d) {\n        var ellipsis = \"…\";\n        label = label + ellipsis;\n        textLength = context.measureText(label).width;\n        while (textLength > d && label.length > 1) {\n            label = label.slice(0, -2) + ellipsis;\n            textLength = context.measureText(label).width;\n        }\n        if (label.length < 4)\n            return;\n    }\n    var angle;\n    if (dx > 0) {\n        if (dy > 0)\n            angle = Math.acos(dx / d);\n        else\n            angle = Math.asin(dy / d);\n    }\n    else {\n        if (dy > 0)\n            angle = Math.acos(dx / d) + Math.PI;\n        else\n            angle = Math.asin(dx / d) + Math.PI / 2;\n    }\n    context.save();\n    context.translate(cx, cy);\n    context.rotate(angle);\n    context.fillText(label, -textLength / 2, edgeData.size / 2 + size);\n    context.restore();\n}\nexports.default = drawEdgeLabel;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar label_1 = __importDefault(require(\"./label\"));\n/**\n * Draw an hovered node.\n * - if there is no label => display a shadow on the node\n * - if the label box is bigger than node size => display a label box that contains the node with a shadow\n * - else node with shadow and the label box\n */\nfunction drawHover(context, data, settings) {\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    // Then we draw the label background\n    context.fillStyle = \"#FFF\";\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 8;\n    context.shadowColor = \"#000\";\n    var PADDING = 2;\n    if (typeof data.label === \"string\") {\n        var textWidth = context.measureText(data.label).width, boxWidth = Math.round(textWidth + 5), boxHeight = Math.round(size + 2 * PADDING), radius = Math.max(data.size, size / 2) + PADDING;\n        var angleRadian = Math.asin(boxHeight / 2 / radius);\n        var xDeltaCoord = Math.sqrt(Math.abs(Math.pow(radius, 2) - Math.pow(boxHeight / 2, 2)));\n        context.beginPath();\n        context.moveTo(data.x + xDeltaCoord, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y + boxHeight / 2);\n        context.lineTo(data.x + radius + boxWidth, data.y - boxHeight / 2);\n        context.lineTo(data.x + xDeltaCoord, data.y - boxHeight / 2);\n        context.arc(data.x, data.y, radius, angleRadian, -angleRadian);\n        context.closePath();\n        context.fill();\n    }\n    else {\n        context.beginPath();\n        context.arc(data.x, data.y, data.size + PADDING, 0, Math.PI * 2);\n        context.closePath();\n        context.fill();\n    }\n    context.shadowOffsetX = 0;\n    context.shadowOffsetY = 0;\n    context.shadowBlur = 0;\n    // And finally we draw the label\n    (0, label_1.default)(context, data, settings);\n}\nexports.default = drawHover;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction drawLabel(context, data, settings) {\n    if (!data.label)\n        return;\n    var size = settings.labelSize, font = settings.labelFont, weight = settings.labelWeight, color = settings.labelColor.attribute\n        ? data[settings.labelColor.attribute] || settings.labelColor.color || \"#000\"\n        : settings.labelColor.color;\n    context.fillStyle = color;\n    context.font = \"\".concat(weight, \" \").concat(size, \"px \").concat(font);\n    context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\nexports.default = drawLabel;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Edge Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Edge Program class.\n *\n * @constructor\n */\nvar AbstractEdgeProgram = /** @class */ (function (_super) {\n    __extends(AbstractEdgeProgram, _super);\n    function AbstractEdgeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n    }\n    return AbstractEdgeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\nfunction createEdgeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function EdgeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl, renderer); });\n        }\n        EdgeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        EdgeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        EdgeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        EdgeCompoundProgram.prototype.computeIndices = function () {\n            this.programs.forEach(function (program) { return program.computeIndices(); });\n        };\n        EdgeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) {\n                program.bind();\n                program.bufferData();\n                program.render(params);\n            });\n        };\n        EdgeCompoundProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(sourceData, targetData, data, hidden, offset); });\n        };\n        return EdgeCompoundProgram;\n    }());\n}\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeCompoundProgram = exports.AbstractNodeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Node Program\n * =====================================\n *\n * @module\n */\nvar program_1 = require(\"./program\");\n/**\n * Node Program class.\n *\n * @constructor\n */\nvar AbstractNodeProgram = /** @class */ (function (_super) {\n    __extends(AbstractNodeProgram, _super);\n    function AbstractNodeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        var _this = _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.sizeLocation = gl.getAttribLocation(_this.program, \"a_size\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        // Uniform Location\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var ratioLocation = gl.getUniformLocation(_this.program, \"u_ratio\");\n        if (ratioLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting ratioLocation\");\n        _this.ratioLocation = ratioLocation;\n        var scaleLocation = gl.getUniformLocation(_this.program, \"u_scale\");\n        if (scaleLocation === null)\n            throw new Error(\"AbstractNodeProgram: error while getting scaleLocation\");\n        _this.scaleLocation = scaleLocation;\n        return _this;\n    }\n    AbstractNodeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.sizeLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.sizeLocation, 1, gl.FLOAT, false, this.attributes * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, this.attributes * Float32Array.BYTES_PER_ELEMENT, 12);\n    };\n    return AbstractNodeProgram;\n}(program_1.AbstractProgram));\nexports.AbstractNodeProgram = AbstractNodeProgram;\n/**\n * Helper function combining two or more programs into a single compound one.\n * Note that this is more a quick & easy way to combine program than a really\n * performant option. More performant programs can be written entirely.\n *\n * @param  {array}    programClasses - Program classes to combine.\n * @return {function}\n */\nfunction createNodeCompoundProgram(programClasses) {\n    return /** @class */ (function () {\n        function NodeCompoundProgram(gl, renderer) {\n            this.programs = programClasses.map(function (ProgramClass) { return new ProgramClass(gl, renderer); });\n        }\n        NodeCompoundProgram.prototype.bufferData = function () {\n            this.programs.forEach(function (program) { return program.bufferData(); });\n        };\n        NodeCompoundProgram.prototype.allocate = function (capacity) {\n            this.programs.forEach(function (program) { return program.allocate(capacity); });\n        };\n        NodeCompoundProgram.prototype.bind = function () {\n            // nothing todo, it's already done in each program constructor\n        };\n        NodeCompoundProgram.prototype.render = function (params) {\n            this.programs.forEach(function (program) {\n                program.bind();\n                program.bufferData();\n                program.render(params);\n            });\n        };\n        NodeCompoundProgram.prototype.process = function (data, hidden, offset) {\n            this.programs.forEach(function (program) { return program.process(data, hidden, offset); });\n        };\n        return NodeCompoundProgram;\n    }());\n}\nexports.createNodeCompoundProgram = createNodeCompoundProgram;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractProgram = void 0;\n/**\n * Sigma.js WebGL Renderer Program\n * ================================\n *\n * Class representing a single WebGL program used by sigma's WebGL renderer.\n * @module\n */\nvar utils_1 = require(\"../../shaders/utils\");\n/**\n * Abstract Program class.\n *\n * @constructor\n */\nvar AbstractProgram = /** @class */ (function () {\n    function AbstractProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n        this.array = new Float32Array();\n        this.points = points;\n        this.attributes = attributes;\n        this.gl = gl;\n        this.vertexShaderSource = vertexShaderSource;\n        this.fragmentShaderSource = fragmentShaderSource;\n        var buffer = gl.createBuffer();\n        if (buffer === null)\n            throw new Error(\"AbstractProgram: error while creating the buffer\");\n        this.buffer = buffer;\n        gl.bindBuffer(gl.ARRAY_BUFFER, this.buffer);\n        this.vertexShader = (0, utils_1.loadVertexShader)(gl, this.vertexShaderSource);\n        this.fragmentShader = (0, utils_1.loadFragmentShader)(gl, this.fragmentShaderSource);\n        this.program = (0, utils_1.loadProgram)(gl, [this.vertexShader, this.fragmentShader]);\n    }\n    AbstractProgram.prototype.bufferData = function () {\n        var gl = this.gl;\n        gl.bufferData(gl.ARRAY_BUFFER, this.array, gl.DYNAMIC_DRAW);\n    };\n    AbstractProgram.prototype.allocate = function (capacity) {\n        this.array = new Float32Array(this.points * this.attributes * capacity);\n    };\n    AbstractProgram.prototype.hasNothingToRender = function () {\n        return this.array.length === 0;\n    };\n    return AbstractProgram;\n}());\nexports.AbstractProgram = AbstractProgram;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Arrow Program\n * ===========================================\n *\n * Compound program rendering edges as an arrow from the source to the target.\n * @module\n */\nvar edge_1 = require(\"./common/edge\");\nvar edge_arrowHead_1 = __importDefault(require(\"./edge.arrowHead\"));\nvar edge_clamped_1 = __importDefault(require(\"./edge.clamped\"));\nvar EdgeArrowProgram = (0, edge_1.createEdgeCompoundProgram)([edge_clamped_1.default, edge_arrowHead_1.default]);\nexports.default = EdgeArrowProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar edge_arrowHead_vert_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.vert.glsl.js\"));\nvar edge_arrowHead_frag_glsl_1 = __importDefault(require(\"../shaders/edge.arrowHead.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 3, ATTRIBUTES = 9, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeArrowHeadProgram = /** @class */ (function (_super) {\n    __extends(EdgeArrowHeadProgram, _super);\n    function EdgeArrowHeadProgram(gl) {\n        var _this = _super.call(this, gl, edge_arrowHead_vert_glsl_1.default, edge_arrowHead_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        _this.barycentricLocation = gl.getAttribLocation(_this.program, \"a_barycentric\");\n        // Uniform locations\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting sqrtZoomRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeArrowHeadProgram: error while getting correctionRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        _this.bind();\n        return _this;\n    }\n    EdgeArrowHeadProgram.prototype.bind = function () {\n        var gl = this.gl;\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.barycentricLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n        // TODO: maybe we can optimize here by packing this in a bit mask\n        gl.vertexAttribPointer(this.barycentricLocation, 3, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 24);\n    };\n    EdgeArrowHeadProgram.prototype.computeIndices = function () {\n        // nothing to do\n    };\n    EdgeArrowHeadProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, radius = targetData.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 1;\n        array[i++] = 0;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 1;\n        array[i++] = 0;\n        // Third point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = radius;\n        array[i++] = color;\n        array[i++] = 0;\n        array[i++] = 0;\n        array[i] = 1;\n    };\n    EdgeArrowHeadProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawArrays(gl.TRIANGLES, 0, this.array.length / ATTRIBUTES);\n    };\n    return EdgeArrowHeadProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeArrowHeadProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar edge_1 = require(\"./common/edge\");\nvar utils_1 = require(\"../../../utils\");\nvar edge_clamped_vert_glsl_1 = __importDefault(require(\"../shaders/edge.clamped.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar POINTS = 4, ATTRIBUTES = 6, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeClampedProgram = /** @class */ (function (_super) {\n    __extends(EdgeClampedProgram, _super);\n    function EdgeClampedProgram(gl) {\n        var _this = _super.call(this, gl, edge_clamped_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeClampedProgram: error while getting resolutionLocation\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations:\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        _this.radiusLocation = gl.getAttribLocation(_this.program, \"a_radius\");\n        // Uniform locations\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting cameraRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeClampedProgram: error while getting viewportRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeClampedProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.enableVertexAttribArray(this.radiusLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n        gl.vertexAttribPointer(this.radiusLocation, 1, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 20);\n    };\n    EdgeClampedProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, radius = targetData.size || 1, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i++] = 0;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        array[i++] = radius;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        array[i] = -radius;\n    };\n    EdgeClampedProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeClampedProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeClampedProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        // Binding uniforms\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeClampedProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeClampedProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sigma.js WebGL Renderer Edge Program\n * =====================================\n *\n * Program rendering edges as thick lines using four points translated\n * orthogonally from the source & target's centers by half thickness.\n *\n * Rendering two triangles by using only four points is made possible through\n * the use of indices.\n *\n * This method should be faster than the 6 points / 2 triangles approach and\n * should handle thickness better than with gl.LINES.\n *\n * This version of the shader balances geometry computation evenly between\n * the CPU & GPU (normals are computed on the CPU side).\n * @module\n */\nvar utils_1 = require(\"../../../utils\");\nvar edge_vert_glsl_1 = __importDefault(require(\"../shaders/edge.vert.glsl.js\"));\nvar edge_frag_glsl_1 = __importDefault(require(\"../shaders/edge.frag.glsl.js\"));\nvar edge_1 = require(\"./common/edge\");\nvar POINTS = 4, ATTRIBUTES = 5, STRIDE = POINTS * ATTRIBUTES;\nvar EdgeProgram = /** @class */ (function (_super) {\n    __extends(EdgeProgram, _super);\n    function EdgeProgram(gl) {\n        var _this = _super.call(this, gl, edge_vert_glsl_1.default, edge_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        // Initializing indices buffer\n        var indicesBuffer = gl.createBuffer();\n        if (indicesBuffer === null)\n            throw new Error(\"EdgeProgram: error while creating indicesBuffer\");\n        _this.indicesBuffer = indicesBuffer;\n        // Locations\n        _this.positionLocation = gl.getAttribLocation(_this.program, \"a_position\");\n        _this.colorLocation = gl.getAttribLocation(_this.program, \"a_color\");\n        _this.normalLocation = gl.getAttribLocation(_this.program, \"a_normal\");\n        var matrixLocation = gl.getUniformLocation(_this.program, \"u_matrix\");\n        if (matrixLocation === null)\n            throw new Error(\"EdgeProgram: error while getting matrixLocation\");\n        _this.matrixLocation = matrixLocation;\n        var correctionRatioLocation = gl.getUniformLocation(_this.program, \"u_correctionRatio\");\n        if (correctionRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting correctionRatioLocation\");\n        _this.correctionRatioLocation = correctionRatioLocation;\n        var sqrtZoomRatioLocation = gl.getUniformLocation(_this.program, \"u_sqrtZoomRatio\");\n        if (sqrtZoomRatioLocation === null)\n            throw new Error(\"EdgeProgram: error while getting sqrtZoomRatioLocation\");\n        _this.sqrtZoomRatioLocation = sqrtZoomRatioLocation;\n        // Enabling the OES_element_index_uint extension\n        // NOTE: on older GPUs, this means that really large graphs won't\n        // have all their edges rendered. But it seems that the\n        // `OES_element_index_uint` is quite everywhere so we'll handle\n        // the potential issue if it really arises.\n        // NOTE: when using webgl2, the extension is enabled by default\n        _this.canUse32BitsIndices = (0, utils_1.canUse32BitsIndices)(gl);\n        _this.IndicesArray = _this.canUse32BitsIndices ? Uint32Array : Uint16Array;\n        _this.indicesArray = new _this.IndicesArray();\n        _this.indicesType = _this.canUse32BitsIndices ? gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n        _this.bind();\n        return _this;\n    }\n    EdgeProgram.prototype.bind = function () {\n        var gl = this.gl;\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n        // Bindings\n        gl.enableVertexAttribArray(this.positionLocation);\n        gl.enableVertexAttribArray(this.normalLocation);\n        gl.enableVertexAttribArray(this.colorLocation);\n        gl.vertexAttribPointer(this.positionLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 0);\n        gl.vertexAttribPointer(this.normalLocation, 2, gl.FLOAT, false, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 8);\n        gl.vertexAttribPointer(this.colorLocation, 4, gl.UNSIGNED_BYTE, true, ATTRIBUTES * Float32Array.BYTES_PER_ELEMENT, 16);\n    };\n    EdgeProgram.prototype.computeIndices = function () {\n        var l = this.array.length / ATTRIBUTES;\n        var size = l + l / 2;\n        var indices = new this.IndicesArray(size);\n        for (var i = 0, c = 0; i < l; i += 4) {\n            indices[c++] = i;\n            indices[c++] = i + 1;\n            indices[c++] = i + 2;\n            indices[c++] = i + 2;\n            indices[c++] = i + 1;\n            indices[c++] = i + 3;\n        }\n        this.indicesArray = indices;\n    };\n    EdgeProgram.prototype.bufferData = function () {\n        _super.prototype.bufferData.call(this);\n        // Indices data\n        var gl = this.gl;\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indicesArray, gl.STATIC_DRAW);\n    };\n    EdgeProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        if (hidden) {\n            for (var i_1 = offset * STRIDE, l = i_1 + STRIDE; i_1 < l; i_1++)\n                this.array[i_1] = 0;\n            return;\n        }\n        var thickness = data.size || 1, x1 = sourceData.x, y1 = sourceData.y, x2 = targetData.x, y2 = targetData.y, color = (0, utils_1.floatColor)(data.color);\n        // Computing normals\n        var dx = x2 - x1, dy = y2 - y1;\n        var len = dx * dx + dy * dy, n1 = 0, n2 = 0;\n        if (len) {\n            len = 1 / Math.sqrt(len);\n            n1 = -dy * len * thickness;\n            n2 = dx * len * thickness;\n        }\n        var i = POINTS * ATTRIBUTES * offset;\n        var array = this.array;\n        // First point\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // First point flipped\n        array[i++] = x1;\n        array[i++] = y1;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i++] = color;\n        // Second point\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = n1;\n        array[i++] = n2;\n        array[i++] = color;\n        // Second point flipped\n        array[i++] = x2;\n        array[i++] = y2;\n        array[i++] = -n1;\n        array[i++] = -n2;\n        array[i] = color;\n    };\n    EdgeProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.uniform1f(this.sqrtZoomRatioLocation, Math.sqrt(params.ratio));\n        gl.uniform1f(this.correctionRatioLocation, params.correctionRatio);\n        // Drawing:\n        gl.drawElements(gl.TRIANGLES, this.indicesArray.length, this.indicesType, 0);\n    };\n    return EdgeProgram;\n}(edge_1.AbstractEdgeProgram));\nexports.default = EdgeProgram;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"../../../utils\");\nvar node_fast_vert_glsl_1 = __importDefault(require(\"../shaders/node.fast.vert.glsl.js\"));\nvar node_fast_frag_glsl_1 = __importDefault(require(\"../shaders/node.fast.frag.glsl.js\"));\nvar node_1 = require(\"./common/node\");\nvar POINTS = 1, ATTRIBUTES = 4;\nvar NodeFastProgram = /** @class */ (function (_super) {\n    __extends(NodeFastProgram, _super);\n    function NodeFastProgram(gl) {\n        var _this = _super.call(this, gl, node_fast_vert_glsl_1.default, node_fast_frag_glsl_1.default, POINTS, ATTRIBUTES) || this;\n        _this.bind();\n        return _this;\n    }\n    NodeFastProgram.prototype.process = function (data, hidden, offset) {\n        var array = this.array;\n        var i = offset * POINTS * ATTRIBUTES;\n        if (hidden) {\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            array[i++] = 0;\n            return;\n        }\n        var color = (0, utils_1.floatColor)(data.color);\n        array[i++] = data.x;\n        array[i++] = data.y;\n        array[i++] = data.size;\n        array[i] = color;\n    };\n    NodeFastProgram.prototype.render = function (params) {\n        if (this.hasNothingToRender())\n            return;\n        var gl = this.gl;\n        var program = this.program;\n        gl.useProgram(program);\n        gl.uniform1f(this.ratioLocation, 1 / Math.sqrt(params.ratio));\n        gl.uniform1f(this.scaleLocation, params.scalingRatio);\n        gl.uniformMatrix3fv(this.matrixLocation, false, params.matrix);\n        gl.drawArrays(gl.POINTS, 0, this.array.length / ATTRIBUTES);\n    };\n    return NodeFastProgram;\n}(node_1.AbstractNodeProgram));\nexports.default = NodeFastProgram;\n","(()=>{\"use strict\";var e={d:(o,r)=>{for(var t in r)e.o(r,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:r[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>r});const r=\"precision mediump float;\\n\\nvarying vec4 v_color;\\n\\nvoid main(void) {\\n  gl_FragColor = v_color;\\n}\\n\";module.exports=o})();","(()=>{\"use strict\";var a={d:(e,t)=>{for(var o in t)a.o(t,o)&&!a.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(a,e)=>Object.prototype.hasOwnProperty.call(a,e),r:a=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(a,\"__esModule\",{value:!0})}},e={};a.r(e),a.d(e,{default:()=>t});const t=\"attribute vec2 a_position;\\nattribute vec2 a_normal;\\nattribute float a_radius;\\nattribute vec4 a_color;\\nattribute vec3 a_barycentric;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadWidthLengthRatio = 0.66;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl and\\n  // edge.clamped.vert.glsl. Please read it to get better comments on what's\\n  // happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n  float adaptedWebGLNodeRadius = a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n  float adaptedWebGLArrowHeadHalfWidth = adaptedWebGLArrowHeadLength * arrowHeadWidthLengthRatio / 2.0;\\n\\n  float da = a_barycentric.x;\\n  float db = a_barycentric.y;\\n  float dc = a_barycentric.z;\\n\\n  vec2 delta = vec2(\\n      da * (adaptedWebGLNodeRadius * unitNormal.y)\\n    + db * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y + adaptedWebGLArrowHeadHalfWidth * unitNormal.x)\\n    + dc * ((adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.y - adaptedWebGLArrowHeadHalfWidth * unitNormal.x),\\n\\n      da * (-adaptedWebGLNodeRadius * unitNormal.x)\\n    + db * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x + adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n    + dc * (-(adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength) * unitNormal.x - adaptedWebGLArrowHeadHalfWidth * unitNormal.y)\\n  );\\n\\n  vec2 position = (u_matrix * vec3(a_position + delta, 1)).xy;\\n\\n  gl_Position = vec4(position, 0, 1);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=e})();","(()=>{\"use strict\";var e={d:(o,n)=>{for(var t in n)e.o(n,t)&&!e.o(o,t)&&Object.defineProperty(o,t,{enumerable:!0,get:n[t]})},o:(e,o)=>Object.prototype.hasOwnProperty.call(e,o),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},o={};e.r(o),e.d(o,{default:()=>n});const n=\"attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\nattribute float a_radius;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\nconst float arrowHeadLengthThicknessRatio = 2.5;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // These first computations are taken from edge.vert.glsl. Please read it to\\n  // get better comments on what's happening:\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here, we move the point to leave space for the arrow head:\\n  float direction = sign(a_radius);\\n  float adaptedWebGLNodeRadius = direction * a_radius * 2.0 * u_correctionRatio * u_sqrtZoomRatio;\\n  float adaptedWebGLArrowHeadLength = adaptedWebGLThickness * 2.0 * arrowHeadLengthThicknessRatio;\\n\\n  vec2 compensationVector = vec2(-direction * unitNormal.y, direction * unitNormal.x) * (adaptedWebGLNodeRadius + adaptedWebGLArrowHeadLength);\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness + compensationVector, 1)).xy, 0, 1);\\n\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=o})();","(()=>{\"use strict\";var e={d:(n,t)=>{for(var o in t)e.o(t,o)&&!e.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:t[o]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>t});const t=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float feather = 0.001;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  float dist = length(v_normal) * v_thickness;\\n\\n  float t = smoothstep(\\n    v_thickness - feather,\\n    v_thickness,\\n    dist\\n  );\\n\\n  gl_FragColor = mix(v_color, transparent, t);\\n}\\n\";module.exports=n})();","(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o='attribute vec4 a_color;\\nattribute vec2 a_normal;\\nattribute vec2 a_position;\\n\\nuniform mat3 u_matrix;\\nuniform float u_sqrtZoomRatio;\\nuniform float u_correctionRatio;\\n\\nvarying vec4 v_color;\\nvarying vec2 v_normal;\\nvarying float v_thickness;\\n\\nconst float minThickness = 1.7;\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  float normalLength = length(a_normal);\\n  vec2 unitNormal = a_normal / normalLength;\\n\\n  // We require edges to be at least `minThickness` pixels thick *on screen*\\n  // (so we need to compensate the SQRT zoom ratio):\\n  float pixelsThickness = max(normalLength, minThickness * u_sqrtZoomRatio);\\n\\n  // Then, we need to retrieve the normalized thickness of the edge in the WebGL\\n  // referential (in a ([0, 1], [0, 1]) space), using our \"magic\" correction\\n  // ratio:\\n  float webGLThickness = pixelsThickness * u_correctionRatio;\\n\\n  // Finally, we adapt the edge thickness to the \"SQRT rule\" in sigma (so that\\n  // items are not too big when zoomed in, and not too small when zoomed out).\\n  // The exact computation should be `adapted = value * zoom / sqrt(zoom)`, but\\n  // it\\'s simpler like this:\\n  float adaptedWebGLThickness = webGLThickness * u_sqrtZoomRatio;\\n\\n  // Here is the proper position of the vertex\\n  gl_Position = vec4((u_matrix * vec3(a_position + unitNormal * adaptedWebGLThickness, 1)).xy, 0, 1);\\n\\n  // For the fragment shader though, we need a thickness that takes the \"magic\"\\n  // correction ratio into account (as in webGLThickness), but so that the\\n  // antialiasing effect does not depend on the zoom level. So here\\'s yet\\n  // another thickness version:\\n  v_thickness = webGLThickness / u_sqrtZoomRatio;\\n\\n  v_normal = unitNormal;\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n';module.exports=n})();","(()=>{\"use strict\";var e={d:(n,o)=>{for(var t in o)e.o(o,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:o[t]})},o:(e,n)=>Object.prototype.hasOwnProperty.call(e,n),r:e=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})}},n={};e.r(n),e.d(n,{default:()=>o});const o=\"precision mediump float;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float radius = 0.5;\\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\\n\\nvoid main(void) {\\n  vec2 m = gl_PointCoord - vec2(0.5, 0.5);\\n  float dist = radius - length(m);\\n\\n  float t = 0.0;\\n  if (dist > v_border)\\n    t = 1.0;\\n  else if (dist > 0.0)\\n    t = dist / v_border;\\n\\n  gl_FragColor = mix(transparent, v_color, t);\\n}\\n\";module.exports=n})();","(()=>{\"use strict\";var o={d:(t,e)=>{for(var n in e)o.o(e,n)&&!o.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},o:(o,t)=>Object.prototype.hasOwnProperty.call(o,t),r:o=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(o,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(o,\"__esModule\",{value:!0})}},t={};o.r(t),o.d(t,{default:()=>e});const e=\"attribute vec2 a_position;\\nattribute float a_size;\\nattribute vec4 a_color;\\n\\nuniform float u_ratio;\\nuniform float u_scale;\\nuniform mat3 u_matrix;\\n\\nvarying vec4 v_color;\\nvarying float v_border;\\n\\nconst float bias = 255.0 / 254.0;\\n\\nvoid main() {\\n  gl_Position = vec4(\\n    (u_matrix * vec3(a_position, 1)).xy,\\n    0,\\n    1\\n  );\\n\\n  // Multiply the point size twice:\\n  //  - x SCALING_RATIO to correct the canvas scaling\\n  //  - x 2 to correct the formulae\\n  gl_PointSize = a_size * u_ratio * u_scale * 2.0;\\n\\n  v_border = (1.0 / u_ratio) * (0.5 / a_size);\\n\\n  // Extract the color:\\n  v_color = a_color;\\n  v_color.a *= bias;\\n}\\n\";module.exports=t})();","\"use strict\";\n/**\n * Sigma.js Shader Utils\n * ======================\n *\n * Code used to load sigma's shaders.\n * @module\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadProgram = exports.loadFragmentShader = exports.loadVertexShader = void 0;\n/**\n * Function used to load a shader.\n */\nfunction loadShader(type, gl, source) {\n    var glType = type === \"VERTEX\" ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\n    // Creating the shader\n    var shader = gl.createShader(glType);\n    if (shader === null) {\n        throw new Error(\"loadShader: error while creating the shader\");\n    }\n    // Loading source\n    gl.shaderSource(shader, source);\n    // Compiling the shader\n    gl.compileShader(shader);\n    // Retrieving compilation status\n    var successfullyCompiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    // Throwing if something went awry\n    if (!successfullyCompiled) {\n        var infoLog = gl.getShaderInfoLog(shader);\n        gl.deleteShader(shader);\n        throw new Error(\"loadShader: error while compiling the shader:\\n\".concat(infoLog, \"\\n\").concat(source));\n    }\n    return shader;\n}\nfunction loadVertexShader(gl, source) {\n    return loadShader(\"VERTEX\", gl, source);\n}\nexports.loadVertexShader = loadVertexShader;\nfunction loadFragmentShader(gl, source) {\n    return loadShader(\"FRAGMENT\", gl, source);\n}\nexports.loadFragmentShader = loadFragmentShader;\n/**\n * Function used to load a program.\n */\nfunction loadProgram(gl, shaders) {\n    var program = gl.createProgram();\n    if (program === null) {\n        throw new Error(\"loadProgram: error while creating the program.\");\n    }\n    var i, l;\n    // Attaching the shaders\n    for (i = 0, l = shaders.length; i < l; i++)\n        gl.attachShader(program, shaders[i]);\n    gl.linkProgram(program);\n    // Checking status\n    var successfullyLinked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!successfullyLinked) {\n        gl.deleteProgram(program);\n        throw new Error(\"loadProgram: error while linking the program.\");\n    }\n    return program;\n}\nexports.loadProgram = loadProgram;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSettings = exports.validateSettings = exports.DEFAULT_EDGE_PROGRAM_CLASSES = exports.DEFAULT_NODE_PROGRAM_CLASSES = exports.DEFAULT_SETTINGS = void 0;\nvar utils_1 = require(\"./utils\");\nvar label_1 = __importDefault(require(\"./rendering/canvas/label\"));\nvar hover_1 = __importDefault(require(\"./rendering/canvas/hover\"));\nvar edge_label_1 = __importDefault(require(\"./rendering/canvas/edge-label\"));\nvar node_fast_1 = __importDefault(require(\"./rendering/webgl/programs/node.fast\"));\nvar edge_1 = __importDefault(require(\"./rendering/webgl/programs/edge\"));\nvar edge_arrow_1 = __importDefault(require(\"./rendering/webgl/programs/edge.arrow\"));\nexports.DEFAULT_SETTINGS = {\n    // Performance\n    hideEdgesOnMove: false,\n    hideLabelsOnMove: false,\n    renderLabels: true,\n    renderEdgeLabels: false,\n    enableEdgeClickEvents: false,\n    enableEdgeWheelEvents: false,\n    enableEdgeHoverEvents: false,\n    // Component rendering\n    defaultNodeColor: \"#999\",\n    defaultNodeType: \"circle\",\n    defaultEdgeColor: \"#ccc\",\n    defaultEdgeType: \"line\",\n    labelFont: \"Arial\",\n    labelSize: 14,\n    labelWeight: \"normal\",\n    labelColor: { color: \"#000\" },\n    edgeLabelFont: \"Arial\",\n    edgeLabelSize: 14,\n    edgeLabelWeight: \"normal\",\n    edgeLabelColor: { attribute: \"color\" },\n    stagePadding: 30,\n    // Labels\n    labelDensity: 1,\n    labelGridCellSize: 100,\n    labelRenderedSizeThreshold: 6,\n    // Reducers\n    nodeReducer: null,\n    edgeReducer: null,\n    // Features\n    zIndex: false,\n    minCameraRatio: null,\n    maxCameraRatio: null,\n    // Renderers\n    labelRenderer: label_1.default,\n    hoverRenderer: hover_1.default,\n    edgeLabelRenderer: edge_label_1.default,\n    // Lifecycle\n    allowInvalidContainer: false,\n    // Program classes\n    nodeProgramClasses: {},\n    nodeHoverProgramClasses: {},\n    edgeProgramClasses: {},\n};\nexports.DEFAULT_NODE_PROGRAM_CLASSES = {\n    circle: node_fast_1.default,\n};\nexports.DEFAULT_EDGE_PROGRAM_CLASSES = {\n    arrow: edge_arrow_1.default,\n    line: edge_1.default,\n};\nfunction validateSettings(settings) {\n    if (typeof settings.labelDensity !== \"number\" || settings.labelDensity < 0) {\n        throw new Error(\"Settings: invalid `labelDensity`. Expecting a positive number.\");\n    }\n    var minCameraRatio = settings.minCameraRatio, maxCameraRatio = settings.maxCameraRatio;\n    if (typeof minCameraRatio === \"number\" && typeof maxCameraRatio === \"number\" && maxCameraRatio < minCameraRatio) {\n        throw new Error(\"Settings: invalid camera ratio boundaries. Expecting `maxCameraRatio` to be greater than `minCameraRatio`.\");\n    }\n}\nexports.validateSettings = validateSettings;\nfunction resolveSettings(settings) {\n    var resolvedSettings = (0, utils_1.assign)({}, exports.DEFAULT_SETTINGS, settings);\n    resolvedSettings.nodeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_NODE_PROGRAM_CLASSES, resolvedSettings.nodeProgramClasses);\n    resolvedSettings.edgeProgramClasses = (0, utils_1.assign)({}, exports.DEFAULT_EDGE_PROGRAM_CLASSES, resolvedSettings.edgeProgramClasses);\n    return resolvedSettings;\n}\nexports.resolveSettings = resolveSettings;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend_1 = __importDefault(require(\"@yomguithereal/helpers/extend\"));\nvar camera_1 = __importDefault(require(\"./core/camera\"));\nvar mouse_1 = __importDefault(require(\"./core/captors/mouse\"));\nvar quadtree_1 = __importDefault(require(\"./core/quadtree\"));\nvar types_1 = require(\"./types\");\nvar utils_1 = require(\"./utils\");\nvar labels_1 = require(\"./core/labels\");\nvar settings_1 = require(\"./settings\");\nvar touch_1 = __importDefault(require(\"./core/captors/touch\"));\nvar matrices_1 = require(\"./utils/matrices\");\nvar edge_collisions_1 = require(\"./utils/edge-collisions\");\n/**\n * Constants.\n */\nvar X_LABEL_MARGIN = 150;\nvar Y_LABEL_MARGIN = 50;\n/**\n * Important functions.\n */\nfunction applyNodeDefaults(settings, key, data) {\n    if (!data.hasOwnProperty(\"x\") || !data.hasOwnProperty(\"y\"))\n        throw new Error(\"Sigma: could not find a valid position (x, y) for node \\\"\".concat(key, \"\\\". All your nodes must have a number \\\"x\\\" and \\\"y\\\". Maybe your forgot to apply a layout or your \\\"nodeReducer\\\" is not returning the correct data?\"));\n    if (!data.color)\n        data.color = settings.defaultNodeColor;\n    if (!data.label && data.label !== \"\")\n        data.label = null;\n    if (data.label !== undefined && data.label !== null)\n        data.label = \"\" + data.label;\n    else\n        data.label = null;\n    if (!data.size)\n        data.size = 2;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"highlighted\"))\n        data.highlighted = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultNodeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\nfunction applyEdgeDefaults(settings, key, data) {\n    if (!data.color)\n        data.color = settings.defaultEdgeColor;\n    if (!data.label)\n        data.label = \"\";\n    if (!data.size)\n        data.size = 0.5;\n    if (!data.hasOwnProperty(\"hidden\"))\n        data.hidden = false;\n    if (!data.hasOwnProperty(\"forceLabel\"))\n        data.forceLabel = false;\n    if (!data.type || data.type === \"\")\n        data.type = settings.defaultEdgeType;\n    if (!data.zIndex)\n        data.zIndex = 0;\n    return data;\n}\n/**\n * Main class.\n *\n * @constructor\n * @param {Graph}       graph     - Graph to render.\n * @param {HTMLElement} container - DOM container in which to render.\n * @param {object}      settings  - Optional settings.\n */\nvar Sigma = /** @class */ (function (_super) {\n    __extends(Sigma, _super);\n    function Sigma(graph, container, settings) {\n        if (settings === void 0) { settings = {}; }\n        var _this = _super.call(this) || this;\n        _this.elements = {};\n        _this.canvasContexts = {};\n        _this.webGLContexts = {};\n        _this.activeListeners = {};\n        _this.quadtree = new quadtree_1.default();\n        _this.labelGrid = new labels_1.LabelGrid();\n        _this.nodeDataCache = {};\n        _this.edgeDataCache = {};\n        _this.nodesWithForcedLabels = [];\n        _this.edgesWithForcedLabels = [];\n        _this.nodeExtent = { x: [0, 1], y: [0, 1] };\n        _this.matrix = (0, matrices_1.identity)();\n        _this.invMatrix = (0, matrices_1.identity)();\n        _this.correctionRatio = 1;\n        _this.customBBox = null;\n        _this.normalizationFunction = (0, utils_1.createNormalizationFunction)({\n            x: [0, 1],\n            y: [0, 1],\n        });\n        // Cache:\n        _this.cameraSizeRatio = 1;\n        // Starting dimensions and pixel ratio\n        _this.width = 0;\n        _this.height = 0;\n        _this.pixelRatio = (0, utils_1.getPixelRatio)();\n        // State\n        _this.displayedLabels = new Set();\n        _this.highlightedNodes = new Set();\n        _this.hoveredNode = null;\n        _this.hoveredEdge = null;\n        _this.renderFrame = null;\n        _this.renderHighlightedNodesFrame = null;\n        _this.needToProcess = false;\n        _this.needToSoftProcess = false;\n        _this.checkEdgesEventsFrame = null;\n        // Programs\n        _this.nodePrograms = {};\n        _this.nodeHoverPrograms = {};\n        _this.edgePrograms = {};\n        // Resolving settings\n        _this.settings = (0, settings_1.resolveSettings)(settings);\n        // Validating\n        (0, settings_1.validateSettings)(_this.settings);\n        (0, utils_1.validateGraph)(graph);\n        if (!(container instanceof HTMLElement))\n            throw new Error(\"Sigma: container should be an html element.\");\n        // Properties\n        _this.graph = graph;\n        _this.container = container;\n        // Initializing contexts\n        _this.createWebGLContext(\"edges\", { preserveDrawingBuffer: true });\n        _this.createCanvasContext(\"edgeLabels\");\n        _this.createWebGLContext(\"nodes\");\n        _this.createCanvasContext(\"labels\");\n        _this.createCanvasContext(\"hovers\");\n        _this.createWebGLContext(\"hoverNodes\");\n        _this.createCanvasContext(\"mouse\");\n        // Blending\n        for (var key in _this.webGLContexts) {\n            var gl = _this.webGLContexts[key];\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n            gl.enable(gl.BLEND);\n        }\n        // Loading programs\n        for (var type in _this.settings.nodeProgramClasses) {\n            var NodeProgramClass = _this.settings.nodeProgramClasses[type];\n            _this.nodePrograms[type] = new NodeProgramClass(_this.webGLContexts.nodes, _this);\n            var NodeHoverProgram = NodeProgramClass;\n            if (type in _this.settings.nodeHoverProgramClasses) {\n                NodeHoverProgram = _this.settings.nodeHoverProgramClasses[type];\n            }\n            _this.nodeHoverPrograms[type] = new NodeHoverProgram(_this.webGLContexts.hoverNodes, _this);\n        }\n        for (var type in _this.settings.edgeProgramClasses) {\n            var EdgeProgramClass = _this.settings.edgeProgramClasses[type];\n            _this.edgePrograms[type] = new EdgeProgramClass(_this.webGLContexts.edges, _this);\n        }\n        // Initial resize\n        _this.resize();\n        // Initializing the camera\n        _this.camera = new camera_1.default();\n        // Binding camera events\n        _this.bindCameraHandlers();\n        // Initializing captors\n        _this.mouseCaptor = new mouse_1.default(_this.elements.mouse, _this);\n        _this.touchCaptor = new touch_1.default(_this.elements.mouse, _this);\n        // Binding event handlers\n        _this.bindEventHandlers();\n        // Binding graph handlers\n        _this.bindGraphHandlers();\n        // Trigger eventual settings-related things\n        _this.handleSettingsUpdate();\n        // Processing data for the first time & render\n        _this.process();\n        _this.render();\n        return _this;\n    }\n    /**---------------------------------------------------------------------------\n     * Internal methods.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Internal function used to create a canvas element.\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvas = function (id) {\n        var canvas = (0, utils_1.createElement)(\"canvas\", {\n            position: \"absolute\",\n        }, {\n            class: \"sigma-\".concat(id),\n        });\n        this.elements[id] = canvas;\n        this.container.appendChild(canvas);\n        return canvas;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string} id - Context's id.\n     * @return {Sigma}\n     */\n    Sigma.prototype.createCanvasContext = function (id) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = {\n            preserveDrawingBuffer: false,\n            antialias: false,\n        };\n        this.canvasContexts[id] = canvas.getContext(\"2d\", contextOptions);\n        return this;\n    };\n    /**\n     * Internal function used to create a canvas context and add the relevant\n     * DOM elements.\n     *\n     * @param  {string}  id      - Context's id.\n     * @param  {object?} options - #getContext params to override (optional)\n     * @return {Sigma}\n     */\n    Sigma.prototype.createWebGLContext = function (id, options) {\n        var canvas = this.createCanvas(id);\n        var contextOptions = __assign({ preserveDrawingBuffer: false, antialias: false }, (options || {}));\n        var context;\n        // First we try webgl2 for an easy performance boost\n        context = canvas.getContext(\"webgl2\", contextOptions);\n        // Else we fall back to webgl\n        if (!context)\n            context = canvas.getContext(\"webgl\", contextOptions);\n        // Edge, I am looking right at you...\n        if (!context)\n            context = canvas.getContext(\"experimental-webgl\", contextOptions);\n        this.webGLContexts[id] = context;\n        return this;\n    };\n    /**\n     * Method binding camera handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindCameraHandlers = function () {\n        var _this = this;\n        this.activeListeners.camera = function () {\n            _this._scheduleRefresh();\n        };\n        this.camera.on(\"updated\", this.activeListeners.camera);\n        return this;\n    };\n    /**\n     * Method that checks whether or not a node collides with a given position.\n     */\n    Sigma.prototype.mouseIsOnNode = function (_a, _b, size) {\n        var x = _a.x, y = _a.y;\n        var nodeX = _b.x, nodeY = _b.y;\n        return (x > nodeX - size &&\n            x < nodeX + size &&\n            y > nodeY - size &&\n            y < nodeY + size &&\n            Math.sqrt(Math.pow(x - nodeX, 2) + Math.pow(y - nodeY, 2)) < size);\n    };\n    /**\n     * Method that returns all nodes in quad at a given position.\n     */\n    Sigma.prototype.getQuadNodes = function (position) {\n        var mouseGraphPosition = this.viewportToFramedGraph(position);\n        return this.quadtree.point(mouseGraphPosition.x, 1 - mouseGraphPosition.y);\n    };\n    /**\n     * Method that returns the closest node to a given position.\n     */\n    Sigma.prototype.getNodeAtPosition = function (position) {\n        var x = position.x, y = position.y;\n        var quadNodes = this.getQuadNodes(position);\n        // We will hover the node whose center is closest to mouse\n        var minDistance = Infinity, nodeAtPosition = null;\n        for (var i = 0, l = quadNodes.length; i < l; i++) {\n            var node = quadNodes[i];\n            var data = this.nodeDataCache[node];\n            var nodePosition = this.framedGraphToViewport(data);\n            var size = this.scaleSize(data.size);\n            if (!data.hidden && this.mouseIsOnNode(position, nodePosition, size)) {\n                var distance = Math.sqrt(Math.pow(x - nodePosition.x, 2) + Math.pow(y - nodePosition.y, 2));\n                // TODO: sort by min size also for cases where center is the same\n                if (distance < minDistance) {\n                    minDistance = distance;\n                    nodeAtPosition = node;\n                }\n            }\n        }\n        return nodeAtPosition;\n    };\n    /**\n     * Method binding event handlers.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindEventHandlers = function () {\n        var _this = this;\n        // Handling window resize\n        this.activeListeners.handleResize = function () {\n            _this.needToSoftProcess = true;\n            _this._scheduleRefresh();\n        };\n        window.addEventListener(\"resize\", this.activeListeners.handleResize);\n        // Handling mouse move\n        this.activeListeners.handleMove = function (e) {\n            var baseEvent = {\n                event: e,\n                preventSigmaDefault: function () {\n                    e.preventSigmaDefault();\n                },\n            };\n            var nodeToHover = _this.getNodeAtPosition(e);\n            if (nodeToHover && _this.hoveredNode !== nodeToHover && !_this.nodeDataCache[nodeToHover].hidden) {\n                // Handling passing from one node to the other directly\n                if (_this.hoveredNode)\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: _this.hoveredNode }));\n                _this.hoveredNode = nodeToHover;\n                _this.emit(\"enterNode\", __assign(__assign({}, baseEvent), { node: nodeToHover }));\n                _this.scheduleHighlightedNodesRender();\n                return;\n            }\n            // Checking if the hovered node is still hovered\n            if (_this.hoveredNode) {\n                var data = _this.nodeDataCache[_this.hoveredNode];\n                var pos = _this.framedGraphToViewport(data);\n                var size = _this.scaleSize(data.size);\n                if (!_this.mouseIsOnNode(e, pos, size)) {\n                    var node = _this.hoveredNode;\n                    _this.hoveredNode = null;\n                    _this.emit(\"leaveNode\", __assign(__assign({}, baseEvent), { node: node }));\n                    _this.scheduleHighlightedNodesRender();\n                    return;\n                }\n            }\n            if (_this.settings.enableEdgeHoverEvents === true) {\n                _this.checkEdgeHoverEvents(baseEvent);\n            }\n            else if (_this.settings.enableEdgeHoverEvents === \"debounce\") {\n                if (!_this.checkEdgesEventsFrame)\n                    _this.checkEdgesEventsFrame = (0, utils_1.requestFrame)(function () {\n                        _this.checkEdgeHoverEvents(baseEvent);\n                        _this.checkEdgesEventsFrame = null;\n                    });\n            }\n        };\n        // Handling click\n        var createMouseListener = function (eventType) {\n            return function (e) {\n                var baseEvent = {\n                    event: e,\n                    preventSigmaDefault: function () {\n                        e.preventSigmaDefault();\n                    },\n                };\n                var isFakeSigmaMouseEvent = e.original.isFakeSigmaMouseEvent;\n                var nodeAtPosition = isFakeSigmaMouseEvent ? _this.getNodeAtPosition(e) : _this.hoveredNode;\n                if (nodeAtPosition)\n                    return _this.emit(\"\".concat(eventType, \"Node\"), __assign(__assign({}, baseEvent), { node: nodeAtPosition }));\n                if (eventType === \"wheel\" ? _this.settings.enableEdgeWheelEvents : _this.settings.enableEdgeClickEvents) {\n                    var edge = _this.getEdgeAtPoint(e.x, e.y);\n                    if (edge)\n                        return _this.emit(\"\".concat(eventType, \"Edge\"), __assign(__assign({}, baseEvent), { edge: edge }));\n                }\n                return _this.emit(\"\".concat(eventType, \"Stage\"), baseEvent);\n            };\n        };\n        this.activeListeners.handleClick = createMouseListener(\"click\");\n        this.activeListeners.handleRightClick = createMouseListener(\"rightClick\");\n        this.activeListeners.handleDoubleClick = createMouseListener(\"doubleClick\");\n        this.activeListeners.handleWheel = createMouseListener(\"wheel\");\n        this.activeListeners.handleDown = createMouseListener(\"down\");\n        this.mouseCaptor.on(\"mousemove\", this.activeListeners.handleMove);\n        this.mouseCaptor.on(\"click\", this.activeListeners.handleClick);\n        this.mouseCaptor.on(\"rightClick\", this.activeListeners.handleRightClick);\n        this.mouseCaptor.on(\"doubleClick\", this.activeListeners.handleDoubleClick);\n        this.mouseCaptor.on(\"wheel\", this.activeListeners.handleWheel);\n        this.mouseCaptor.on(\"mousedown\", this.activeListeners.handleDown);\n        // TODO\n        // Deal with Touch captor events\n        return this;\n    };\n    /**\n     * Method binding graph handlers\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.bindGraphHandlers = function () {\n        var _this = this;\n        var graph = this.graph;\n        this.activeListeners.graphUpdate = function () {\n            _this.needToProcess = true;\n            _this._scheduleRefresh();\n        };\n        this.activeListeners.softGraphUpdate = function () {\n            _this.needToSoftProcess = true;\n            _this._scheduleRefresh();\n        };\n        this.activeListeners.dropNodeGraphUpdate = function (e) {\n            delete _this.nodeDataCache[e.key];\n            if (_this.hoveredNode === e.key)\n                _this.hoveredNode = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.dropEdgeGraphUpdate = function (e) {\n            delete _this.edgeDataCache[e.key];\n            if (_this.hoveredEdge === e.key)\n                _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearEdgesGraphUpdate = function () {\n            _this.edgeDataCache = {};\n            _this.hoveredEdge = null;\n            _this.activeListeners.graphUpdate();\n        };\n        this.activeListeners.clearGraphUpdate = function () {\n            _this.nodeDataCache = {};\n            _this.hoveredNode = null;\n            _this.activeListeners.clearEdgesGraphUpdate();\n        };\n        graph.on(\"nodeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.on(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.on(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.on(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.on(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.on(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.on(\"cleared\", this.activeListeners.clearGraphUpdate);\n        return this;\n    };\n    /**\n     * Method used to unbind handlers from the graph.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.unbindGraphHandlers = function () {\n        var graph = this.graph;\n        graph.removeListener(\"nodeAdded\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"nodeDropped\", this.activeListeners.dropNodeGraphUpdate);\n        graph.removeListener(\"nodeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachNodeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeAdded\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgeDropped\", this.activeListeners.dropEdgeGraphUpdate);\n        graph.removeListener(\"edgeAttributesUpdated\", this.activeListeners.softGraphUpdate);\n        graph.removeListener(\"eachEdgeAttributesUpdated\", this.activeListeners.graphUpdate);\n        graph.removeListener(\"edgesCleared\", this.activeListeners.clearEdgesGraphUpdate);\n        graph.removeListener(\"cleared\", this.activeListeners.clearGraphUpdate);\n    };\n    /**\n     * Method dealing with \"leaveEdge\" and \"enterEdge\" events.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.checkEdgeHoverEvents = function (payload) {\n        var edgeToHover = this.hoveredNode ? null : this.getEdgeAtPoint(payload.event.x, payload.event.y);\n        if (edgeToHover !== this.hoveredEdge) {\n            if (this.hoveredEdge)\n                this.emit(\"leaveEdge\", __assign(__assign({}, payload), { edge: this.hoveredEdge }));\n            if (edgeToHover)\n                this.emit(\"enterEdge\", __assign(__assign({}, payload), { edge: edgeToHover }));\n            this.hoveredEdge = edgeToHover;\n        }\n        return this;\n    };\n    /**\n     * Method looking for an edge colliding with a given point at (x, y). Returns\n     * the key of the edge if any, or null else.\n     */\n    Sigma.prototype.getEdgeAtPoint = function (x, y) {\n        var e_1, _a;\n        var _this = this;\n        var _b = this, edgeDataCache = _b.edgeDataCache, nodeDataCache = _b.nodeDataCache;\n        // Check first that pixel is colored:\n        // Note that mouse positions must be corrected by pixel ratio to correctly\n        // index the drawing buffer.\n        if (!(0, edge_collisions_1.isPixelColored)(this.webGLContexts.edges, x * this.pixelRatio, y * this.pixelRatio))\n            return null;\n        // Check for each edge if it collides with the point:\n        var _c = this.viewportToGraph({ x: x, y: y }), graphX = _c.x, graphY = _c.y;\n        // To translate edge thicknesses to the graph system, we observe by how much\n        // the length of a non-null edge is transformed to between the graph system\n        // and the viewport system:\n        var transformationRatio = 0;\n        this.graph.someEdge(function (key, _, sourceId, targetId, _a, _b) {\n            var xs = _a.x, ys = _a.y;\n            var xt = _b.x, yt = _b.y;\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if (xs !== xt || ys !== yt) {\n                var graphLength = Math.sqrt(Math.pow(xt - xs, 2) + Math.pow(yt - ys, 2));\n                var _c = _this.graphToViewport({ x: xs, y: ys }), vp_xs = _c.x, vp_ys = _c.y;\n                var _d = _this.graphToViewport({ x: xt, y: yt }), vp_xt = _d.x, vp_yt = _d.y;\n                var viewportLength = Math.sqrt(Math.pow(vp_xt - vp_xs, 2) + Math.pow(vp_yt - vp_ys, 2));\n                transformationRatio = graphLength / viewportLength;\n                return true;\n            }\n        });\n        // If no non-null edge has been found, return null:\n        if (!transformationRatio)\n            return null;\n        // Now we can look for matching edges:\n        var edges = this.graph.filterEdges(function (key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) {\n            if (edgeDataCache[key].hidden || nodeDataCache[sourceId].hidden || nodeDataCache[targetId].hidden)\n                return false;\n            if ((0, edge_collisions_1.doEdgeCollideWithPoint)(graphX, graphY, sourcePosition.x, sourcePosition.y, targetPosition.x, targetPosition.y, \n            // Adapt the edge size to the zoom ratio:\n            (edgeDataCache[key].size * transformationRatio) / _this.cameraSizeRatio)) {\n                return true;\n            }\n        });\n        if (edges.length === 0)\n            return null; // no edges found\n        // if none of the edges have a zIndex, selected the most recently created one to match the rendering order\n        var selectedEdge = edges[edges.length - 1];\n        // otherwise select edge with highest zIndex\n        var highestZIndex = -Infinity;\n        try {\n            for (var edges_1 = __values(edges), edges_1_1 = edges_1.next(); !edges_1_1.done; edges_1_1 = edges_1.next()) {\n                var edge = edges_1_1.value;\n                var zIndex = this.graph.getEdgeAttribute(edge, \"zIndex\");\n                if (zIndex >= highestZIndex) {\n                    selectedEdge = edge;\n                    highestZIndex = zIndex;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (edges_1_1 && !edges_1_1.done && (_a = edges_1.return)) _a.call(edges_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return selectedEdge;\n    };\n    /**\n     * Method used to process the whole graph's data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.process = function (keepArrays) {\n        var _this = this;\n        if (keepArrays === void 0) { keepArrays = false; }\n        var graph = this.graph;\n        var settings = this.settings;\n        var dimensions = this.getDimensions();\n        var nodeZExtent = [Infinity, -Infinity];\n        var edgeZExtent = [Infinity, -Infinity];\n        // Clearing the quad\n        this.quadtree.clear();\n        // Resetting the label grid\n        // TODO: it's probably better to do this explicitly or on resizes for layout and anims\n        this.labelGrid.resizeAndClear(dimensions, settings.labelGridCellSize);\n        // Clear the highlightedNodes\n        this.highlightedNodes = new Set();\n        // Computing extents\n        this.nodeExtent = (0, utils_1.graphExtent)(graph);\n        // Resetting `forceLabel` indices\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        // NOTE: it is important to compute this matrix after computing the node's extent\n        // because #.getGraphDimensions relies on it\n        var nullCamera = new camera_1.default();\n        var nullCameraMatrix = (0, utils_1.matrixFromCamera)(nullCamera.getState(), this.getDimensions(), this.getGraphDimensions(), this.getSetting(\"stagePadding\") || 0);\n        // Rescaling function\n        this.normalizationFunction = (0, utils_1.createNormalizationFunction)(this.customBBox || this.nodeExtent);\n        var nodesPerPrograms = {};\n        var nodes = graph.nodes();\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            // Node display data resolution:\n            //   1. First we get the node's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            //   4. We apply the normalization function\n            // We shallow copy node data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getNodeAttributes(node));\n            if (settings.nodeReducer)\n                attr = settings.nodeReducer(node, attr);\n            var data = applyNodeDefaults(this.settings, node, attr);\n            nodesPerPrograms[data.type] = (nodesPerPrograms[data.type] || 0) + 1;\n            this.nodeDataCache[node] = data;\n            this.normalizationFunction.applyTo(data);\n            if (data.forceLabel)\n                this.nodesWithForcedLabels.push(node);\n            if (this.settings.zIndex) {\n                if (data.zIndex < nodeZExtent[0])\n                    nodeZExtent[0] = data.zIndex;\n                if (data.zIndex > nodeZExtent[1])\n                    nodeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.nodePrograms) {\n            if (!this.nodePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(type, \"\\\"!\"));\n            }\n            if (!keepArrays)\n                this.nodePrograms[type].allocate(nodesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            nodesPerPrograms[type] = 0;\n        }\n        // Handling node z-index\n        // TODO: z-index needs us to compute display data before hand\n        if (this.settings.zIndex && nodeZExtent[0] !== nodeZExtent[1])\n            nodes = (0, utils_1.zIndexOrdering)(nodeZExtent, function (node) { return _this.nodeDataCache[node].zIndex; }, nodes);\n        for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            var data = this.nodeDataCache[node];\n            this.quadtree.add(node, data.x, 1 - data.y, data.size / this.width);\n            if (typeof data.label === \"string\" && !data.hidden)\n                this.labelGrid.add(node, data.size, this.framedGraphToViewport(data, { matrix: nullCameraMatrix }));\n            var nodeProgram = this.nodePrograms[data.type];\n            if (!nodeProgram)\n                throw new Error(\"Sigma: could not find a suitable program for node type \\\"\".concat(data.type, \"\\\"!\"));\n            nodeProgram.process(data, data.hidden, nodesPerPrograms[data.type]++);\n            // Save the node in the highlighted set if needed\n            if (data.highlighted && !data.hidden)\n                this.highlightedNodes.add(node);\n        }\n        this.labelGrid.organize();\n        var edgesPerPrograms = {};\n        var edges = graph.edges();\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            // Edge display data resolution:\n            //   1. First we get the edge's attributes\n            //   2. We optionally reduce them using the function provided by the user\n            //      Note that this function must return a total object and won't be merged\n            //   3. We apply our defaults, while running some vital checks\n            // We shallow copy edge data to avoid dangerous behaviors from reducers\n            var attr = Object.assign({}, graph.getEdgeAttributes(edge));\n            if (settings.edgeReducer)\n                attr = settings.edgeReducer(edge, attr);\n            var data = applyEdgeDefaults(this.settings, edge, attr);\n            edgesPerPrograms[data.type] = (edgesPerPrograms[data.type] || 0) + 1;\n            this.edgeDataCache[edge] = data;\n            if (data.forceLabel && !data.hidden)\n                this.edgesWithForcedLabels.push(edge);\n            if (this.settings.zIndex) {\n                if (data.zIndex < edgeZExtent[0])\n                    edgeZExtent[0] = data.zIndex;\n                if (data.zIndex > edgeZExtent[1])\n                    edgeZExtent[1] = data.zIndex;\n            }\n        }\n        for (var type in this.edgePrograms) {\n            if (!this.edgePrograms.hasOwnProperty(type)) {\n                throw new Error(\"Sigma: could not find a suitable program for edge type \\\"\".concat(type, \"\\\"!\"));\n            }\n            if (!keepArrays)\n                this.edgePrograms[type].allocate(edgesPerPrograms[type] || 0);\n            // We reset that count here, so that we can reuse it while calling the Program#process methods:\n            edgesPerPrograms[type] = 0;\n        }\n        // Handling edge z-index\n        if (this.settings.zIndex && edgeZExtent[0] !== edgeZExtent[1])\n            edges = (0, utils_1.zIndexOrdering)(edgeZExtent, function (edge) { return _this.edgeDataCache[edge].zIndex; }, edges);\n        for (var i = 0, l = edges.length; i < l; i++) {\n            var edge = edges[i];\n            var data = this.edgeDataCache[edge];\n            var extremities = graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]];\n            var hidden = data.hidden || sourceData.hidden || targetData.hidden;\n            this.edgePrograms[data.type].process(sourceData, targetData, data, hidden, edgesPerPrograms[data.type]++);\n        }\n        for (var type in this.edgePrograms) {\n            var program = this.edgePrograms[type];\n            if (!keepArrays && typeof program.computeIndices === \"function\")\n                program.computeIndices();\n        }\n        return this;\n    };\n    /**\n     * Method that backports potential settings updates where it's needed.\n     * @private\n     */\n    Sigma.prototype.handleSettingsUpdate = function () {\n        this.camera.minRatio = this.settings.minCameraRatio;\n        this.camera.maxRatio = this.settings.maxCameraRatio;\n        this.camera.setState(this.camera.validateState(this.camera.getState()));\n        return this;\n    };\n    /**\n     * Method that decides whether to reprocess graph or not, and then render the\n     * graph.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype._refresh = function () {\n        // Do we need to process data?\n        if (this.needToProcess) {\n            this.process();\n        }\n        else if (this.needToSoftProcess) {\n            this.process(true);\n        }\n        // Resetting state\n        this.needToProcess = false;\n        this.needToSoftProcess = false;\n        // Rendering\n        this.render();\n        return this;\n    };\n    /**\n     * Method that schedules a `_refresh` call if none has been scheduled yet. It\n     * will then be processed next available frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype._scheduleRefresh = function () {\n        var _this = this;\n        if (!this.renderFrame) {\n            this.renderFrame = (0, utils_1.requestFrame)(function () {\n                _this._refresh();\n                _this.renderFrame = null;\n            });\n        }\n        return this;\n    };\n    /**\n     * Method used to render labels.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderLabels = function () {\n        if (!this.settings.renderLabels)\n            return this;\n        var cameraState = this.camera.getState();\n        // Selecting labels to draw\n        var labelsToDisplay = this.labelGrid.getLabelsToDisplay(cameraState.ratio, this.settings.labelDensity);\n        (0, extend_1.default)(labelsToDisplay, this.nodesWithForcedLabels);\n        this.displayedLabels = new Set();\n        // Drawing labels\n        var context = this.canvasContexts.labels;\n        for (var i = 0, l = labelsToDisplay.length; i < l; i++) {\n            var node = labelsToDisplay[i];\n            var data = this.nodeDataCache[node];\n            // If the node was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            // NOTE: we can do better probably\n            if (this.displayedLabels.has(node))\n                continue;\n            // If the node is hidden, we don't need to display its label obviously\n            if (data.hidden)\n                continue;\n            var _a = this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            // NOTE: we can cache the labels we need to render until the camera's ratio changes\n            var size = this.scaleSize(data.size);\n            // Is node big enough?\n            if (!data.forceLabel && size < this.settings.labelRenderedSizeThreshold)\n                continue;\n            // Is node actually on screen (with some margin)\n            // NOTE: we used to rely on the quadtree for this, but the coordinates\n            // conversion make it unreliable and at that point we already converted\n            // to viewport coordinates and since the label grid already culls the\n            // number of potential labels to display this looks like a good\n            // performance compromise.\n            // NOTE: labelGrid.getLabelsToDisplay could probably optimize by not\n            // considering cells obviously outside of the range of the current\n            // view rectangle.\n            if (x < -X_LABEL_MARGIN ||\n                x > this.width + X_LABEL_MARGIN ||\n                y < -Y_LABEL_MARGIN ||\n                y > this.height + Y_LABEL_MARGIN)\n                continue;\n            // Because displayed edge labels depend directly on actually rendered node\n            // labels, we need to only add to this.displayedLabels nodes whose label\n            // is rendered.\n            // This makes this.displayedLabels depend on viewport, which might become\n            // an issue once we start memoizing getLabelsToDisplay.\n            this.displayedLabels.add(node);\n            this.settings.labelRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), this.settings);\n        }\n        return this;\n    };\n    /**\n     * Method used to render edge labels, based on which node labels were\n     * rendered.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderEdgeLabels = function () {\n        if (!this.settings.renderEdgeLabels)\n            return this;\n        var context = this.canvasContexts.edgeLabels;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        var edgeLabelsToDisplay = (0, labels_1.edgeLabelsToDisplayFromNodes)({\n            graph: this.graph,\n            hoveredNode: this.hoveredNode,\n            displayedNodeLabels: this.displayedLabels,\n            highlightedNodes: this.highlightedNodes,\n        }).concat(this.edgesWithForcedLabels);\n        var displayedLabels = new Set();\n        for (var i = 0, l = edgeLabelsToDisplay.length; i < l; i++) {\n            var edge = edgeLabelsToDisplay[i], extremities = this.graph.extremities(edge), sourceData = this.nodeDataCache[extremities[0]], targetData = this.nodeDataCache[extremities[1]], edgeData = this.edgeDataCache[edge];\n            // If the edge was already drawn (like if it is eligible AND has\n            // `forceLabel`), we don't want to draw it again\n            if (displayedLabels.has(edge))\n                continue;\n            // If the edge is hidden we don't need to display its label\n            // NOTE: the test on sourceData & targetData is probably paranoid at this point?\n            if (edgeData.hidden || sourceData.hidden || targetData.hidden) {\n                continue;\n            }\n            this.settings.edgeLabelRenderer(context, __assign(__assign({ key: edge }, edgeData), { size: this.scaleSize(edgeData.size) }), __assign(__assign(__assign({ key: extremities[0] }, sourceData), this.framedGraphToViewport(sourceData)), { size: this.scaleSize(sourceData.size) }), __assign(__assign(__assign({ key: extremities[1] }, targetData), this.framedGraphToViewport(targetData)), { size: this.scaleSize(targetData.size) }), this.settings);\n            displayedLabels.add(edge);\n        }\n        return this;\n    };\n    /**\n     * Method used to render the highlighted nodes.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.renderHighlightedNodes = function () {\n        var _this = this;\n        var context = this.canvasContexts.hovers;\n        // Clearing\n        context.clearRect(0, 0, this.width, this.height);\n        // Rendering\n        var render = function (node) {\n            var data = _this.nodeDataCache[node];\n            var _a = _this.framedGraphToViewport(data), x = _a.x, y = _a.y;\n            var size = _this.scaleSize(data.size);\n            _this.settings.hoverRenderer(context, __assign(__assign({ key: node }, data), { size: size, x: x, y: y }), _this.settings);\n        };\n        var nodesToRender = [];\n        if (this.hoveredNode && !this.nodeDataCache[this.hoveredNode].hidden) {\n            nodesToRender.push(this.hoveredNode);\n        }\n        this.highlightedNodes.forEach(function (node) {\n            // The hovered node has already been highlighted\n            if (node !== _this.hoveredNode)\n                nodesToRender.push(node);\n        });\n        // Draw labels:\n        nodesToRender.forEach(function (node) { return render(node); });\n        // Draw WebGL nodes on top of the labels:\n        var nodesPerPrograms = {};\n        // 1. Count nodes per type:\n        nodesToRender.forEach(function (node) {\n            var type = _this.nodeDataCache[node].type;\n            nodesPerPrograms[type] = (nodesPerPrograms[type] || 0) + 1;\n        });\n        // 2. Allocate for each type for the proper number of nodes\n        for (var type in this.nodeHoverPrograms) {\n            this.nodeHoverPrograms[type].allocate(nodesPerPrograms[type] || 0);\n            // Also reset count, to use when rendering:\n            nodesPerPrograms[type] = 0;\n        }\n        // 3. Process all nodes to render:\n        nodesToRender.forEach(function (node) {\n            var data = _this.nodeDataCache[node];\n            _this.nodeHoverPrograms[data.type].process(data, data.hidden, nodesPerPrograms[data.type]++);\n        });\n        // 4. Clear hovered nodes layer:\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        // 5. Render:\n        for (var type in this.nodeHoverPrograms) {\n            var program = this.nodeHoverPrograms[type];\n            program.bind();\n            program.bufferData();\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                ratio: this.camera.ratio,\n                correctionRatio: this.correctionRatio / this.camera.ratio,\n                scalingRatio: this.pixelRatio,\n            });\n        }\n    };\n    /**\n     * Method used to schedule a hover render.\n     *\n     */\n    Sigma.prototype.scheduleHighlightedNodesRender = function () {\n        var _this = this;\n        if (this.renderHighlightedNodesFrame || this.renderFrame)\n            return;\n        this.renderHighlightedNodesFrame = (0, utils_1.requestFrame)(function () {\n            // Resetting state\n            _this.renderHighlightedNodesFrame = null;\n            // Rendering\n            _this.renderHighlightedNodes();\n            _this.renderEdgeLabels();\n        });\n    };\n    /**\n     * Method used to render.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.render = function () {\n        var _this = this;\n        this.emit(\"beforeRender\");\n        var exitRender = function () {\n            _this.emit(\"afterRender\");\n            return _this;\n        };\n        // If a render was scheduled, we cancel it\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n            this.needToProcess = false;\n            this.needToSoftProcess = false;\n        }\n        // First we need to resize\n        this.resize();\n        // Clearing the canvases\n        this.clear();\n        // Recomputing useful camera-related values:\n        this.updateCachedValues();\n        // If we have no nodes we can stop right there\n        if (!this.graph.order)\n            return exitRender();\n        // TODO: improve this heuristic or move to the captor itself?\n        // TODO: deal with the touch captor here as well\n        var mouseCaptor = this.mouseCaptor;\n        var moving = this.camera.isAnimated() ||\n            mouseCaptor.isMoving ||\n            mouseCaptor.draggedEvents ||\n            mouseCaptor.currentWheelDirection;\n        // Then we need to extract a matrix from the camera\n        var cameraState = this.camera.getState();\n        var viewportDimensions = this.getDimensions();\n        var graphDimensions = this.getGraphDimensions();\n        var padding = this.getSetting(\"stagePadding\") || 0;\n        this.matrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding);\n        this.invMatrix = (0, utils_1.matrixFromCamera)(cameraState, viewportDimensions, graphDimensions, padding, true);\n        this.correctionRatio = (0, utils_1.getMatrixImpact)(this.matrix, cameraState, viewportDimensions);\n        // Drawing nodes\n        for (var type in this.nodePrograms) {\n            var program = this.nodePrograms[type];\n            program.bind();\n            program.bufferData();\n            program.render({\n                matrix: this.matrix,\n                width: this.width,\n                height: this.height,\n                ratio: cameraState.ratio,\n                correctionRatio: this.correctionRatio / cameraState.ratio,\n                scalingRatio: this.pixelRatio,\n            });\n        }\n        // Drawing edges\n        if (!this.settings.hideEdgesOnMove || !moving) {\n            for (var type in this.edgePrograms) {\n                var program = this.edgePrograms[type];\n                program.bind();\n                program.bufferData();\n                program.render({\n                    matrix: this.matrix,\n                    width: this.width,\n                    height: this.height,\n                    ratio: cameraState.ratio,\n                    correctionRatio: this.correctionRatio / cameraState.ratio,\n                    scalingRatio: this.pixelRatio,\n                });\n            }\n        }\n        // Do not display labels on move per setting\n        if (this.settings.hideLabelsOnMove && moving)\n            return exitRender();\n        this.renderLabels();\n        this.renderEdgeLabels();\n        this.renderHighlightedNodes();\n        return exitRender();\n    };\n    /**\n     * Internal method used to update expensive and therefore cached values\n     * each time the camera state is updated.\n     */\n    Sigma.prototype.updateCachedValues = function () {\n        var ratio = this.camera.getState().ratio;\n        this.cameraSizeRatio = Math.sqrt(ratio);\n    };\n    /**---------------------------------------------------------------------------\n     * Public API.\n     **---------------------------------------------------------------------------\n     */\n    /**\n     * Method returning the renderer's camera.\n     *\n     * @return {Camera}\n     */\n    Sigma.prototype.getCamera = function () {\n        return this.camera;\n    };\n    /**\n     * Method returning the container DOM element.\n     *\n     * @return {HTMLElement}\n     */\n    Sigma.prototype.getContainer = function () {\n        return this.container;\n    };\n    /**\n     * Method returning the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.getGraph = function () {\n        return this.graph;\n    };\n    /**\n     * Method used to set the renderer's graph.\n     *\n     * @return {Graph}\n     */\n    Sigma.prototype.setGraph = function (graph) {\n        if (graph === this.graph)\n            return;\n        // Unbinding handlers on the current graph\n        this.unbindGraphHandlers();\n        // Clearing the graph data caches\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        // Cleaning renderer state tied to the current graph\n        this.displayedLabels.clear();\n        this.highlightedNodes.clear();\n        this.hoveredNode = null;\n        this.hoveredEdge = null;\n        this.nodesWithForcedLabels.length = 0;\n        this.edgesWithForcedLabels.length = 0;\n        if (this.checkEdgesEventsFrame !== null) {\n            (0, utils_1.cancelFrame)(this.checkEdgesEventsFrame);\n            this.checkEdgesEventsFrame = null;\n        }\n        // Installing new graph\n        this.graph = graph;\n        // Binding new handlers\n        this.bindGraphHandlers();\n        // Re-rendering now to avoid discrepancies from now to next frame\n        this.process();\n        this.render();\n    };\n    /**\n     * Method returning the mouse captor.\n     *\n     * @return {MouseCaptor}\n     */\n    Sigma.prototype.getMouseCaptor = function () {\n        return this.mouseCaptor;\n    };\n    /**\n     * Method returning the touch captor.\n     *\n     * @return {TouchCaptor}\n     */\n    Sigma.prototype.getTouchCaptor = function () {\n        return this.touchCaptor;\n    };\n    /**\n     * Method returning the current renderer's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getDimensions = function () {\n        return { width: this.width, height: this.height };\n    };\n    /**\n     * Method returning the current graph's dimensions.\n     *\n     * @return {Dimensions}\n     */\n    Sigma.prototype.getGraphDimensions = function () {\n        var extent = this.customBBox || this.nodeExtent;\n        return {\n            width: extent.x[1] - extent.x[0] || 1,\n            height: extent.y[1] - extent.y[0] || 1,\n        };\n    };\n    /**\n     * Method used to get all the sigma node attributes.\n     * It's usefull for example to get the position of a node\n     * and to get values that are set by the nodeReducer\n     *\n     * @param  {string} key - The node's key.\n     * @return {NodeDisplayData | undefined} A copy of the desired node's attribute or undefined if not found\n     */\n    Sigma.prototype.getNodeDisplayData = function (key) {\n        var node = this.nodeDataCache[key];\n        return node ? Object.assign({}, node) : undefined;\n    };\n    /**\n     * Method used to get all the sigma edge attributes.\n     * It's usefull for example to get values that are set by the edgeReducer.\n     *\n     * @param  {string} key - The edge's key.\n     * @return {EdgeDisplayData | undefined} A copy of the desired edge's attribute or undefined if not found\n     */\n    Sigma.prototype.getEdgeDisplayData = function (key) {\n        var edge = this.edgeDataCache[key];\n        return edge ? Object.assign({}, edge) : undefined;\n    };\n    /**\n     * Method returning a copy of the settings collection.\n     *\n     * @return {Settings} A copy of the settings collection.\n     */\n    Sigma.prototype.getSettings = function () {\n        return __assign({}, this.settings);\n    };\n    /**\n     * Method returning the current value for a given setting key.\n     *\n     * @param  {string} key - The setting key to get.\n     * @return {any} The value attached to this setting key or undefined if not found\n     */\n    Sigma.prototype.getSetting = function (key) {\n        return this.settings[key];\n    };\n    /**\n     * Method setting the value of a given setting key. Note that this will schedule\n     * a new render next frame.\n     *\n     * @param  {string} key - The setting key to set.\n     * @param  {any}    value - The value to set.\n     * @return {Sigma}\n     */\n    Sigma.prototype.setSetting = function (key, value) {\n        this.settings[key] = value;\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method updating the value of a given setting key using the provided function.\n     * Note that this will schedule a new render next frame.\n     *\n     * @param  {string}   key     - The setting key to set.\n     * @param  {function} updater - The update function.\n     * @return {Sigma}\n     */\n    Sigma.prototype.updateSetting = function (key, updater) {\n        this.settings[key] = updater(this.settings[key]);\n        (0, settings_1.validateSettings)(this.settings);\n        this.handleSettingsUpdate();\n        this.needToProcess = true; // TODO: some keys may work with only needToSoftProcess or even nothing\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to resize the renderer.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.resize = function () {\n        var previousWidth = this.width, previousHeight = this.height;\n        this.width = this.container.offsetWidth;\n        this.height = this.container.offsetHeight;\n        this.pixelRatio = (0, utils_1.getPixelRatio)();\n        if (this.width === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.width = 1;\n            else\n                throw new Error(\"Sigma: Container has no width. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        if (this.height === 0) {\n            if (this.settings.allowInvalidContainer)\n                this.height = 1;\n            else\n                throw new Error(\"Sigma: Container has no height. You can set the allowInvalidContainer setting to true to stop seeing this error.\");\n        }\n        // If nothing has changed, we can stop right here\n        if (previousWidth === this.width && previousHeight === this.height)\n            return this;\n        this.emit(\"resize\");\n        // Sizing dom elements\n        for (var id in this.elements) {\n            var element = this.elements[id];\n            element.style.width = this.width + \"px\";\n            element.style.height = this.height + \"px\";\n        }\n        // Sizing canvas contexts\n        for (var id in this.canvasContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            if (this.pixelRatio !== 1)\n                this.canvasContexts[id].scale(this.pixelRatio, this.pixelRatio);\n        }\n        // Sizing WebGL contexts\n        for (var id in this.webGLContexts) {\n            this.elements[id].setAttribute(\"width\", this.width * this.pixelRatio + \"px\");\n            this.elements[id].setAttribute(\"height\", this.height * this.pixelRatio + \"px\");\n            this.webGLContexts[id].viewport(0, 0, this.width * this.pixelRatio, this.height * this.pixelRatio);\n        }\n        return this;\n    };\n    /**\n     * Method used to clear all the canvases.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.clear = function () {\n        this.webGLContexts.nodes.clear(this.webGLContexts.nodes.COLOR_BUFFER_BIT);\n        this.webGLContexts.edges.clear(this.webGLContexts.edges.COLOR_BUFFER_BIT);\n        this.webGLContexts.hoverNodes.clear(this.webGLContexts.hoverNodes.COLOR_BUFFER_BIT);\n        this.canvasContexts.labels.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.hovers.clearRect(0, 0, this.width, this.height);\n        this.canvasContexts.edgeLabels.clearRect(0, 0, this.width, this.height);\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.refresh = function () {\n        this.needToProcess = true;\n        this._refresh();\n        return this;\n    };\n    /**\n     * Method used to refresh all computed data, at the next available frame.\n     * If this method has already been called this frame, then it will only render once at the next available frame.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.scheduleRefresh = function () {\n        this.needToProcess = true;\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to (un)zoom, while preserving the position of a viewport point.\n     * Used for instance to zoom \"on the mouse cursor\".\n     *\n     * @param viewportTarget\n     * @param newRatio\n     * @return {CameraState}\n     */\n    Sigma.prototype.getViewportZoomedState = function (viewportTarget, newRatio) {\n        var _a = this.camera.getState(), ratio = _a.ratio, angle = _a.angle, x = _a.x, y = _a.y;\n        // TODO: handle max zoom\n        var ratioDiff = newRatio / ratio;\n        var center = {\n            x: this.width / 2,\n            y: this.height / 2,\n        };\n        var graphMousePosition = this.viewportToFramedGraph(viewportTarget);\n        var graphCenterPosition = this.viewportToFramedGraph(center);\n        return {\n            angle: angle,\n            x: (graphMousePosition.x - graphCenterPosition.x) * (1 - ratioDiff) + x,\n            y: (graphMousePosition.y - graphCenterPosition.y) * (1 - ratioDiff) + y,\n            ratio: newRatio,\n        };\n    };\n    /**\n     * Method returning the abstract rectangle containing the graph according\n     * to the camera's state.\n     *\n     * @return {object} - The view's rectangle.\n     */\n    Sigma.prototype.viewRectangle = function () {\n        // TODO: reduce relative margin?\n        var marginX = (0 * this.width) / 8, marginY = (0 * this.height) / 8;\n        var p1 = this.viewportToFramedGraph({ x: 0 - marginX, y: 0 - marginY }), p2 = this.viewportToFramedGraph({ x: this.width + marginX, y: 0 - marginY }), h = this.viewportToFramedGraph({ x: 0, y: this.height + marginY });\n        return {\n            x1: p1.x,\n            y1: p1.y,\n            x2: p2.x,\n            y2: p2.y,\n            height: p2.y - h.y,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the framed graph system to the viewport system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.framedGraphToViewport = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !!override.graphDimensions;\n        var matrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0)\n                : this.matrix;\n        var viewportPos = (0, matrices_1.multiplyVec2)(matrix, coordinates);\n        return {\n            x: ((1 + viewportPos.x) * this.width) / 2,\n            y: ((1 - viewportPos.y) * this.height) / 2,\n        };\n    };\n    /**\n     * Method returning the coordinates of a point from the viewport system to the framed graph system. It allows\n     * overriding anything that is used to get the translation matrix, or even the matrix itself.\n     *\n     * Be careful if overriding dimensions, padding or cameraState, as the computation of the matrix is not the lightest\n     * of computations.\n     */\n    Sigma.prototype.viewportToFramedGraph = function (coordinates, override) {\n        if (override === void 0) { override = {}; }\n        var recomputeMatrix = !!override.cameraState || !!override.viewportDimensions || !override.graphDimensions;\n        var invMatrix = override.matrix\n            ? override.matrix\n            : recomputeMatrix\n                ? (0, utils_1.matrixFromCamera)(override.cameraState || this.camera.getState(), override.viewportDimensions || this.getDimensions(), override.graphDimensions || this.getGraphDimensions(), override.padding || this.getSetting(\"stagePadding\") || 0, true)\n                : this.invMatrix;\n        var res = (0, matrices_1.multiplyVec2)(invMatrix, {\n            x: (coordinates.x / this.width) * 2 - 1,\n            y: 1 - (coordinates.y / this.height) * 2,\n        });\n        if (isNaN(res.x))\n            res.x = 0;\n        if (isNaN(res.y))\n            res.y = 0;\n        return res;\n    };\n    /**\n     * Method used to translate a point's coordinates from the viewport system (pixel distance from the top-left of the\n     * stage) to the graph system (the reference system of data as they are in the given graph instance).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  viewportPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.viewportToGraph = function (viewportPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.normalizationFunction.inverse(this.viewportToFramedGraph(viewportPoint, override));\n    };\n    /**\n     * Method used to translate a point's coordinates from the graph system (the reference system of data as they are in\n     * the given graph instance) to the viewport system (pixel distance from the top-left of the stage).\n     *\n     * This method accepts an optional camera which can be useful if you need to translate coordinates\n     * based on a different view than the one being currently being displayed on screen.\n     *\n     * @param {Coordinates}                  graphPoint\n     * @param {CoordinateConversionOverride} override\n     */\n    Sigma.prototype.graphToViewport = function (graphPoint, override) {\n        if (override === void 0) { override = {}; }\n        return this.framedGraphToViewport(this.normalizationFunction(graphPoint), override);\n    };\n    /**\n     * Method returning the graph's bounding box.\n     *\n     * @return {{ x: Extent, y: Extent }}\n     */\n    Sigma.prototype.getBBox = function () {\n        return (0, utils_1.graphExtent)(this.graph);\n    };\n    /**\n     * Method returning the graph's custom bounding box, if any.\n     *\n     * @return {{ x: Extent, y: Extent } | null}\n     */\n    Sigma.prototype.getCustomBBox = function () {\n        return this.customBBox;\n    };\n    /**\n     * Method used to override the graph's bounding box with a custom one. Give `null` as the argument to stop overriding.\n     *\n     * @return {Sigma}\n     */\n    Sigma.prototype.setCustomBBox = function (customBBox) {\n        this.customBBox = customBBox;\n        this._scheduleRefresh();\n        return this;\n    };\n    /**\n     * Method used to shut the container & release event listeners.\n     *\n     * @return {undefined}\n     */\n    Sigma.prototype.kill = function () {\n        // Emitting \"kill\" events so that plugins and such can cleanup\n        this.emit(\"kill\");\n        // Releasing events\n        this.removeAllListeners();\n        // Releasing camera handlers\n        this.camera.removeListener(\"updated\", this.activeListeners.camera);\n        // Releasing DOM events & captors\n        window.removeEventListener(\"resize\", this.activeListeners.handleResize);\n        this.mouseCaptor.kill();\n        this.touchCaptor.kill();\n        // Releasing graph handlers\n        this.unbindGraphHandlers();\n        // Releasing cache & state\n        this.quadtree = new quadtree_1.default();\n        this.nodeDataCache = {};\n        this.edgeDataCache = {};\n        this.nodesWithForcedLabels = [];\n        this.edgesWithForcedLabels = [];\n        this.highlightedNodes.clear();\n        // Clearing frames\n        if (this.renderFrame) {\n            (0, utils_1.cancelFrame)(this.renderFrame);\n            this.renderFrame = null;\n        }\n        if (this.renderHighlightedNodesFrame) {\n            (0, utils_1.cancelFrame)(this.renderHighlightedNodesFrame);\n            this.renderHighlightedNodesFrame = null;\n        }\n        // Destroying canvases\n        var container = this.container;\n        while (container.firstChild)\n            container.removeChild(container.firstChild);\n    };\n    /**\n     * Method used to scale the given size according to the camera's ratio, i.e.\n     * zooming state.\n     *\n     * @param  {number} size - The size to scale (node size, edge thickness etc.).\n     * @return {number}      - The scaled size.\n     */\n    Sigma.prototype.scaleSize = function (size) {\n        return size / this.cameraSizeRatio;\n    };\n    /**\n     * Method that returns the collection of all used canvases.\n     * At the moment, the instantiated canvases are the following, and in the\n     * following order in the DOM:\n     * - `edges`\n     * - `nodes`\n     * - `edgeLabels`\n     * - `labels`\n     * - `hovers`\n     * - `hoverNodes`\n     * - `mouse`\n     *\n     * @return {PlainObject<HTMLCanvasElement>} - The collection of canvases.\n     */\n    Sigma.prototype.getCanvases = function () {\n        return __assign({}, this.elements);\n    };\n    return Sigma;\n}(types_1.TypedEventEmitter));\nexports.default = Sigma;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TypedEventEmitter = void 0;\n/**\n * Sigma.js Types\n * ===============\n *\n * Various type declarations used throughout the library.\n * @module\n */\nvar events_1 = require(\"events\");\nvar TypedEventEmitter = /** @class */ (function (_super) {\n    __extends(TypedEventEmitter, _super);\n    function TypedEventEmitter() {\n        var _this = _super.call(this) || this;\n        _this.rawEmitter = _this;\n        return _this;\n    }\n    return TypedEventEmitter;\n}(events_1.EventEmitter));\nexports.TypedEventEmitter = TypedEventEmitter;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.animateNodes = exports.ANIMATE_DEFAULTS = void 0;\nvar index_1 = require(\"./index\");\nvar easings_1 = __importDefault(require(\"./easings\"));\nexports.ANIMATE_DEFAULTS = {\n    easing: \"quadraticInOut\",\n    duration: 150,\n};\n/**\n * Function used to animate the nodes.\n */\nfunction animateNodes(graph, targets, opts, callback) {\n    var options = Object.assign({}, exports.ANIMATE_DEFAULTS, opts);\n    var easing = typeof options.easing === \"function\" ? options.easing : easings_1.default[options.easing];\n    var start = Date.now();\n    var startPositions = {};\n    for (var node in targets) {\n        var attrs = targets[node];\n        startPositions[node] = {};\n        for (var k in attrs)\n            startPositions[node][k] = graph.getNodeAttribute(node, k);\n    }\n    var frame = null;\n    var step = function () {\n        frame = null;\n        var p = (Date.now() - start) / options.duration;\n        if (p >= 1) {\n            // Animation is done\n            for (var node in targets) {\n                var attrs = targets[node];\n                // We use given values to avoid precision issues and for convenience\n                for (var k in attrs)\n                    graph.setNodeAttribute(node, k, attrs[k]);\n            }\n            if (typeof callback === \"function\")\n                callback();\n            return;\n        }\n        p = easing(p);\n        for (var node in targets) {\n            var attrs = targets[node];\n            var s = startPositions[node];\n            for (var k in attrs)\n                graph.setNodeAttribute(node, k, attrs[k] * p + s[k] * (1 - p));\n        }\n        frame = (0, index_1.requestFrame)(step);\n    };\n    step();\n    return function () {\n        if (frame)\n            (0, index_1.cancelFrame)(frame);\n    };\n}\nexports.animateNodes = animateNodes;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HTML_COLORS = void 0;\nexports.HTML_COLORS = {\n    black: \"#000000\",\n    silver: \"#C0C0C0\",\n    gray: \"#808080\",\n    grey: \"#808080\",\n    white: \"#FFFFFF\",\n    maroon: \"#800000\",\n    red: \"#FF0000\",\n    purple: \"#800080\",\n    fuchsia: \"#FF00FF\",\n    green: \"#008000\",\n    lime: \"#00FF00\",\n    olive: \"#808000\",\n    yellow: \"#FFFF00\",\n    navy: \"#000080\",\n    blue: \"#0000FF\",\n    teal: \"#008080\",\n    aqua: \"#00FFFF\",\n    darkblue: \"#00008B\",\n    mediumblue: \"#0000CD\",\n    darkgreen: \"#006400\",\n    darkcyan: \"#008B8B\",\n    deepskyblue: \"#00BFFF\",\n    darkturquoise: \"#00CED1\",\n    mediumspringgreen: \"#00FA9A\",\n    springgreen: \"#00FF7F\",\n    cyan: \"#00FFFF\",\n    midnightblue: \"#191970\",\n    dodgerblue: \"#1E90FF\",\n    lightseagreen: \"#20B2AA\",\n    forestgreen: \"#228B22\",\n    seagreen: \"#2E8B57\",\n    darkslategray: \"#2F4F4F\",\n    darkslategrey: \"#2F4F4F\",\n    limegreen: \"#32CD32\",\n    mediumseagreen: \"#3CB371\",\n    turquoise: \"#40E0D0\",\n    royalblue: \"#4169E1\",\n    steelblue: \"#4682B4\",\n    darkslateblue: \"#483D8B\",\n    mediumturquoise: \"#48D1CC\",\n    indigo: \"#4B0082\",\n    darkolivegreen: \"#556B2F\",\n    cadetblue: \"#5F9EA0\",\n    cornflowerblue: \"#6495ED\",\n    rebeccapurple: \"#663399\",\n    mediumaquamarine: \"#66CDAA\",\n    dimgray: \"#696969\",\n    dimgrey: \"#696969\",\n    slateblue: \"#6A5ACD\",\n    olivedrab: \"#6B8E23\",\n    slategray: \"#708090\",\n    slategrey: \"#708090\",\n    lightslategray: \"#778899\",\n    lightslategrey: \"#778899\",\n    mediumslateblue: \"#7B68EE\",\n    lawngreen: \"#7CFC00\",\n    chartreuse: \"#7FFF00\",\n    aquamarine: \"#7FFFD4\",\n    skyblue: \"#87CEEB\",\n    lightskyblue: \"#87CEFA\",\n    blueviolet: \"#8A2BE2\",\n    darkred: \"#8B0000\",\n    darkmagenta: \"#8B008B\",\n    saddlebrown: \"#8B4513\",\n    darkseagreen: \"#8FBC8F\",\n    lightgreen: \"#90EE90\",\n    mediumpurple: \"#9370DB\",\n    darkviolet: \"#9400D3\",\n    palegreen: \"#98FB98\",\n    darkorchid: \"#9932CC\",\n    yellowgreen: \"#9ACD32\",\n    sienna: \"#A0522D\",\n    brown: \"#A52A2A\",\n    darkgray: \"#A9A9A9\",\n    darkgrey: \"#A9A9A9\",\n    lightblue: \"#ADD8E6\",\n    greenyellow: \"#ADFF2F\",\n    paleturquoise: \"#AFEEEE\",\n    lightsteelblue: \"#B0C4DE\",\n    powderblue: \"#B0E0E6\",\n    firebrick: \"#B22222\",\n    darkgoldenrod: \"#B8860B\",\n    mediumorchid: \"#BA55D3\",\n    rosybrown: \"#BC8F8F\",\n    darkkhaki: \"#BDB76B\",\n    mediumvioletred: \"#C71585\",\n    indianred: \"#CD5C5C\",\n    peru: \"#CD853F\",\n    chocolate: \"#D2691E\",\n    tan: \"#D2B48C\",\n    lightgray: \"#D3D3D3\",\n    lightgrey: \"#D3D3D3\",\n    thistle: \"#D8BFD8\",\n    orchid: \"#DA70D6\",\n    goldenrod: \"#DAA520\",\n    palevioletred: \"#DB7093\",\n    crimson: \"#DC143C\",\n    gainsboro: \"#DCDCDC\",\n    plum: \"#DDA0DD\",\n    burlywood: \"#DEB887\",\n    lightcyan: \"#E0FFFF\",\n    lavender: \"#E6E6FA\",\n    darksalmon: \"#E9967A\",\n    violet: \"#EE82EE\",\n    palegoldenrod: \"#EEE8AA\",\n    lightcoral: \"#F08080\",\n    khaki: \"#F0E68C\",\n    aliceblue: \"#F0F8FF\",\n    honeydew: \"#F0FFF0\",\n    azure: \"#F0FFFF\",\n    sandybrown: \"#F4A460\",\n    wheat: \"#F5DEB3\",\n    beige: \"#F5F5DC\",\n    whitesmoke: \"#F5F5F5\",\n    mintcream: \"#F5FFFA\",\n    ghostwhite: \"#F8F8FF\",\n    salmon: \"#FA8072\",\n    antiquewhite: \"#FAEBD7\",\n    linen: \"#FAF0E6\",\n    lightgoldenrodyellow: \"#FAFAD2\",\n    oldlace: \"#FDF5E6\",\n    magenta: \"#FF00FF\",\n    deeppink: \"#FF1493\",\n    orangered: \"#FF4500\",\n    tomato: \"#FF6347\",\n    hotpink: \"#FF69B4\",\n    coral: \"#FF7F50\",\n    darkorange: \"#FF8C00\",\n    lightsalmon: \"#FFA07A\",\n    orange: \"#FFA500\",\n    lightpink: \"#FFB6C1\",\n    pink: \"#FFC0CB\",\n    gold: \"#FFD700\",\n    peachpuff: \"#FFDAB9\",\n    navajowhite: \"#FFDEAD\",\n    moccasin: \"#FFE4B5\",\n    bisque: \"#FFE4C4\",\n    mistyrose: \"#FFE4E1\",\n    blanchedalmond: \"#FFEBCD\",\n    papayawhip: \"#FFEFD5\",\n    lavenderblush: \"#FFF0F5\",\n    seashell: \"#FFF5EE\",\n    cornsilk: \"#FFF8DC\",\n    lemonchiffon: \"#FFFACD\",\n    floralwhite: \"#FFFAF0\",\n    snow: \"#FFFAFA\",\n    lightyellow: \"#FFFFE0\",\n    ivory: \"#FFFFF0\",\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\nvar linear = function (k) { return k; };\nexports.linear = linear;\nvar quadraticIn = function (k) { return k * k; };\nexports.quadraticIn = quadraticIn;\nvar quadraticOut = function (k) { return k * (2 - k); };\nexports.quadraticOut = quadraticOut;\nvar quadraticInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k;\n    return -0.5 * (--k * (k - 2) - 1);\n};\nexports.quadraticInOut = quadraticInOut;\nvar cubicIn = function (k) { return k * k * k; };\nexports.cubicIn = cubicIn;\nvar cubicOut = function (k) { return --k * k * k + 1; };\nexports.cubicOut = cubicOut;\nvar cubicInOut = function (k) {\n    if ((k *= 2) < 1)\n        return 0.5 * k * k * k;\n    return 0.5 * ((k -= 2) * k * k + 2);\n};\nexports.cubicInOut = cubicInOut;\nvar easings = {\n    linear: exports.linear,\n    quadraticIn: exports.quadraticIn,\n    quadraticOut: exports.quadraticOut,\n    quadraticInOut: exports.quadraticInOut,\n    cubicIn: exports.cubicIn,\n    cubicOut: exports.cubicOut,\n    cubicInOut: exports.cubicInOut,\n};\nexports.default = easings;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.doEdgeCollideWithPoint = exports.isPixelColored = void 0;\n/**\n * This helper returns true is the pixel at (x,y) in the given WebGL context is\n * colored, and false else.\n */\nfunction isPixelColored(gl, x, y) {\n    var pixels = new Uint8Array(4);\n    gl.readPixels(x, gl.drawingBufferHeight - y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n    return pixels[3] > 0;\n}\nexports.isPixelColored = isPixelColored;\n/**\n * This helper checks whether or not a point (x, y) collides with an\n * edge, connecting a source (xS, yS) to a target (xT, yT) with a thickness in\n * pixels.\n */\nfunction doEdgeCollideWithPoint(x, y, xS, yS, xT, yT, thickness) {\n    // Check first if point is out of the rectangle which opposite corners are the\n    // source and the target, rectangle we expand by `thickness` in every\n    // directions:\n    if (x < xS - thickness && x < xT - thickness)\n        return false;\n    if (y < yS - thickness && y < yT - thickness)\n        return false;\n    if (x > xS + thickness && x > xT + thickness)\n        return false;\n    if (y > yS + thickness && y > yT + thickness)\n        return false;\n    // Check actual collision now: Since we now the point is in this big rectangle\n    // we \"just\" need to check that the distance between the point and the line\n    // connecting the source and the target is less than `thickness`:\n    // https://en.wikipedia.org/wiki/Distance_from_a_point_to_a_line\n    var distance = Math.abs((xT - xS) * (yS - y) - (xS - x) * (yT - yS)) / Math.sqrt(Math.pow(xT - xS, 2) + Math.pow(yT - yS, 2));\n    return distance < thickness / 2;\n}\nexports.doEdgeCollideWithPoint = doEdgeCollideWithPoint;\n","\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateGraph = exports.canUse32BitsIndices = exports.extractPixel = exports.getMatrixImpact = exports.matrixFromCamera = exports.getCorrectionRatio = exports.floatColor = exports.floatArrayColor = exports.parseColor = exports.zIndexOrdering = exports.createNormalizationFunction = exports.graphExtent = exports.getPixelRatio = exports.createElement = exports.cancelFrame = exports.requestFrame = exports.assignDeep = exports.assign = exports.isPlainObject = void 0;\nvar is_graph_1 = __importDefault(require(\"graphology-utils/is-graph\"));\nvar matrices_1 = require(\"./matrices\");\nvar data_1 = require(\"./data\");\n/**\n * Checks whether the given value is a plain object.\n *\n * @param  {mixed}   value - Target value.\n * @return {boolean}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nfunction isPlainObject(value) {\n    return typeof value === \"object\" && value !== null && value.constructor === Object;\n}\nexports.isPlainObject = isPlainObject;\n/**\n * Helper to use Object.assign with more than two objects.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assign(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        Object.assign(target, o);\n    }\n    return target;\n}\nexports.assign = assign;\n/**\n * Very simple recursive Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nfunction assignDeep(target) {\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    target = target || {};\n    for (var i = 0, l = objects.length; i < l; i++) {\n        var o = objects[i];\n        if (!o)\n            continue;\n        for (var k in o) {\n            if (isPlainObject(o[k])) {\n                target[k] = assignDeep(target[k], o[k]);\n            }\n            else {\n                target[k] = o[k];\n            }\n        }\n    }\n    return target;\n}\nexports.assignDeep = assignDeep;\n/**\n * Just some dirty trick to make requestAnimationFrame and cancelAnimationFrame \"work\" in Node.js, for unit tests:\n */\nexports.requestFrame = typeof requestAnimationFrame !== \"undefined\"\n    ? function (callback) { return requestAnimationFrame(callback); }\n    : function (callback) { return setTimeout(callback, 0); };\nexports.cancelFrame = typeof cancelAnimationFrame !== \"undefined\"\n    ? function (requestID) { return cancelAnimationFrame(requestID); }\n    : function (requestID) { return clearTimeout(requestID); };\n/**\n * Function used to create DOM elements easily.\n *\n * @param  {string} tag        - Tag name of the element to create.\n * @param  {object} style      - Styles map.\n * @param  {object} attributes - Attributes map.\n * @return {HTMLElement}\n */\nfunction createElement(tag, style, attributes) {\n    var element = document.createElement(tag);\n    if (style) {\n        for (var k in style) {\n            element.style[k] = style[k];\n        }\n    }\n    if (attributes) {\n        for (var k in attributes) {\n            element.setAttribute(k, attributes[k]);\n        }\n    }\n    return element;\n}\nexports.createElement = createElement;\n/**\n * Function returning the browser's pixel ratio.\n *\n * @return {number}\n */\nfunction getPixelRatio() {\n    if (typeof window.devicePixelRatio !== \"undefined\")\n        return window.devicePixelRatio;\n    return 1;\n}\nexports.getPixelRatio = getPixelRatio;\n/**\n * Function returning the graph's node extent in x & y.\n *\n * @param  {Graph}\n * @return {object}\n */\nfunction graphExtent(graph) {\n    if (!graph.order)\n        return { x: [0, 1], y: [0, 1] };\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n    graph.forEachNode(function (_, attr) {\n        var x = attr.x, y = attr.y;\n        if (x < xMin)\n            xMin = x;\n        if (x > xMax)\n            xMax = x;\n        if (y < yMin)\n            yMin = y;\n        if (y > yMax)\n            yMax = y;\n    });\n    return { x: [xMin, xMax], y: [yMin, yMax] };\n}\nexports.graphExtent = graphExtent;\nfunction createNormalizationFunction(extent) {\n    var _a = __read(extent.x, 2), minX = _a[0], maxX = _a[1], _b = __read(extent.y, 2), minY = _b[0], maxY = _b[1];\n    var ratio = Math.max(maxX - minX, maxY - minY), dX = (maxX + minX) / 2, dY = (maxY + minY) / 2;\n    if (ratio === 0 || Math.abs(ratio) === Infinity || isNaN(ratio))\n        ratio = 1;\n    if (isNaN(dX))\n        dX = 0;\n    if (isNaN(dY))\n        dY = 0;\n    var fn = function (data) {\n        return {\n            x: 0.5 + (data.x - dX) / ratio,\n            y: 0.5 + (data.y - dY) / ratio,\n        };\n    };\n    // TODO: possibility to apply this in batch over array of indices\n    fn.applyTo = function (data) {\n        data.x = 0.5 + (data.x - dX) / ratio;\n        data.y = 0.5 + (data.y - dY) / ratio;\n    };\n    fn.inverse = function (data) {\n        return {\n            x: dX + ratio * (data.x - 0.5),\n            y: dY + ratio * (data.y - 0.5),\n        };\n    };\n    fn.ratio = ratio;\n    return fn;\n}\nexports.createNormalizationFunction = createNormalizationFunction;\n/**\n * Function ordering the given elements in reverse z-order so they drawn\n * the correct way.\n *\n * @param  {number}   extent   - [min, max] z values.\n * @param  {function} getter   - Z attribute getter function.\n * @param  {array}    elements - The array to sort.\n * @return {array} - The sorted array.\n */\nfunction zIndexOrdering(extent, getter, elements) {\n    // If k is > n, we'll use a standard sort\n    return elements.sort(function (a, b) {\n        var zA = getter(a) || 0, zB = getter(b) || 0;\n        if (zA < zB)\n            return -1;\n        if (zA > zB)\n            return 1;\n        return 0;\n    });\n    // TODO: counting sort optimization\n}\nexports.zIndexOrdering = zIndexOrdering;\n/**\n * WebGL utils\n * ===========\n */\n/**\n * Memoized function returning a float-encoded color from various string\n * formats describing colors.\n */\nvar INT8 = new Int8Array(4);\nvar INT32 = new Int32Array(INT8.buffer, 0, 1);\nvar FLOAT32 = new Float32Array(INT8.buffer, 0, 1);\nvar RGBA_TEST_REGEX = /^\\s*rgba?\\s*\\(/;\nvar RGBA_EXTRACT_REGEX = /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)(?:\\s*,\\s*(.*)?)?\\)\\s*$/;\nfunction parseColor(val) {\n    var r = 0; // byte\n    var g = 0; // byte\n    var b = 0; // byte\n    var a = 1; // float\n    // Handling hexadecimal notation\n    if (val[0] === \"#\") {\n        if (val.length === 4) {\n            r = parseInt(val.charAt(1) + val.charAt(1), 16);\n            g = parseInt(val.charAt(2) + val.charAt(2), 16);\n            b = parseInt(val.charAt(3) + val.charAt(3), 16);\n        }\n        else {\n            r = parseInt(val.charAt(1) + val.charAt(2), 16);\n            g = parseInt(val.charAt(3) + val.charAt(4), 16);\n            b = parseInt(val.charAt(5) + val.charAt(6), 16);\n        }\n        if (val.length === 9) {\n            a = parseInt(val.charAt(7) + val.charAt(8), 16) / 255;\n        }\n    }\n    // Handling rgb notation\n    else if (RGBA_TEST_REGEX.test(val)) {\n        var match = val.match(RGBA_EXTRACT_REGEX);\n        if (match) {\n            r = +match[1];\n            g = +match[2];\n            b = +match[3];\n            if (match[4])\n                a = +match[4];\n        }\n    }\n    return { r: r, g: g, b: b, a: a };\n}\nexports.parseColor = parseColor;\nvar FLOAT_COLOR_CACHE = {};\nfor (var htmlColor in data_1.HTML_COLORS) {\n    FLOAT_COLOR_CACHE[htmlColor] = floatColor(data_1.HTML_COLORS[htmlColor]);\n    // Replicating cache for hex values for free\n    FLOAT_COLOR_CACHE[data_1.HTML_COLORS[htmlColor]] = FLOAT_COLOR_CACHE[htmlColor];\n}\nfunction floatArrayColor(val) {\n    val = data_1.HTML_COLORS[val] || val;\n    // NOTE: this variant is not cached because it is mostly used for uniforms\n    var _a = parseColor(val), r = _a.r, g = _a.g, b = _a.b, a = _a.a;\n    return new Float32Array([r / 255, g / 255, b / 255, a]);\n}\nexports.floatArrayColor = floatArrayColor;\nfunction floatColor(val) {\n    // If the color is already computed, we yield it\n    if (typeof FLOAT_COLOR_CACHE[val] !== \"undefined\")\n        return FLOAT_COLOR_CACHE[val];\n    var parsed = parseColor(val);\n    var r = parsed.r, g = parsed.g, b = parsed.b;\n    var a = parsed.a;\n    a = (a * 255) | 0;\n    INT32[0] = ((a << 24) | (b << 16) | (g << 8) | r) & 0xfeffffff;\n    var color = FLOAT32[0];\n    FLOAT_COLOR_CACHE[val] = color;\n    return color;\n}\nexports.floatColor = floatColor;\n/**\n * In sigma, the graph is normalized into a [0, 1], [0, 1] square, before being given to the various renderers. This\n * helps dealing with quadtree in particular.\n * But at some point, we need to rescale it so that it takes the best place in the screen, ie. we always want to see two\n * nodes \"touching\" opposite sides of the graph, with the camera being at its default state.\n *\n * This function determines this ratio.\n */\nfunction getCorrectionRatio(viewportDimensions, graphDimensions) {\n    var viewportRatio = viewportDimensions.height / viewportDimensions.width;\n    var graphRatio = graphDimensions.height / graphDimensions.width;\n    // If the stage and the graphs are in different directions (such as the graph being wider that tall while the stage\n    // is taller than wide), we can stop here to have indeed nodes touching opposite sides:\n    if ((viewportRatio < 1 && graphRatio > 1) || (viewportRatio > 1 && graphRatio < 1)) {\n        return 1;\n    }\n    // Else, we need to fit the graph inside the stage:\n    // 1. If the graph is \"squarer\" (ie. with a ratio closer to 1), we need to make the largest sides touch;\n    // 2. If the stage is \"squarer\", we need to make the smallest sides touch.\n    return Math.min(Math.max(graphRatio, 1 / graphRatio), Math.max(1 / viewportRatio, viewportRatio));\n}\nexports.getCorrectionRatio = getCorrectionRatio;\n/**\n * Function returning a matrix from the current state of the camera.\n */\n// TODO: it's possible to optimize this drastically!\nfunction matrixFromCamera(state, viewportDimensions, graphDimensions, padding, inverse) {\n    var angle = state.angle, ratio = state.ratio, x = state.x, y = state.y;\n    var width = viewportDimensions.width, height = viewportDimensions.height;\n    var matrix = (0, matrices_1.identity)();\n    var smallestDimension = Math.min(width, height) - 2 * padding;\n    var correctionRatio = getCorrectionRatio(viewportDimensions, graphDimensions);\n    if (!inverse) {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 2 * (smallestDimension / width) * correctionRatio, 2 * (smallestDimension / height) * correctionRatio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), -angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), 1 / ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), -x, -y));\n    }\n    else {\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.translate)((0, matrices_1.identity)(), x, y));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), ratio));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.rotate)((0, matrices_1.identity)(), angle));\n        (0, matrices_1.multiply)(matrix, (0, matrices_1.scale)((0, matrices_1.identity)(), width / smallestDimension / 2 / correctionRatio, height / smallestDimension / 2 / correctionRatio));\n    }\n    return matrix;\n}\nexports.matrixFromCamera = matrixFromCamera;\n/**\n * All these transformations we apply on the matrix to get it rescale the graph\n * as we want make it very hard to get pixel-perfect distances in WebGL. This\n * function returns a factor that properly cancels the matrix effect on lengths.\n *\n * [jacomyal]\n * To be fully honest, I can't really explain happens here... I notice that the\n * following ratio works (ie. it correctly compensates the matrix impact on all\n * camera states I could try):\n * > `R = size(V) / size(M * V) / W`\n * as long as `M * V` is in the direction of W (ie. parallel to (Ox)). It works\n * as well with H and a vector that transforms into something parallel to (Oy).\n *\n * Also, note that we use `angle` and not `-angle` (that would seem logical,\n * since we want to anticipate the rotation), because of the fact that in WebGL,\n * the image is vertically swapped.\n */\nfunction getMatrixImpact(matrix, cameraState, viewportDimensions) {\n    var _a = (0, matrices_1.multiplyVec2)(matrix, { x: Math.cos(cameraState.angle), y: Math.sin(cameraState.angle) }, 0), x = _a.x, y = _a.y;\n    return 1 / Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2)) / viewportDimensions.width;\n}\nexports.getMatrixImpact = getMatrixImpact;\n/**\n * Function extracting the color at the given pixel.\n */\nfunction extractPixel(gl, x, y, array) {\n    var data = array || new Uint8Array(4);\n    gl.readPixels(x, y, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    return data;\n}\nexports.extractPixel = extractPixel;\n/**\n * Function used to know whether given webgl context can use 32 bits indices.\n */\nfunction canUse32BitsIndices(gl) {\n    var webgl2 = typeof WebGL2RenderingContext !== \"undefined\" && gl instanceof WebGL2RenderingContext;\n    return webgl2 || !!gl.getExtension(\"OES_element_index_uint\");\n}\nexports.canUse32BitsIndices = canUse32BitsIndices;\n/**\n * Check if the graph variable is a valid graph, and if sigma can render it.\n */\nfunction validateGraph(graph) {\n    // check if it's a valid graphology instance\n    if (!(0, is_graph_1.default)(graph))\n        throw new Error(\"Sigma: invalid graph instance.\");\n    // check if nodes have x/y attributes\n    graph.forEachNode(function (key, attributes) {\n        if (!Number.isFinite(attributes.x) || !Number.isFinite(attributes.y)) {\n            throw new Error(\"Sigma: Coordinates of node \".concat(key, \" are invalid. A node must have a numeric 'x' and 'y' attribute.\"));\n        }\n    });\n}\nexports.validateGraph = validateGraph;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.multiplyVec2 = exports.multiply = exports.translate = exports.rotate = exports.scale = exports.identity = void 0;\nfunction identity() {\n    return Float32Array.of(1, 0, 0, 0, 1, 0, 0, 0, 1);\n}\nexports.identity = identity;\n// TODO: optimize\nfunction scale(m, x, y) {\n    m[0] = x;\n    m[4] = typeof y === \"number\" ? y : x;\n    return m;\n}\nexports.scale = scale;\nfunction rotate(m, r) {\n    var s = Math.sin(r), c = Math.cos(r);\n    m[0] = c;\n    m[1] = s;\n    m[3] = -s;\n    m[4] = c;\n    return m;\n}\nexports.rotate = rotate;\nfunction translate(m, x, y) {\n    m[6] = x;\n    m[7] = y;\n    return m;\n}\nexports.translate = translate;\nfunction multiply(a, b) {\n    var a00 = a[0], a01 = a[1], a02 = a[2];\n    var a10 = a[3], a11 = a[4], a12 = a[5];\n    var a20 = a[6], a21 = a[7], a22 = a[8];\n    var b00 = b[0], b01 = b[1], b02 = b[2];\n    var b10 = b[3], b11 = b[4], b12 = b[5];\n    var b20 = b[6], b21 = b[7], b22 = b[8];\n    a[0] = b00 * a00 + b01 * a10 + b02 * a20;\n    a[1] = b00 * a01 + b01 * a11 + b02 * a21;\n    a[2] = b00 * a02 + b01 * a12 + b02 * a22;\n    a[3] = b10 * a00 + b11 * a10 + b12 * a20;\n    a[4] = b10 * a01 + b11 * a11 + b12 * a21;\n    a[5] = b10 * a02 + b11 * a12 + b12 * a22;\n    a[6] = b20 * a00 + b21 * a10 + b22 * a20;\n    a[7] = b20 * a01 + b21 * a11 + b22 * a21;\n    a[8] = b20 * a02 + b21 * a12 + b22 * a22;\n    return a;\n}\nexports.multiply = multiply;\nfunction multiplyVec2(a, b, z) {\n    if (z === void 0) { z = 1; }\n    var a00 = a[0];\n    var a01 = a[1];\n    var a10 = a[3];\n    var a11 = a[4];\n    var a20 = a[6];\n    var a21 = a[7];\n    var b0 = b.x;\n    var b1 = b.y;\n    return { x: b0 * a00 + b1 * a10 + a20 * z, y: b0 * a01 + b1 * a11 + a21 * z };\n}\nexports.multiplyVec2 = multiplyVec2;\n"],"names":["module","exports","array","values","l2","length","l1","i","ReflectOwnKeys","R","Reflect","ReflectApply","apply","target","receiver","args","Function","prototype","call","ProcessEmitWarning","warning","console","warn","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","NumberIsNaN","Number","isNaN","value","EventEmitter","init","this","once","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","_getMaxListeners","that","_addListener","type","prepend","m","events","existing","create","newListener","emit","unshift","push","warned","w","Error","String","name","emitter","count","onceWrapper","fired","removeListener","wrapFn","arguments","_onceWrap","state","wrapped","bind","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","listenerCount","arr","n","copy","Array","spliceOne","list","index","pop","ret","Promise","resolve","reject","errorListener","err","resolver","slice","eventTargetAgnosticAddListener","addErrorHandlerIfEventEmitter","handler","flags","on","addEventListener","wrapListener","arg","removeEventListener","defineProperty","enumerable","get","set","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","error","er","message","context","len","listeners","addListener","prependListener","prependOnceListener","position","originalListener","shift","off","removeAllListeners","key","keys","rawListeners","eventNames","addUndirectedEdgeWithKey","dropNode","multi","assign","l","k","getMatchingEdge","graph","source","sourceData","_nodes","edge","out","undirected","isPlainObject","_typeof","constructor","isEmpty","o","privateProperty","configurable","writable","readOnlyProperty","descriptor","validateHints","hints","attributes","isArray","eventsModule","Iterator","next","Symbol","iterator","Iterator$2","of","done","empty","fromSequence","sequence","is","support","ArrayBuffer","require$$0","require$$1","ARRAY_BUFFER_SUPPORT","SYMBOL_SUPPORT","isView","iter","take","iterable","step","Infinity","GraphError","_this","_Error","_inheritsLoose","_wrapNativeSuper","InvalidArgumentsGraphError","_this2","captureStackTrace","NotFoundGraphError","_this3","UsageGraphError","_this4","MixedNodeData","clear","DirectedNodeData","UndirectedNodeData","EdgeData","findRelevantNodeData","method","mode","nodeOrEdge","nameOrEdge","add1","add2","nodeData","edgeData","arg1","arg2","_edges","inDegree","outDegree","undirectedDegree","undirectedLoops","directedLoops","in","attach","outKey","inKey","attachMulti","adj","head","previous","detach","detachMulti","NODE_ATTRIBUTES_METHODS","element","attacher","Class","data","_findRelevantNodeData","_findRelevantNodeData3","hasOwnProperty","_findRelevantNodeData4","_findRelevantNodeData5","updater","_findRelevantNodeData6","_findRelevantNodeData7","_findRelevantNodeData8","_findRelevantNodeData9","EDGE_ATTRIBUTES_METHODS","chain","iterables","current","EDGES_ITERATION","direction","forEachSimple","breakable","object","callback","avoid","shouldBreak","forEachMulti","createIterator","sourceAttributes","targetAttributes","forEachForKeySimple","targetData","forEachForKeyMulti","createIteratorForKey","createEdgeArray","size","from","undirectedSize","directedSize","mask","forEachEdge","shouldFilter","createEdgeIterator","forEachEdgeForNode","found","fn","createEdgeArrayForNode","edges","createEdgeIteratorForNode","forEachEdgeForPath","createEdgeArrayForPath","createEdgeIteratorForPath","NEIGHBORS_ITERATION","CompositeSetWrapper","A","B","forEachInObjectOnce","visited","neighborData","has","forEachNeighbor","wrap","createDedupedObjectIterator","neighbor","attachNeighborArrayCreator","description","node","neighbors","attachNeighborIteratorCreator","iteratorName","forEachAdjacency","assymetric","disconnectedNodes","hasEdges","validateSerializedNode","validateSerializedEdge","INSTANCE_ID","Math","floor","random","TYPES","Set","EMITTER_PROPS","DEFAULTS","allowSelfLoops","unsafeAddNode","NodeDataClass","addEdge","mustGenerateKey","eventData","_edgeKeyGenerator","isSelfLoop","_undirectedSelfLoopCount","_directedSelfLoopCount","_undirectedSize","_directedSize","mergeEdge","asUpdater","alreadyExistingEdgeData","info","oldAttributes","sourceWasAdded","targetWasAdded","dropEdgeFromData","delete","Graph","options","_EventEmitter","_assertThisInitialized","instancePrefix","edgeId","Map","availableEdgeKey","forEach","prop","_options","_proto","_resetInstanceCounters","hasNode","hasDirectedEdge","hasUndirectedEdge","hasEdge","directedEdge","undirectedEdge","areDirectedNeighbors","areOutNeighbors","areInNeighbors","areUndirectedNeighbors","areNeighbors","areInboundNeighbors","areOutboundNeighbors","directedDegree","inboundDegree","degree","outboundDegree","inDegreeWithoutSelfLoops","outDegreeWithoutSelfLoops","directedDegreeWithoutSelfLoops","undirectedDegreeWithoutSelfLoops","inboundDegreeWithoutSelfLoops","loops","outboundDegreeWithoutSelfLoops","degreeWithoutSelfLoops","extremities","opposite","hasExtremity","isUndirected","isDirected","addNode","mergeNode","updateNode","dropEdge","dropDirectedEdge","dropUndirectedEdge","clearEdges","getAttribute","_attributes","getAttributes","hasAttribute","setAttribute","updateAttribute","removeAttribute","replaceAttributes","mergeAttributes","updateAttributes","updateEachNodeAttributes","updateEachEdgeAttributes","forEachAdjacencyEntry","forEachAdjacencyEntryWithOrphans","forEachAssymetricAdjacencyEntry","forEachAssymetricAdjacencyEntryWithOrphans","nodes","forEachNode","findNode","mapNodes","result","order","someNode","everyNode","filterNodes","reduceNodes","initialValue","accumulator","nodeEntries","serialized","import","merge","a","e","s","t","_sa","_ta","u","mergeUndirectedEdgeWithKey","mergeDirectedEdgeWithKey","addDirectedEdgeWithKey","undirectedByDefault","_edge$undirected","mergeUndirectedEdge","mergeDirectedEdge","addUndirectedEdge","addDirectedEdge","nullCopy","emptyCopy","toJSON","export","toString","inspect","multiIndex","tmp","label","desc","startsWith","dummy","for","verb","generateKey","_ref","forEachName","toUpperCase","mapName","ea","sa","ta","filterName","reduceName","findEdgeName","someName","everyName","originalName","capitalizedSingular","findName","DirectedGraph","finalOptions","_Graph","UndirectedGraph","_Graph2","MultiGraph","_Graph3","MultiDirectedGraph","_Graph4","MultiUndirectedGraph","_Graph5","attachStaticFromMethod","instance","__extends","extendStatics","d","b","setPrototypeOf","__proto__","p","__","__importDefault","mod","__esModule","animate_1","require","easings_1","utils_1","types_1","DEFAULT_ZOOMING_RATIO","Camera","_super","x","y","angle","ratio","minRatio","maxRatio","nextFrame","previousState","enabled","getState","camera","setState","enable","disable","hasState","getPreviousState","getBoundedRatio","r","max","min","validateState","validatedState","isAnimated","validState","updateState","animate","opts","ANIMATE_DEFAULTS","easing","default","start","Date","now","initialState","duration","animationCallback","coefficient","newState","requestFrame","cancelFrame","animatedZoom","factorOrOptions","factor","animatedUnzoom","animatedReset","TypedEventEmitter","__assign","getWheelDelta","getTouchCoords","getTouchesArray","getWheelCoords","getMouseCoords","getPosition","dom","bbox","getBoundingClientRect","clientX","left","clientY","top","res","sigmaDefaultPrevented","preventSigmaDefault","original","delta","MAX_TOUCHES","touches","map","touch","deltaY","detail","Captor","container","renderer","__createBinding","k2","__setModuleDefault","v","__importStar","captor_1","DRAG_TIMEOUT","DRAGGED_EVENTS_TOLERANCE","MOUSE_INERTIA_DURATION","MOUSE_INERTIA_RATIO","MOUSE_ZOOM_DURATION","ZOOMING_RATIO","DOUBLE_CLICK_TIMEOUT","DOUBLE_CLICK_ZOOMING_RATIO","DOUBLE_CLICK_ZOOMING_DURATION","MouseCaptor","draggedEvents","downStartTime","lastMouseX","lastMouseY","isMouseDown","isMoving","movingTimeout","startCameraState","clicks","doubleClickTimeout","currentWheelDirection","handleClick","handleRightClick","handleDown","handleUp","handleMove","handleWheel","handleOut","document","kill","clearTimeout","handleDoubleClick","setTimeout","preventDefault","stopPropagation","mouseCoords","getCamera","newRatio","getViewportZoomedState","button","_a","cameraState","previousCameraState","refresh","window","eX","eY","lastMouse","viewportToFramedGraph","mouse","offsetX","offsetY","wheelCoords","ratioDiff","wheelDirection","lastWheelTriggerTime","__read","ar","TOUCH_INERTIA_RATIO","TOUCH_INERTIA_DURATION","TouchCaptor","hasMoved","touchMode","startTouchesPositions","handleStart","handleLeave","getDimensions","width","offsetWidth","height","offsetHeight","dispatchRelatedMouseEvent","mousePosition","mouseEvent","MouseEvent","altKey","ctrlKey","isFakeSigmaMouseEvent","dispatchEvent","lastTouches","lastTouchesPositions","_b","x0","y0","_c","x1","y1","startTouchesAngle","atan2","startTouchesDistance","sqrt","pow","touchesPositions","some","idx","startPosition","xStart","yStart","newCameraState","_d","_e","angleDiff","hypot","dimensions","touchGraphPosition","smallestDimension","dx","dy","cos","sin","edgeLabelsToDisplayFromNodes","LabelGrid","LabelCandidate","compare","first","second","cellSize","columns","rows","cells","resizeAndClear","ceil","getIndex","pos","xIndex","yIndex","add","candidate","cell","organize","sort","getLabelsToDisplay","density","cellArea","scaledCellArea","scaledDensity","labelsToDisplayPerCell","labels","params","hoveredNode","highlightedNodes","displayedNodeLabels","worthyEdges","_","rectangleCollidesWithQuad","squareCollidesWithQuad","getCircumscribedAlignedRectangle","isRectangleAligned","extend_1","BLOCKS","MAX_LEVEL","OUTSIDE_BLOCK","X_OFFSET","Y_OFFSET","WIDTH_OFFSET","HEIGHT_OFFSET","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","hasWarnedTooMuchOutside","rect","x2","y2","heightVector","tl","tr","bl","br","xL","xR","yT","yB","qx","qy","qw","qh","h","pointIsInQuad","xmp","ymp","buildQuadrants","maxLevel","stack","level","block","topLeftBlock","topRightBlock","bottomLeftBlock","bottomRightBlock","hw","hh","insertNode","containers","collidingWithTopLeft","collidingWithTopRight","collidingWithBottomLeft","collidingWithBottomRight","collisions","reduce","acc","getNodesInAxisAlignedRectangleArea","collectedNodes","QuadTree","cache","lastRectangle","L","Float32Array","boundaries","resize","point","quad","rectangle","lr","abs","Sigma","sigma_1","camera_1","quadtree_1","mouse_1","drawEdgeLabel","settings","edgeLabelSize","font","edgeLabelFont","weight","edgeLabelWeight","color","edgeLabelColor","attribute","fillStyle","sSize","tSize","sx","sy","tx","ty","cx","cy","textLength","measureText","ellipsis","acos","asin","PI","save","translate","rotate","fillText","restore","label_1","drawHover","labelSize","labelFont","labelWeight","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","PADDING","textWidth","boxWidth","round","boxHeight","radius","angleRadian","xDeltaCoord","beginPath","moveTo","lineTo","arc","closePath","fill","drawLabel","labelColor","createEdgeCompoundProgram","AbstractEdgeProgram","program_1","gl","vertexShaderSource","fragmentShaderSource","points","AbstractProgram","programClasses","EdgeCompoundProgram","programs","ProgramClass","bufferData","program","allocate","capacity","computeIndices","render","process","hidden","offset","createNodeCompoundProgram","AbstractNodeProgram","positionLocation","getAttribLocation","sizeLocation","colorLocation","matrixLocation","getUniformLocation","ratioLocation","scaleLocation","enableVertexAttribArray","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","UNSIGNED_BYTE","NodeCompoundProgram","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","vertexShader","loadVertexShader","fragmentShader","loadFragmentShader","loadProgram","DYNAMIC_DRAW","hasNothingToRender","edge_1","edge_arrowHead_1","edge_clamped_1","EdgeArrowProgram","edge_arrowHead_vert_glsl_1","edge_arrowHead_frag_glsl_1","POINTS","ATTRIBUTES","STRIDE","EdgeArrowHeadProgram","normalLocation","radiusLocation","barycentricLocation","sqrtZoomRatioLocation","correctionRatioLocation","i_1","thickness","floatColor","n1","n2","useProgram","uniformMatrix3fv","matrix","uniform1f","correctionRatio","drawArrays","TRIANGLES","edge_clamped_vert_glsl_1","edge_frag_glsl_1","EdgeClampedProgram","indicesBuffer","canUse32BitsIndices","IndicesArray","Uint32Array","Uint16Array","indicesArray","indicesType","UNSIGNED_INT","UNSIGNED_SHORT","ELEMENT_ARRAY_BUFFER","indices","c","STATIC_DRAW","drawElements","edge_vert_glsl_1","EdgeProgram","node_fast_vert_glsl_1","node_fast_frag_glsl_1","node_1","NodeFastProgram","scalingRatio","toStringTag","loadShader","glType","VERTEX_SHADER","FRAGMENT_SHADER","shader","createShader","shaderSource","compileShader","successfullyCompiled","getShaderParameter","COMPILE_STATUS","infoLog","getShaderInfoLog","deleteShader","shaders","createProgram","attachShader","linkProgram","successfullyLinked","getProgramParameter","LINK_STATUS","deleteProgram","resolveSettings","validateSettings","DEFAULT_EDGE_PROGRAM_CLASSES","DEFAULT_NODE_PROGRAM_CLASSES","DEFAULT_SETTINGS","hover_1","edge_label_1","node_fast_1","edge_arrow_1","labelDensity","minCameraRatio","maxCameraRatio","resolvedSettings","nodeProgramClasses","edgeProgramClasses","hideEdgesOnMove","hideLabelsOnMove","renderLabels","renderEdgeLabels","enableEdgeClickEvents","enableEdgeWheelEvents","enableEdgeHoverEvents","defaultNodeColor","defaultNodeType","defaultEdgeColor","defaultEdgeType","stagePadding","labelGridCellSize","labelRenderedSizeThreshold","nodeReducer","edgeReducer","zIndex","labelRenderer","hoverRenderer","edgeLabelRenderer","allowInvalidContainer","nodeHoverProgramClasses","circle","arrow","line","__values","labels_1","settings_1","touch_1","matrices_1","edge_collisions_1","X_LABEL_MARGIN","Y_LABEL_MARGIN","applyNodeDefaults","highlighted","forceLabel","applyEdgeDefaults","elements","canvasContexts","webGLContexts","activeListeners","quadtree","labelGrid","nodeDataCache","edgeDataCache","nodesWithForcedLabels","edgesWithForcedLabels","nodeExtent","identity","invMatrix","customBBox","normalizationFunction","createNormalizationFunction","cameraSizeRatio","pixelRatio","getPixelRatio","displayedLabels","hoveredEdge","renderFrame","renderHighlightedNodesFrame","needToProcess","needToSoftProcess","checkEdgesEventsFrame","nodePrograms","nodeHoverPrograms","edgePrograms","validateGraph","HTMLElement","createWebGLContext","preserveDrawingBuffer","createCanvasContext","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","BLEND","NodeProgramClass","NodeHoverProgram","hoverNodes","EdgeProgramClass","bindCameraHandlers","mouseCaptor","touchCaptor","bindEventHandlers","bindGraphHandlers","handleSettingsUpdate","createCanvas","id","canvas","createElement","class","appendChild","contextOptions","antialias","getContext","_scheduleRefresh","mouseIsOnNode","nodeX","nodeY","getQuadNodes","mouseGraphPosition","getNodeAtPosition","quadNodes","minDistance","nodeAtPosition","nodePosition","framedGraphToViewport","scaleSize","distance","handleResize","baseEvent","event","nodeToHover","scheduleHighlightedNodesRender","checkEdgeHoverEvents","createMouseListener","eventType","getEdgeAtPoint","graphUpdate","softGraphUpdate","dropNodeGraphUpdate","dropEdgeGraphUpdate","clearEdgesGraphUpdate","clearGraphUpdate","unbindGraphHandlers","payload","edgeToHover","e_1","isPixelColored","viewportToGraph","graphX","graphY","transformationRatio","someEdge","sourceId","targetId","xs","ys","xt","yt","graphLength","graphToViewport","vp_xs","vp_ys","vp_xt","vp_yt","viewportLength","filterEdges","edgeAttributes","sourcePosition","targetPosition","doEdgeCollideWithPoint","selectedEdge","highestZIndex","edges_1","edges_1_1","getEdgeAttribute","e_1_1","return","keepArrays","nodeZExtent","edgeZExtent","graphExtent","nullCamera","nullCameraMatrix","matrixFromCamera","getGraphDimensions","getSetting","nodesPerPrograms","attr","getNodeAttributes","applyTo","zIndexOrdering","nodeProgram","edgesPerPrograms","getEdgeAttributes","_refresh","labelsToDisplay","edgeLabels","clearRect","edgeLabelsToDisplay","renderHighlightedNodes","hovers","nodesToRender","COLOR_BUFFER_BIT","exitRender","updateCachedValues","moving","viewportDimensions","graphDimensions","padding","getMatrixImpact","getContainer","getGraph","setGraph","getMouseCaptor","getTouchCaptor","extent","getNodeDisplayData","getEdgeDisplayData","getSettings","setSetting","updateSetting","previousWidth","previousHeight","style","scale","viewport","scheduleRefresh","viewportTarget","center","graphMousePosition","graphCenterPosition","viewRectangle","marginX","marginY","p1","p2","coordinates","override","recomputeMatrix","viewportPos","multiplyVec2","viewportPoint","inverse","graphPoint","getBBox","getCustomBBox","setCustomBBox","firstChild","removeChild","getCanvases","events_1","rawEmitter","animateNodes","index_1","targets","startPositions","attrs","getNodeAttribute","frame","setNodeAttribute","HTML_COLORS","black","silver","gray","grey","white","maroon","red","purple","fuchsia","green","lime","olive","yellow","navy","blue","teal","aqua","darkblue","mediumblue","darkgreen","darkcyan","deepskyblue","darkturquoise","mediumspringgreen","springgreen","cyan","midnightblue","dodgerblue","lightseagreen","forestgreen","seagreen","darkslategray","darkslategrey","limegreen","mediumseagreen","turquoise","royalblue","steelblue","darkslateblue","mediumturquoise","indigo","darkolivegreen","cadetblue","cornflowerblue","rebeccapurple","mediumaquamarine","dimgray","dimgrey","slateblue","olivedrab","slategray","slategrey","lightslategray","lightslategrey","mediumslateblue","lawngreen","chartreuse","aquamarine","skyblue","lightskyblue","blueviolet","darkred","darkmagenta","saddlebrown","darkseagreen","lightgreen","mediumpurple","darkviolet","palegreen","darkorchid","yellowgreen","sienna","brown","darkgray","darkgrey","lightblue","greenyellow","paleturquoise","lightsteelblue","powderblue","firebrick","darkgoldenrod","mediumorchid","rosybrown","darkkhaki","mediumvioletred","indianred","peru","chocolate","tan","lightgray","lightgrey","thistle","orchid","goldenrod","palevioletred","crimson","gainsboro","plum","burlywood","lightcyan","lavender","darksalmon","violet","palegoldenrod","lightcoral","khaki","aliceblue","honeydew","azure","sandybrown","wheat","beige","whitesmoke","mintcream","ghostwhite","salmon","antiquewhite","linen","lightgoldenrodyellow","oldlace","magenta","deeppink","orangered","tomato","hotpink","coral","darkorange","lightsalmon","orange","lightpink","pink","gold","peachpuff","navajowhite","moccasin","bisque","mistyrose","blanchedalmond","papayawhip","lavenderblush","seashell","cornsilk","lemonchiffon","floralwhite","snow","lightyellow","ivory","cubicInOut","cubicOut","cubicIn","quadraticInOut","quadraticOut","quadraticIn","linear","easings","pixels","Uint8Array","readPixels","drawingBufferHeight","RGBA","xS","yS","xT","extractPixel","getCorrectionRatio","floatArrayColor","parseColor","assignDeep","is_graph_1","data_1","objects","_i","tag","devicePixelRatio","xMin","xMax","yMin","yMax","minX","maxX","minY","maxY","dX","dY","getter","zA","zB","requestAnimationFrame","cancelAnimationFrame","requestID","INT8","Int8Array","INT32","Int32Array","FLOAT32","RGBA_TEST_REGEX","RGBA_EXTRACT_REGEX","val","g","parseInt","charAt","test","match","FLOAT_COLOR_CACHE","htmlColor","parsed","viewportRatio","graphRatio","multiply","webgl2","WebGL2RenderingContext","getExtension","isFinite","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","z","b0","b1"],"sourceRoot":""}